<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="py__cu__linear__operator_8pyx" kind="file" language="Python">
    <compoundname>py_cu_linear_operator.pyx</compoundname>
    <innerclass refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator" prot="public">imate::_cu_linear_operator::py_cu_linear_operator::pycuLinearOperator</innerclass>
    <innernamespace refid="namespaceimate_1_1__cu__linear__operator_1_1py__cu__linear__operator">imate::_cu_linear_operator::py_cu_linear_operator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-FileType:<sp/>SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>libc.stdlib<sp/>cimport<sp/>exit</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.._definitions.types<sp/>cimport<sp/>DataType,<sp/>IndexType,<sp/>LongIndexType,<sp/>FlagType</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.cu_linear_operator<sp/>cimport<sp/>cuLinearOperator</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.._cuda_utilities<sp/>cimport<sp/>py_query_device,<sp/>DeviceProperties</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>====================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pycu<sp/>Linear<sp/>Operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>====================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">cdef<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">pycuLinearOperator(object):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>__cinit__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad2e2e755b1a2f0dde6f6871902cce129" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad2e2e755b1a2f0dde6f6871902cce129" kindref="member">__cinit__</ref>(self):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>attributes<sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>member<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="41" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="42" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="43" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad70fc31b2845f30000de7a2cb8dd7256" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad70fc31b2845f30000de7a2cb8dd7256" kindref="member">long_index_type_name</ref>long_index_type_name<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="44" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad3e93dd1035b369d086df58c0eb1929c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad3e93dd1035b369d086df58c0eb1929c" kindref="member">num_gpu_devices</ref>num_gpu_devices<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="45" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a34ec228b3da60e9c08a4c9fc8c00a8f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a34ec228b3da60e9c08a4c9fc8c00a8f5" kindref="member">device_properties_dict</ref>device_properties_dict<sp/>=<sp/><ref refid="namespacepy__query__device" kindref="compound">py_query_device</ref>()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>GPU<sp/>device<sp/>is<sp/>found.<sp/>If<sp/>not,<sp/>this<sp/>will<sp/>raise<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sooner<sp/>than<sp/>the<sp/>C++<sp/>code<sp/>aborting<sp/>the<sp/>whole<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_all_gpu_devices<sp/>=<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a34ec228b3da60e9c08a4c9fc8c00a8f5" kindref="member">device_properties_dict</ref>device_properties_dict[</highlight><highlight class="stringliteral">&apos;num_devices&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_all_gpu_devices<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&apos;No<sp/>cuda-capable<sp/>gpu<sp/>device<sp/>was<sp/>found.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>LongIndexType<sp/>is<sp/>a<sp/>signed<sp/>or<sp/>unsigned<sp/>type.<sp/>If<sp/>-1<sp/>overflows,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>type<sp/>is<sp/>unsigned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>LongIndexType<sp/>long_index<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>long_index<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned_type<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned_type<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>long<sp/>index<sp/>type<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sizeof(LongIndexType)<sp/>==<sp/>4:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>unsigned_type:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad70fc31b2845f30000de7a2cb8dd7256" kindref="member">long_index_type_name</ref>long_index_type_name<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;uint32&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad70fc31b2845f30000de7a2cb8dd7256" kindref="member">long_index_type_name</ref>long_index_type_name<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;int32&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>sizeof(LongIndexType)<sp/>==<sp/>8:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>unsigned_type:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad70fc31b2845f30000de7a2cb8dd7256" kindref="member">long_index_type_name</ref>long_index_type_name<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;uint64&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad70fc31b2845f30000de7a2cb8dd7256" kindref="member">long_index_type_name</ref>long_index_type_name<sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;int64&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&apos;&quot;LongIndexType&quot;<sp/>has<sp/>Unconventional<sp/>byte<sp/>size.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>__dealloc__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad68c435ad9097eac815e0ffc884c69a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ad68c435ad9097eac815e0ffc884c69a7" kindref="member">__dealloc__</ref>(self):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float<sp/>!=<sp/>NULL:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double<sp/>!=<sp/>NULL:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>num<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>LongIndexType<sp/>get_num_rows(self)<sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>*:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return<sp/>Number<sp/>of<sp/>rows<sp/>of<sp/>matrix.</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>LongIdexType</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>==<sp/>b</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float<sp/>!=<sp/>NULL:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float.get_num_rows()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>==<sp/>b</highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double<sp/>!=<sp/>NULL:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double.get_num_rows()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Linear<sp/>operator<sp/>is<sp/>not<sp/>set.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>num<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>LongIndexType<sp/>get_num_columns(self)<sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>*:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return<sp/>Number<sp/>of<sp/>rows<sp/>of<sp/>matrix.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>LongIdexType</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>==<sp/>b</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float<sp/>!=<sp/>NULL:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float.get_num_columns()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>==<sp/>b</highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double<sp/>!=<sp/>NULL:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double.get_num_columns()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Linear<sp/>operator<sp/>is<sp/>not<sp/>set.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>num<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1af857f9ab74faf2e780a4da5847a94ccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1af857f9ab74faf2e780a4da5847a94ccf" kindref="member">get_num_parameters</ref>(self):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:<sp/>Number<sp/>of<sp/>parameters.</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>IndexType</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>==<sp/>b</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float<sp/>!=<sp/>NULL:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1af857f9ab74faf2e780a4da5847a94ccf" kindref="member">get_num_parameters</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>==<sp/>b</highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double<sp/>!=<sp/>NULL:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1af857f9ab74faf2e780a4da5847a94ccf" kindref="member">get_num_parameters</ref>()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Linear<sp/>operator<sp/>is<sp/>not<sp/>set.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>data<sp/>type<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>char*<sp/>get_data_type_name(self)<sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>*:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>==<sp/>NULL:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&apos;Linear<sp/>operator<sp/>data<sp/>type<sp/>is<sp/>not<sp/>set.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>linear<sp/>operator<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>cuLinearOperator[float]*<sp/>get_linear_operator_float(self)<sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>*:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float<sp/>==<sp/>NULL:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&apos;Linear<sp/>operator<sp/>(float<sp/>type)<sp/>is<sp/>not<sp/>set.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>!=<sp/>b</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&apos;Wrong<sp/>accessors<sp/>is<sp/>called.<sp/>The<sp/>type<sp/>of<sp/>the<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LinearOperator<sp/>object<sp/>is:<sp/>%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>linear<sp/>operator<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>cuLinearOperator[double]*<sp/>get_linear_operator_double(self)<sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>*:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double<sp/>==<sp/>NULL:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&apos;Linear<sp/>operator<sp/>(double<sp/>type)<sp/>is<sp/>not<sp/>set.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name<sp/>!=<sp/>b</highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&apos;Wrong<sp/>accessors<sp/>is<sp/>called.<sp/>The<sp/>type<sp/>of<sp/>the<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LinearOperator<sp/>object<sp/>is:<sp/>%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a590895c610d60dab2a75978cf40accb3" kindref="member">data_type_name</ref>data_type_name)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=====================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>device<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=====================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab32fbb9ba9949c874bd6dfaf056f2956" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab32fbb9ba9949c874bd6dfaf056f2956" kindref="member">get_device_properties</ref>(self):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a34ec228b3da60e9c08a4c9fc8c00a8f5" kindref="member">device_properties_dict</ref>device_properties_dict<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a34ec228b3da60e9c08a4c9fc8c00a8f5" kindref="member">device_properties_dict</ref>device_properties_dict<sp/>=<sp/><ref refid="namespacepy__query__device" kindref="compound">py_query_device</ref>()</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a34ec228b3da60e9c08a4c9fc8c00a8f5" kindref="member">device_properties_dict</ref>device_properties_dict</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>set<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a6164cb6b2340ecc2f400837ac6cac49c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a6164cb6b2340ecc2f400837ac6cac49c" kindref="member">set_parameters</ref>(self,<sp/>parameters_):</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>only<sp/>used<sp/>for<sp/>the<sp/>test<sp/>unit<sp/>of<sp/>this<sp/>class.<sp/>For<sp/>the</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual<sp/>computations,<sp/>the<sp/>parameters<sp/>are<sp/>set<sp/>though<sp/>``cLinearOperator``</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>directly,<sp/>but<sp/>not<sp/>by<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>numpy.isscalar(parameters_):</highlight></codeline>
<codeline lineno="215" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters<sp/>=<sp/>numpy.array([parameters_],<sp/>dtype=float)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters<sp/>=<sp/>parameters_</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>cpdef<sp/>void<sp/>dot(self,<sp/>vector,<sp/>product)<sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>*:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>vector.dtype<sp/>!=<sp/>product.dtype:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&apos;The<sp/>input<sp/>vector<sp/>and<sp/>product<sp/>should<sp/>have<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>memory<sp/>views<sp/>for<sp/>input<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float[:]<sp/>mv_vector_float</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double[:]<sp/>mv_vector_double</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>memory<sp/>views<sp/>for<sp/>output<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float[:]<sp/>mv_product_float</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double[:]<sp/>mv_product_double</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>memoryviews<sp/>for<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float[:]<sp/>mv_parameters_float</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double[:]<sp/>mv_parameters_double</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>c<sp/>pointers<sp/>for<sp/>input<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float*<sp/>c_vector_float</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double*<sp/>c_vector_double</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>c<sp/>pointers<sp/>for<sp/>output<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float*<sp/>c_product_float</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double*<sp/>c_product_double</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>c<sp/>pointers<sp/>for<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float*<sp/>c_parameters_float</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double*<sp/>c_parameters_double</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dispatch<sp/>to<sp/>single,<sp/>double<sp/>or<sp/>quadro<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>vector.dtype<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>input<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a980c5d2c36fd2a39c4b1fa0e4d95200f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_vector_float<sp/>=<sp/>vector</highlight></codeline>
<codeline lineno="259" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a00a8da8d3f09fabcd0f5afcedd36a202" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_vector_float<sp/>=<sp/>&amp;mv_vector_float[0]</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>output<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab52c327af711c9e48aac898318fe47a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_product_float<sp/>=<sp/>product</highlight></codeline>
<codeline lineno="263" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a97a3fd08eb87b9669fc991d46befd551" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_product_float<sp/>=<sp/>&amp;mv_product_float[0]</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a53805700d20c92b3940bc49aabeaeb0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_parameters_float<sp/>=<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters.astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a69e2477e0c44567730867e79c461d4c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_parameters_float<sp/>=<sp/>&amp;mv_parameters_float[0]</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a6164cb6b2340ecc2f400837ac6cac49c" kindref="member">set_parameters</ref>(c_parameters_float)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>c<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float.dot(c_vector_float,<sp/>c_product_float)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>vector.dtype<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>input<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a6e3bfb5b69d3a1c20a5d8e97cf0c760a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_vector_double<sp/>=<sp/>vector</highlight></codeline>
<codeline lineno="278" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a519f666e27aeeea156f1977eb158836c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_vector_double<sp/>=<sp/>&amp;mv_vector_double[0]</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>output<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a34552cc9976dcc9c41acdbd98f20b0ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_product_double<sp/>=<sp/>product</highlight></codeline>
<codeline lineno="282" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a75639d07410d66f075f684801a481a60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_product_double<sp/>=<sp/>&amp;mv_product_double[0]</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ae5ef36d17e11c2fdf929578538eab9e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_parameters_double<sp/>=<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters.astype(</highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287" refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ac7741da809535bd926ce7177df9bbafc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_parameters_double<sp/>=<sp/>&amp;mv_parameters_double[0]</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a6164cb6b2340ecc2f400837ac6cac49c" kindref="member">set_parameters</ref>(c_parameters_double)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>c<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double.dot(c_vector_double,<sp/>c_product_double)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&apos;Vector<sp/>type<sp/>should<sp/>be<sp/>either<sp/>&quot;float32&quot;,<sp/>or<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&quot;float64&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>transpose<sp/>dot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>cpdef<sp/>void<sp/>transpose_dot(self,<sp/>vector,<sp/>product)<sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>*:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>vector.dtype<sp/>!=<sp/>product.dtype:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&apos;The<sp/>input<sp/>vector<sp/>and<sp/>product<sp/>should<sp/>have<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>memory<sp/>views<sp/>for<sp/>input<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float[:]<sp/>mv_vector_float</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double[:]<sp/>mv_vector_double</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>memory<sp/>views<sp/>for<sp/>output<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float[:]<sp/>mv_product_float</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double[:]<sp/>mv_product_double</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>memoryviews<sp/>for<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float[:]<sp/>mv_parameters_float</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double[:]<sp/>mv_parameters_double</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>c<sp/>pointers<sp/>for<sp/>input<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float*<sp/>c_vector_float</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double*<sp/>c_vector_double</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>c<sp/>pointers<sp/>for<sp/>output<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float*<sp/>c_product_float</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double*<sp/>c_product_double</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Declare<sp/>c<sp/>pointers<sp/>for<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>float*<sp/>c_parameters_float</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>double*<sp/>c_parameters_double</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dispatch<sp/>to<sp/>single,<sp/>double<sp/>or<sp/>quadro<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>vector.dtype<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>input<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_vector_float<sp/>=<sp/>vector</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_vector_float<sp/>=<sp/>&amp;mv_vector_float[0]</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>output<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_product_float<sp/>=<sp/>product</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_product_float<sp/>=<sp/>&amp;mv_product_float[0]</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_parameters_float<sp/>=<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters.astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_parameters_float<sp/>=<sp/>&amp;mv_parameters_float[0]</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a6164cb6b2340ecc2f400837ac6cac49c" kindref="member">set_parameters</ref>(c_parameters_float)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>c<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1ab1db8b53cc39f299c0ab176fe25d9161" kindref="member">Aop_float</ref>Aop_float.transpose_dot(c_vector_float,<sp/>c_product_float)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>vector.dtype<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>input<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_vector_double<sp/>=<sp/>vector</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_vector_double<sp/>=<sp/>&amp;mv_vector_double[0]</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>output<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_product_double<sp/>=<sp/>product</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_product_double<sp/>=<sp/>&amp;mv_product_double[0]</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_parameters_double<sp/>=<sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a08350901fad0b286c9918eb568d6b386" kindref="member">parameters</ref>parameters.astype(</highlight><highlight class="stringliteral">&apos;float64&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_parameters_double<sp/>=<sp/>&amp;mv_parameters_double[0]</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a6164cb6b2340ecc2f400837ac6cac49c" kindref="member">set_parameters</ref>(c_parameters_double)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Call<sp/>c<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1__cu__linear__operator_1_1py__cu__linear__operator_1_1pycuLinearOperator_1a9aa210ef3b2c81721fb70411f3ddd328" kindref="member">Aop_double</ref>Aop_double.transpose_dot(c_vector_double,<sp/>c_product_double)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&apos;Vector<sp/>type<sp/>should<sp/>be<sp/>either<sp/>&quot;float32&quot;,<sp/>or<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&quot;float64&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cu_linear_operator/py_cu_linear_operator.pyx"/>
  </compounddef>
</doxygen>
