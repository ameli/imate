<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classimate_1_1linear__operator_1_1matrix_1_1Matrix" kind="class" language="Python" prot="public">
    <compoundname>imate::linear_operator::matrix::Matrix</compoundname>
    <basecompoundref refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator" prot="public" virt="non-virtual">imate.linear_operator.linear_operator.LinearOperator</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a53696c3a9ae57812f2c73444d5eafef6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.linear_operator.matrix.Matrix::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="278" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="278" bodyend="-1"/>
        <referencedby refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a413ec50ad36453760a7640af0d254aa5" compoundref="__interpolant__base_8py" startline="216" endline="229">imate.interpolator._interpolant_base.InterpolantBase._compute</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af4dff8144fb18580899069269f2f57eb" compoundref="__interpolant__base_8py" startline="152" endline="172">imate.interpolator._interpolant_base.InterpolantBase._compute_schatten_of_input_matrices</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a4ff7c835fefcd8c165079054d761accc" compoundref="affine__matrix__function_8py" startline="419" endline="434">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_nnz</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a86069251bea104ad377008baa28bdb31" compoundref="matrix_8py" startline="409" endline="424">imate.linear_operator.matrix.Matrix.get_nnz</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a27809a99fadd06e770f721cbf458a10c" compoundref="affine__matrix__function_8py" startline="385" endline="397">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_num_columns</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a8c03804e732e9424701017a6806bcf1d" compoundref="matrix_8py" startline="375" endline="387">imate.linear_operator.matrix.Matrix.get_num_columns</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1aedca2144eb8d12cd5a3a3ee6b99ce145" compoundref="affine__matrix__function_8py" startline="368" endline="380">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_num_rows</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1aa1d5bbfb80bb1818a4beccbfdfdcdac6" compoundref="matrix_8py" startline="358" endline="370">imate.linear_operator.matrix.Matrix.get_num_rows</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a64797c3a9604e757acf7b704b86e65df" compoundref="__eigenvalues__method_8py" startline="148" endline="208">imate.interpolator._eigenvalues_method.EigenvaluesMethod.initialize_interpolator</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a38aceabf70fe4c6fc59e7a1f5d1d3e0d" compoundref="affine__matrix__function_8py" startline="402" endline="414">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.is_sparse</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a920e8f58573ec99b8ae4f659beaf93b5" compoundref="matrix_8py" startline="392" endline="404">imate.linear_operator.matrix.Matrix.is_sparse</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1afd64ffb368b4d148dd70b8cda73ecd5b" compoundref="__interpolant__base_8py" startline="265" endline="297">imate.interpolator._interpolant_base.InterpolantBase.upper_bound</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a87e5341af8325f10607f47fa478594f8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.linear_operator.matrix.Matrix::num_parameters</definition>
        <argsstring></argsstring>
        <name>num_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="279" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="279" bodyend="-1"/>
        <referencedby refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a141c5ab67da4468867082b617a002424" compoundref="linear__operator_8py" startline="196" endline="214">imate.linear_operator.linear_operator.LinearOperator.get_num_parameters</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a3436c9c49dd882d424954d6af1c086b3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.linear_operator.matrix.Matrix::gpu_Aop</definition>
        <argsstring></argsstring>
        <name>gpu_Aop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="307" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="307" bodyend="-1"/>
        <referencedby refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1af41318d4848259505eb728b5f532758f" compoundref="linear__operator_8py" startline="114" endline="148">imate.linear_operator.linear_operator.LinearOperator.get_linear_operator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a6297e2fb26f8b9ba2c326e15834e6ede" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.linear_operator.matrix.Matrix::initialized_on_gpu</definition>
        <argsstring></argsstring>
        <name>initialized_on_gpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="308" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="308" bodyend="-1"/>
        <referencedby refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1af41318d4848259505eb728b5f532758f" compoundref="linear__operator_8py" startline="114" endline="148">imate.linear_operator.linear_operator.LinearOperator.get_linear_operator</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a490463d164d8876c510c842a61af95f9" compoundref="affine__matrix__function_8py" startline="295" endline="363">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.initialize</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a13fb6cb10798d95fcfc1d52f33dfd1cf" compoundref="matrix_8py" startline="286" endline="353">imate.linear_operator.matrix.Matrix.initialize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ac7f03f68624e3563b64bb006c0e4feaf" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.linear_operator.matrix.Matrix::num_gpu_devices</definition>
        <argsstring></argsstring>
        <name>num_gpu_devices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="322" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="322" bodyend="-1"/>
        <referencedby refid="classimate_1_1__cu__linear__operator_1_1py__cu__matrix_1_1pycuMatrix_1ae52f5431e26615b18aa4d9814ca6880d" compoundref="py__cu__matrix_8pyx" startline="461" endline="504">imate._cu_linear_operator.py_cu_matrix.pycuMatrix.set_csc_matrix_double</referencedby>
        <referencedby refid="classimate_1_1__cu__linear__operator_1_1py__cu__affine__matrix__function_1_1pycuAffineMatrixFunction_1ac786149a8102e2c4b293fae181ff2de8" compoundref="py__cu__affine__matrix__function_8pyx" startline="710" endline="778">imate._cu_linear_operator.py_cu_affine_matrix_function.pycuAffineMatrixFunction.set_csc_matrix_double</referencedby>
        <referencedby refid="classimate_1_1__cu__linear__operator_1_1py__cu__matrix_1_1pycuMatrix_1aed57bb00ae130cff66badb18ec76db06" compoundref="py__cu__matrix_8pyx" startline="413" endline="456">imate._cu_linear_operator.py_cu_matrix.pycuMatrix.set_csc_matrix_float</referencedby>
        <referencedby refid="classimate_1_1__cu__linear__operator_1_1py__cu__affine__matrix__function_1_1pycuAffineMatrixFunction_1a64d400272225f745284227c60be3c82d" compoundref="py__cu__affine__matrix__function_8pyx" startline="637" endline="705">imate._cu_linear_operator.py_cu_affine_matrix_function.pycuAffineMatrixFunction.set_csc_matrix_float</referencedby>
        <referencedby refid="classimate_1_1__cu__linear__operator_1_1py__cu__matrix_1_1pycuMatrix_1a72763ce89b6d575ce434694da2cf47f2" compoundref="py__cu__matrix_8pyx" startline="365" endline="408">imate._cu_linear_operator.py_cu_matrix.pycuMatrix.set_csr_matrix_double</referencedby>
        <referencedby refid="classimate_1_1__cu__linear__operator_1_1py__cu__affine__matrix__function_1_1pycuAffineMatrixFunction_1a16a41624da05c93662bb1e2a2669d519" compoundref="py__cu__affine__matrix__function_8pyx" startline="564" endline="632">imate._cu_linear_operator.py_cu_affine_matrix_function.pycuAffineMatrixFunction.set_csr_matrix_double</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a0edd01f50ac4d7487f0b47ce1cdbdcc6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.linear_operator.matrix.Matrix::cpu_Aop</definition>
        <argsstring></argsstring>
        <name>cpu_Aop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="348" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="348" bodyend="-1"/>
        <referencedby refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1af41318d4848259505eb728b5f532758f" compoundref="linear__operator_8py" startline="114" endline="148">imate.linear_operator.linear_operator.LinearOperator.get_linear_operator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a781c91c072eb4cf40b0bfdbdee2755c9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.linear_operator.matrix.Matrix::initialized_on_cpu</definition>
        <argsstring></argsstring>
        <name>initialized_on_cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="349" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="349" bodyend="-1"/>
        <referencedby refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1af41318d4848259505eb728b5f532758f" compoundref="linear__operator_8py" startline="114" endline="148">imate.linear_operator.linear_operator.LinearOperator.get_linear_operator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a968f987793a980830066d06ad7f6bd1b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.linear_operator.matrix.Matrix::gpu</definition>
        <argsstring></argsstring>
        <name>gpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="351" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="351" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1aa3b9583ad3551d68f701ef83a48fe296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.linear_operator.matrix.Matrix.__init__</definition>
        <argsstring>(self, A)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a53696c3a9ae57812f2c73444d5eafef6" kindref="member">A</ref></type>
          <defname>A</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Initializes attributes.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="269" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="269" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a13fb6cb10798d95fcfc1d52f33dfd1cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.linear_operator.matrix.Matrix.initialize</definition>
        <argsstring>(self, gpu, num_gpu_devices)</argsstring>
        <name>initialize</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a968f987793a980830066d06ad7f6bd1b" kindref="member">gpu</ref></type>
          <defname>gpu</defname>
        </param>
        <param>
          <type><ref refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ac7f03f68624e3563b64bb006c0e4feaf" kindref="member">num_gpu_devices</ref></type>
          <defname>num_gpu_devices</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Initializes the object.

Parameters
----------

gpu : bool
    If `True`, the matrix array will be initialized on GPU devices.

num_gpu_devices : int
    The number of GPU devices to use. If `0`, it uses the maximum
    number of available GPU devices.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="286" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="286" bodyend="353"/>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a9419f250b1cd609d1172b3d09d251a2b" compoundref="affine__matrix__function_8py" startline="317">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.initialized_on_gpu</references>
        <references refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1aabae3ed2584e6d9736b414530da4c12d" compoundref="linear__operator_8py" startline="40">imate.linear_operator.linear_operator.LinearOperator.initialized_on_gpu</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a6297e2fb26f8b9ba2c326e15834e6ede" compoundref="matrix_8py" startline="308">imate.linear_operator.matrix.Matrix.initialized_on_gpu</references>
        <referencedby refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1af41318d4848259505eb728b5f532758f" compoundref="linear__operator_8py" startline="114" endline="148">imate.linear_operator.linear_operator.LinearOperator.get_linear_operator</referencedby>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1aa1d5bbfb80bb1818a4beccbfdfdcdac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.linear_operator.matrix.Matrix.get_num_rows</definition>
        <argsstring>(self)</argsstring>
        <name>get_num_rows</name>
        <reimplements refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a388cf364763090fef6bfb00d6f4baeb1">get_num_rows</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the number of rows of the matrix.

Returns
-------

num_rows : int
    Number of rows of the matrix.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="358" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="358" bodyend="370"/>
        <references refid="classcCSCAffineMatrixFunction_1aa317fcff4d45590fd18e7a8ef14874f3" compoundref="c__csc__affine__matrix__function_8h" startline="65">cCSCAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcCSRAffineMatrixFunction_1ac554b13c20fb4e80323f500c36a84c74" compoundref="c__csr__affine__matrix__function_8h" startline="65">cCSRAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcDenseAffineMatrixFunction_1ab224b7527d1a747fc3bb21b28377d2a8" compoundref="c__dense__affine__matrix__function_8h" startline="62">cDenseAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcDenseMatrix_1ae5236ee1bbe5a407ff503c0499d1d0fd" compoundref="c__dense__matrix_8h" startline="67">cDenseMatrix&lt; DataType &gt;::A</references>
        <references refid="classcuCSCAffineMatrixFunction_1aa49a176de2cea4fe351adfdd6fc08a19" compoundref="cu__csc__affine__matrix__function_8h" startline="67">cuCSCAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcuCSRAffineMatrixFunction_1ab0ac5e13678f04d7a31d56b767c50f60" compoundref="cu__csr__affine__matrix__function_8h" startline="67">cuCSRAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcuDenseAffineMatrixFunction_1a19eeefc3d48677a73232e478cb6fe899" compoundref="cu__dense__affine__matrix__function_8h" startline="64">cuDenseAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" compoundref="__interpolant__base_8py" startline="80">imate.interpolator._interpolant_base.InterpolantBase.A</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1adee1352dcd1822c2ffa56b84c521c042" compoundref="affine__matrix__function_8py" startline="286">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.A</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a53696c3a9ae57812f2c73444d5eafef6" compoundref="matrix_8py" startline="278">imate.linear_operator.matrix.Matrix.A</references>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a2afc59a97d73e88bf617d4733f81983b" compoundref="affine__matrix__function_8py" startline="439" endline="456">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_density</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ae3849fd328140928cc5762cc319e16d0" compoundref="matrix_8py" startline="429" endline="446">imate.linear_operator.matrix.Matrix.get_density</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a4ff7c835fefcd8c165079054d761accc" compoundref="affine__matrix__function_8py" startline="419" endline="434">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_nnz</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a86069251bea104ad377008baa28bdb31" compoundref="matrix_8py" startline="409" endline="424">imate.linear_operator.matrix.Matrix.get_nnz</referencedby>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a8c03804e732e9424701017a6806bcf1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.linear_operator.matrix.Matrix.get_num_columns</definition>
        <argsstring>(self)</argsstring>
        <name>get_num_columns</name>
        <reimplements refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a7daf35fa232c7599edda6fb420f384db">get_num_columns</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the number of columns of the matrix.

Returns
-------

num_columns : int
    Number of columns of the matrix.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="375" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="375" bodyend="387"/>
        <references refid="classcCSCAffineMatrixFunction_1aa317fcff4d45590fd18e7a8ef14874f3" compoundref="c__csc__affine__matrix__function_8h" startline="65">cCSCAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcCSRAffineMatrixFunction_1ac554b13c20fb4e80323f500c36a84c74" compoundref="c__csr__affine__matrix__function_8h" startline="65">cCSRAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcDenseAffineMatrixFunction_1ab224b7527d1a747fc3bb21b28377d2a8" compoundref="c__dense__affine__matrix__function_8h" startline="62">cDenseAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcDenseMatrix_1ae5236ee1bbe5a407ff503c0499d1d0fd" compoundref="c__dense__matrix_8h" startline="67">cDenseMatrix&lt; DataType &gt;::A</references>
        <references refid="classcuCSCAffineMatrixFunction_1aa49a176de2cea4fe351adfdd6fc08a19" compoundref="cu__csc__affine__matrix__function_8h" startline="67">cuCSCAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcuCSRAffineMatrixFunction_1ab0ac5e13678f04d7a31d56b767c50f60" compoundref="cu__csr__affine__matrix__function_8h" startline="67">cuCSRAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcuDenseAffineMatrixFunction_1a19eeefc3d48677a73232e478cb6fe899" compoundref="cu__dense__affine__matrix__function_8h" startline="64">cuDenseAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" compoundref="__interpolant__base_8py" startline="80">imate.interpolator._interpolant_base.InterpolantBase.A</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1adee1352dcd1822c2ffa56b84c521c042" compoundref="affine__matrix__function_8py" startline="286">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.A</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a53696c3a9ae57812f2c73444d5eafef6" compoundref="matrix_8py" startline="278">imate.linear_operator.matrix.Matrix.A</references>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a2afc59a97d73e88bf617d4733f81983b" compoundref="affine__matrix__function_8py" startline="439" endline="456">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_density</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ae3849fd328140928cc5762cc319e16d0" compoundref="matrix_8py" startline="429" endline="446">imate.linear_operator.matrix.Matrix.get_density</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a4ff7c835fefcd8c165079054d761accc" compoundref="affine__matrix__function_8py" startline="419" endline="434">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_nnz</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a86069251bea104ad377008baa28bdb31" compoundref="matrix_8py" startline="409" endline="424">imate.linear_operator.matrix.Matrix.get_nnz</referencedby>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a920e8f58573ec99b8ae4f659beaf93b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.linear_operator.matrix.Matrix.is_sparse</definition>
        <argsstring>(self)</argsstring>
        <name>is_sparse</name>
        <reimplements refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a4fcac45257ee5b20b2f77b04ccbea681">is_sparse</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Determines whether the matrix is dense or sparse.

Returns
-------

sparse : bool
    If `True`, the matrix is sparse. Otherwise, the matrix is dense.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="392" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="392" bodyend="404"/>
        <references refid="classcCSCAffineMatrixFunction_1aa317fcff4d45590fd18e7a8ef14874f3" compoundref="c__csc__affine__matrix__function_8h" startline="65">cCSCAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcCSRAffineMatrixFunction_1ac554b13c20fb4e80323f500c36a84c74" compoundref="c__csr__affine__matrix__function_8h" startline="65">cCSRAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcDenseAffineMatrixFunction_1ab224b7527d1a747fc3bb21b28377d2a8" compoundref="c__dense__affine__matrix__function_8h" startline="62">cDenseAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcDenseMatrix_1ae5236ee1bbe5a407ff503c0499d1d0fd" compoundref="c__dense__matrix_8h" startline="67">cDenseMatrix&lt; DataType &gt;::A</references>
        <references refid="classcuCSCAffineMatrixFunction_1aa49a176de2cea4fe351adfdd6fc08a19" compoundref="cu__csc__affine__matrix__function_8h" startline="67">cuCSCAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcuCSRAffineMatrixFunction_1ab0ac5e13678f04d7a31d56b767c50f60" compoundref="cu__csr__affine__matrix__function_8h" startline="67">cuCSRAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcuDenseAffineMatrixFunction_1a19eeefc3d48677a73232e478cb6fe899" compoundref="cu__dense__affine__matrix__function_8h" startline="64">cuDenseAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" compoundref="__interpolant__base_8py" startline="80">imate.interpolator._interpolant_base.InterpolantBase.A</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1adee1352dcd1822c2ffa56b84c521c042" compoundref="affine__matrix__function_8py" startline="286">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.A</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a53696c3a9ae57812f2c73444d5eafef6" compoundref="matrix_8py" startline="278">imate.linear_operator.matrix.Matrix.A</references>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a2afc59a97d73e88bf617d4733f81983b" compoundref="affine__matrix__function_8py" startline="439" endline="456">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_density</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ae3849fd328140928cc5762cc319e16d0" compoundref="matrix_8py" startline="429" endline="446">imate.linear_operator.matrix.Matrix.get_density</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a4ff7c835fefcd8c165079054d761accc" compoundref="affine__matrix__function_8py" startline="419" endline="434">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_nnz</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a86069251bea104ad377008baa28bdb31" compoundref="matrix_8py" startline="409" endline="424">imate.linear_operator.matrix.Matrix.get_nnz</referencedby>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a86069251bea104ad377008baa28bdb31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.linear_operator.matrix.Matrix.get_nnz</definition>
        <argsstring>(self)</argsstring>
        <name>get_nnz</name>
        <reimplements refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a7ce016ae30a0c3d5f2cdf333ddde2743">get_nnz</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the number of non-zero elements of the matrix.

Returns
-------

nnz : int
    Number of nonzero elements of the matrix.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="409" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="409" bodyend="424"/>
        <references refid="classcCSCAffineMatrixFunction_1aa317fcff4d45590fd18e7a8ef14874f3" compoundref="c__csc__affine__matrix__function_8h" startline="65">cCSCAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcCSRAffineMatrixFunction_1ac554b13c20fb4e80323f500c36a84c74" compoundref="c__csr__affine__matrix__function_8h" startline="65">cCSRAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcDenseAffineMatrixFunction_1ab224b7527d1a747fc3bb21b28377d2a8" compoundref="c__dense__affine__matrix__function_8h" startline="62">cDenseAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcDenseMatrix_1ae5236ee1bbe5a407ff503c0499d1d0fd" compoundref="c__dense__matrix_8h" startline="67">cDenseMatrix&lt; DataType &gt;::A</references>
        <references refid="classcuCSCAffineMatrixFunction_1aa49a176de2cea4fe351adfdd6fc08a19" compoundref="cu__csc__affine__matrix__function_8h" startline="67">cuCSCAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcuCSRAffineMatrixFunction_1ab0ac5e13678f04d7a31d56b767c50f60" compoundref="cu__csr__affine__matrix__function_8h" startline="67">cuCSRAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classcuDenseAffineMatrixFunction_1a19eeefc3d48677a73232e478cb6fe899" compoundref="cu__dense__affine__matrix__function_8h" startline="64">cuDenseAffineMatrixFunction&lt; DataType &gt;::A</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" compoundref="__interpolant__base_8py" startline="80">imate.interpolator._interpolant_base.InterpolantBase.A</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1adee1352dcd1822c2ffa56b84c521c042" compoundref="affine__matrix__function_8py" startline="286">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.A</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a53696c3a9ae57812f2c73444d5eafef6" compoundref="matrix_8py" startline="278">imate.linear_operator.matrix.Matrix.A</references>
        <references refid="classcLinearOperator_1a08a2eb3bd8ff1f47d1141dc164af1c61" compoundref="c__linear__operator_8cpp" startline="90" endline="93">cLinearOperator&lt; DataType &gt;::get_num_columns</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a27809a99fadd06e770f721cbf458a10c" compoundref="affine__matrix__function_8py" startline="385" endline="397">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_num_columns</references>
        <references refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a7daf35fa232c7599edda6fb420f384db" compoundref="linear__operator_8py" startline="70" endline="76">imate.linear_operator.linear_operator.LinearOperator.get_num_columns</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a8c03804e732e9424701017a6806bcf1d" compoundref="matrix_8py" startline="375" endline="387">imate.linear_operator.matrix.Matrix.get_num_columns</references>
        <references refid="classcLinearOperator_1aecc5b62db1d8a41f5112b289c7031aaf" compoundref="c__linear__operator_8cpp" startline="79" endline="82">cLinearOperator&lt; DataType &gt;::get_num_rows</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1aedca2144eb8d12cd5a3a3ee6b99ce145" compoundref="affine__matrix__function_8py" startline="368" endline="380">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_num_rows</references>
        <references refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a388cf364763090fef6bfb00d6f4baeb1" compoundref="linear__operator_8py" startline="59" endline="65">imate.linear_operator.linear_operator.LinearOperator.get_num_rows</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1aa1d5bbfb80bb1818a4beccbfdfdcdac6" compoundref="matrix_8py" startline="358" endline="370">imate.linear_operator.matrix.Matrix.get_num_rows</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a38aceabf70fe4c6fc59e7a1f5d1d3e0d" compoundref="affine__matrix__function_8py" startline="402" endline="414">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.is_sparse</references>
        <references refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a4fcac45257ee5b20b2f77b04ccbea681" compoundref="linear__operator_8py" startline="81" endline="87">imate.linear_operator.linear_operator.LinearOperator.is_sparse</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a920e8f58573ec99b8ae4f659beaf93b5" compoundref="matrix_8py" startline="392" endline="404">imate.linear_operator.matrix.Matrix.is_sparse</references>
        <referencedby refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a2afc59a97d73e88bf617d4733f81983b" compoundref="affine__matrix__function_8py" startline="439" endline="456">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_density</referencedby>
        <referencedby refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ae3849fd328140928cc5762cc319e16d0" compoundref="matrix_8py" startline="429" endline="446">imate.linear_operator.matrix.Matrix.get_density</referencedby>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ae3849fd328140928cc5762cc319e16d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.linear_operator.matrix.Matrix.get_density</definition>
        <argsstring>(self)</argsstring>
        <name>get_density</name>
        <reimplements refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a2429edd56939477cb8cfbc1cdc086e0a">get_density</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the density of non-zero elements of the matrix.

Returns
-------

density : float
    The density of the nonzero elements of the sparse matrix. If the
    matrix is dense, the density is `1`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="429" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="429" bodyend="446"/>
        <references refid="classcCSCMatrix_1a012110acfbc3dc645bb20036279df9f3" compoundref="c__csc__matrix_8cpp" startline="128" endline="131">cCSCMatrix&lt; DataType &gt;::get_nnz</references>
        <references refid="classcCSRMatrix_1a5ba91dad4ec62d1ef40a2095e9cefa7b" compoundref="c__csr__matrix_8cpp" startline="127" endline="130">cCSRMatrix&lt; DataType &gt;::get_nnz</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a4ff7c835fefcd8c165079054d761accc" compoundref="affine__matrix__function_8py" startline="419" endline="434">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_nnz</references>
        <references refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a7ce016ae30a0c3d5f2cdf333ddde2743" compoundref="linear__operator_8py" startline="92" endline="98">imate.linear_operator.linear_operator.LinearOperator.get_nnz</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a86069251bea104ad377008baa28bdb31" compoundref="matrix_8py" startline="409" endline="424">imate.linear_operator.matrix.Matrix.get_nnz</references>
        <references refid="classcLinearOperator_1a08a2eb3bd8ff1f47d1141dc164af1c61" compoundref="c__linear__operator_8cpp" startline="90" endline="93">cLinearOperator&lt; DataType &gt;::get_num_columns</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a27809a99fadd06e770f721cbf458a10c" compoundref="affine__matrix__function_8py" startline="385" endline="397">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_num_columns</references>
        <references refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a7daf35fa232c7599edda6fb420f384db" compoundref="linear__operator_8py" startline="70" endline="76">imate.linear_operator.linear_operator.LinearOperator.get_num_columns</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a8c03804e732e9424701017a6806bcf1d" compoundref="matrix_8py" startline="375" endline="387">imate.linear_operator.matrix.Matrix.get_num_columns</references>
        <references refid="classcLinearOperator_1aecc5b62db1d8a41f5112b289c7031aaf" compoundref="c__linear__operator_8cpp" startline="79" endline="82">cLinearOperator&lt; DataType &gt;::get_num_rows</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1aedca2144eb8d12cd5a3a3ee6b99ce145" compoundref="affine__matrix__function_8py" startline="368" endline="380">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.get_num_rows</references>
        <references refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a388cf364763090fef6bfb00d6f4baeb1" compoundref="linear__operator_8py" startline="59" endline="65">imate.linear_operator.linear_operator.LinearOperator.get_num_rows</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1aa1d5bbfb80bb1818a4beccbfdfdcdac6" compoundref="matrix_8py" startline="358" endline="370">imate.linear_operator.matrix.Matrix.get_num_rows</references>
        <references refid="classimate_1_1linear__operator_1_1affine__matrix__function_1_1AffineMatrixFunction_1a38aceabf70fe4c6fc59e7a1f5d1d3e0d" compoundref="affine__matrix__function_8py" startline="402" endline="414">imate.linear_operator.affine_matrix_function.AffineMatrixFunction.is_sparse</references>
        <references refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a4fcac45257ee5b20b2f77b04ccbea681" compoundref="linear__operator_8py" startline="81" endline="87">imate.linear_operator.linear_operator.LinearOperator.is_sparse</references>
        <references refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a920e8f58573ec99b8ae4f659beaf93b5" compoundref="matrix_8py" startline="392" endline="404">imate.linear_operator.matrix.Matrix.is_sparse</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Create a linear operator object from an input matrix.

The linear operator is a container for various matrix types with a unified
interface, establishes a fully automatic dynamic buffer to allocate,
deallocate, and transfer data between CPU and multiple GPU devices on
demand, as well as performs basic matrix-vector operations with
high performance on both CPU or GPU devices.

An instance of this class can be used as an input matrix to any function in
:mod:`imate` that accepts ``slq`` method.

Parameters
----------

A : numpy.ndarray or scipy.sparse, (n, n)
    The input matrix `A` can be dense or sparse (both `CSR` and `CSC`
    formats are supported). Also, the matrix data type can be either
    `32-bit`, `64-bit`, or `128-bit`. The input matrix can be stored
    either in row-ordering (`C` style) or column-ordering (`Fortran`
    style).

    .. note::

        `128-bit` data type is not supported on GPU.

Attributes
----------

A : numpy.ndarray or scipy.sparse
    Input matrix `A` from python object.

cpu_Aop : object
    Matrix object on CPU.

gpu_Aop : object
    Matrix object on GPU.

gpu : bool, default=False
    If `True`, the matrix object is created for GPU devices.

num_gpu_devices : int, default=0
    Number of GPU devices to be used. If `0`, it uses maximum number of
    GPU devices that are available.

initialized_on_cpu : bool, default=False
    Indicates whether the matrix data is allocated in CPU.

initialized_on_gpu : bool, default=False
    Indicates whether the matrix data is allocated in GPU.

data_type_name : str, default=None
    The type of matrix data, and can be `float32`, `float64`, or
    `float128`.

num_parameters : int, default=0
    Number of parameters of the linear operator. For :class:`Matrix` class,
    this parameter is always `0`.

Methods
-------
initialize
get_num_rows
get_num_columns
is_sparse
get_nnz
get_density
get_data_type_name
get_num_parameters
get_linear_operator

See Also
--------

imate.AffineMatrixFunction

Notes
-----

**Where to use this class:**

The instances of this class can be used just as a normal matrix in any
function in :mod:`imate` that accepts ``slq`` method. For instance, when
calling :func:`imate.logdet` function using ``method=slq`` argument, the
input matrix `A` can be an instance of this class.

**Why using this class:**

This class is a replacement to `numpy`&apos;s dense matrices and `scipy`&apos;s
sparse matrices. The purpose of creating a linear operator is three-fold:

1. A container to handle a variety of matrices and data types with a
   unified interface.
2. A dynamic buffer for matrix data on either CPU or multi-GPU devices
   with fully automatic allocation, deallocation, and data transfer between
   CPU and GPU devices.
3. Performing basic linear algebraic operations on the matrix data with
   high performance on CPU or GPU devices.

Further details of each of the points are described below.

**1. Unified interface for matrix types:**

The linear operator encompasses the following matrix types all in one
interface:

  * *Dense* or *sparse* matrices with `CSR` or `CSC` sparse formats.
  * `32-bit`, `64-bit`, and `128-bit` data types.
  * Row-ordering (`C` style) and column-ordering (`Fortran` style) storage.

**2. Unified interface for memory buffer between CPU and GPU:**

This class creates a dynamic buffer to automatically allocate, deallocate,
and transfer matrix data based on demand between CPU and multiple GPU
devices. These operations are performed **in parallel for each GPU
device**. Also, deallocation is performed by a **smart garbage collector**,
so the user should not be concerned about cleaning the data on the device
and the issue of memory leak. An instance of this class can be efficiently
reused between multiple function calls. This class uses a **lazy evaluation
strategy**, meaning that data allocation and transfer are not performed
until a caller function requests matrix data from this class.

**3. Unified interface for basic algebraic operations:**

This class handles the following internal operations:

1. Matrix vector product
   :math:`\\boldsymbol{y} = \\mathbf{A} \\boldsymbol{x}`.

2. Transposed matrix vector product
   :math:`\\boldsymbol{y} = \\mathbf{A}^{\\intercal} \\boldsymbol{x}`.

3. Additive matrix vector product
   :math:`\\boldsymbol{y} = \\boldsymbol{y} + \\mathbf{A} \\boldsymbol{x}`.

4. Additive transposed matrix vector product
   :math:`\\boldsymbol{y} = \\boldsymbol{y} + \\mathbf{A}^{\\intercal}
   \\boldsymbol{x}`.

All the above operations are handled internally when an instance of this
class is called by other functions.

Each of the above operations has various internal implementations depending
on whether the matrix format is dense, sparse CSR, or sparse CSC,
whether the memory storage is C style or Fortran style, whether the data
type of 32-bit, 64-bit, or 128-bit, and whether the operation is performed
on CPU or multi-GPU devices. This class unifies all these implementations
in one interface.

Examples
--------

**Create Matrix object:**

Create a very large sparse matrix with 64-bit data type:

.. code-block:: python

    &gt;&gt;&gt; # Create a random sparse matrix with the size of ten million
    &gt;&gt;&gt; from imate import toeplitz
    &gt;&gt;&gt; n = 10000000
    &gt;&gt;&gt; A = toeplitz(2, 1, n, gram=True, format=&apos;csr&apos;, dtype=&apos;float64&apos;)
    &gt;&gt;&gt; print(A.dtype)
    dtype(&apos;float64&apos;)

    &gt;&gt;&gt; print(type(A))
    scipy.sparse.csr.csr_matrix

Create a linear operator from the matrix `A`:

.. code-block:: python
    :emphasize-lines: 5

    &gt;&gt;&gt; # Import matrix operator
    &gt;&gt;&gt; from imate import Matrix

    &gt;&gt;&gt; # Create a matrix operator object from matrix A
    &gt;&gt;&gt; Aop = Matrix(A)

**Operation on CPU:**

Pass the above linear operator as input to any of the matrix functions in
:mod:`imate` that accepts ``slq`` method, such as
:func:`imate.logdet` as follows:

.. code-block:: python

    &gt;&gt;&gt; # Compute log-determinant of Aop
    &gt;&gt;&gt; from imate import logdet
    &gt;&gt;&gt; logdet(Aop, method=&apos;slq&apos;)
    13861581.003237441

Note that the above function could also be called directly on the scipy
object `A` rather than `Aop`:

.. code-block:: python

    &gt;&gt;&gt; # Compute log-determinant of Aop
    &gt;&gt;&gt; logdet(A, method=&apos;slq&apos;)
    13861581.003237441

However, with the above approach, the :func:`logdet` function still creates
an object of :class:`imate.Matrix` internally. The advantage of using `Aop`
instead of `A` is more clear when using GPU.

**Operation on GPU:**

Reuse the same object `Aop` as created in the previous example. However,
this time by calling :func:`imate.logdet` function with ``gpu=True``
argument, the data is automatically transferred from CPU to each of the
multi-GPU devices (then, it will be available on both CPU and GPU devices).

.. code-block:: python

    &gt;&gt;&gt; # Compute log-determinant of Aop on GPU
    &gt;&gt;&gt; logdet(Aop, method=&apos;slq&apos;, gpu=True)
    13861581.003237441

**Why using imate.Matrix object:**

An advantage of using `Aop` (instead of the matrix `A` directly) is that
by calling the above `logdet` function (or another function) again on this
matrix, the data of this matrix does not have to be re-allocated on the GPU
device again. The next example highlights this point. Call a second
function, for instance, `traceinv`, on the same object `Aop` as follows.

.. code-block:: python

    &gt;&gt;&gt; # Compute trace of inverse of Aop on GPU
    &gt;&gt;&gt; from imate import traceinv
    &gt;&gt;&gt; traceinv(Aop, method=&apos;slq&apos;, gpu=True)
    13861581.003237441

In the above, no data is needed to be transferred from CPU host to GPU
device again. However, if `A` was used instead of `Aop`, the data would
have been transferred from CPU to GPU again for the second time. The `Aop`
object holds the data on GPU for later use as long as this object does not
go out of the scope of the python environment. Once the variable `Aop` goes
out of scope, the matrix data on all the GPU devices will be cleaned
automatically.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>imate.linear_operator.matrix.Matrix</label>
        <link refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>imate.linear_operator.linear_operator.LinearOperator</label>
        <link refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>imate.linear_operator.matrix.Matrix</label>
        <link refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>imate.linear_operator.linear_operator.LinearOperator</label>
        <link refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" line="22" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/linear_operator/matrix.py" bodystart="22" bodyend="446"/>
    <listofallmembers>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1aa3b9583ad3551d68f701ef83a48fe296" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>__init__</name></member>
      <member refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a1ee9eb06e88b30222ed701066a822e98" prot="public" virt="non-virtual" ambiguityscope="imate::linear_operator::linear_operator::LinearOperator."><scope>imate::linear_operator::matrix::Matrix</scope><name>__init__</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a53696c3a9ae57812f2c73444d5eafef6" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>A</name></member>
      <member refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1adb17eb59a1ffe2ea12b5d34b6e135682" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>Aop</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a0edd01f50ac4d7487f0b47ce1cdbdcc6" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>cpu_Aop</name></member>
      <member refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1ab90f5102925ba5f3045a58ca6b8eaf0d" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>data_type_name</name></member>
      <member refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a51f1e24a46893e46d4281d3b7cfcbf92" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>get_data_type_name</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ae3849fd328140928cc5762cc319e16d0" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>get_density</name></member>
      <member refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1af41318d4848259505eb728b5f532758f" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>get_linear_operator</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a86069251bea104ad377008baa28bdb31" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>get_nnz</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a8c03804e732e9424701017a6806bcf1d" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>get_num_columns</name></member>
      <member refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a141c5ab67da4468867082b617a002424" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>get_num_parameters</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1aa1d5bbfb80bb1818a4beccbfdfdcdac6" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>get_num_rows</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a968f987793a980830066d06ad7f6bd1b" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>gpu</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a3436c9c49dd882d424954d6af1c086b3" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>gpu_Aop</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a13fb6cb10798d95fcfc1d52f33dfd1cf" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>initialize</name></member>
      <member refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1af98eb4710d72db4a9bce2bdaaff1693a" prot="public" virt="non-virtual" ambiguityscope="imate::linear_operator::linear_operator::LinearOperator."><scope>imate::linear_operator::matrix::Matrix</scope><name>initialize</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a781c91c072eb4cf40b0bfdbdee2755c9" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>initialized_on_cpu</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a6297e2fb26f8b9ba2c326e15834e6ede" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>initialized_on_gpu</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a920e8f58573ec99b8ae4f659beaf93b5" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>is_sparse</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1ac7f03f68624e3563b64bb006c0e4feaf" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>num_gpu_devices</name></member>
      <member refid="classimate_1_1linear__operator_1_1matrix_1_1Matrix_1a87e5341af8325f10607f47fa478594f8" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>num_parameters</name></member>
      <member refid="classimate_1_1linear__operator_1_1linear__operator_1_1LinearOperator_1a64979163ddd663c64d1f426e21ef9e43" prot="public" virt="non-virtual"><scope>imate::linear_operator::matrix::Matrix</scope><name>set_data_type_name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
