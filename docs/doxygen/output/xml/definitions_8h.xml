<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="definitions_8h" kind="file" language="C++">
    <compoundname>definitions.h</compoundname>
    <includedby refid="c__matrix__operations_8cpp" local="yes">/home/sia/work/github/imate/imate/_c_basic_algebra/c_matrix_operations.cpp</includedby>
    <includedby refid="c__vector__operations_8cpp" local="yes">/home/sia/work/github/imate/imate/_c_basic_algebra/c_vector_operations.cpp</includedby>
    <includedby refid="cblas__interface_8h" local="yes">/home/sia/work/github/imate/imate/_c_basic_algebra/cblas_interface.h</includedby>
    <includedby refid="types_8h" local="yes">/home/sia/work/github/imate/imate/_definitions/types.h</includedby>
    <invincdepgraph>
      <node id="71">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h</label>
        <link refid="cusparse__interface_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_linear_operator.h</label>
        <link refid="c__linear__operator_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_matrix.h</label>
        <link refid="c__csc__matrix_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_linear_operator.h</label>
        <link refid="cu__linear__operator_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/c_vector_operations.cpp</label>
        <link refid="c__vector__operations_8cpp"/>
      </node>
      <node id="11">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/c_vector_operations.h</label>
        <link refid="c__vector__operations_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.h</label>
        <link refid="convergence__tools_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.h</label>
        <link refid="special__functions_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_affine_matrix_function.cu</label>
        <link refid="cu__dense__affine__matrix__function_8cu"/>
      </node>
      <node id="56">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_lanczos_tridiagonalization.h</label>
        <link refid="cu__lanczos__tridiagonalization_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_matrix.h</label>
        <link refid="c__dense__matrix_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.cpp</label>
        <link refid="c__matrix_8cpp"/>
      </node>
      <node id="44">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_trace_estimator.cpp</label>
        <link refid="c__trace__estimator_8cpp"/>
      </node>
      <node id="14">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_lanczos_tridiagonalization.cpp</label>
        <link refid="c__lanczos__tridiagonalization_8cpp"/>
      </node>
      <node id="28">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu</label>
        <link refid="cu__csc__matrix_8cu"/>
      </node>
      <node id="32">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_affine_matrix_function.cu</label>
        <link refid="cu__csr__affine__matrix__function_8cu"/>
      </node>
      <node id="30">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h</label>
        <link refid="cu__csr__matrix_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu</label>
        <link refid="cusparse__interface_8cu"/>
      </node>
      <node id="12">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_affine_matrix_function.cpp</label>
        <link refid="c__affine__matrix__function_8cpp"/>
      </node>
      <node id="23">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.cpp</label>
        <link refid="c__dense__affine__matrix__function_8cpp"/>
      </node>
      <node id="21">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_affine_matrix_function.cpp</label>
        <link refid="c__csr__affine__matrix__function_8cpp"/>
      </node>
      <node id="25">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h</label>
        <link refid="cu__csc__matrix_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_linear_operator.cpp</label>
        <link refid="c__linear__operator_8cpp"/>
      </node>
      <node id="68">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_vector_operations.h</label>
        <link refid="cu__vector__operations_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_matrix.cu</label>
        <link refid="cu__matrix_8cu"/>
      </node>
      <node id="63">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/diagonalization.cpp</label>
        <link refid="diagonalization_8cpp"/>
      </node>
      <node id="20">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_affine_matrix_function.h</label>
        <link refid="c__csr__affine__matrix__function_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.cpp</label>
        <link refid="convergence__tools_8cpp"/>
      </node>
      <node id="10">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_matrix.cpp</label>
        <link refid="c__dense__matrix_8cpp"/>
      </node>
      <node id="54">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_golub_kahn_bidiagonalization.cu</label>
        <link refid="cu__golub__kahn__bidiagonalization_8cu"/>
      </node>
      <node id="69">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_vector_operations.cu</label>
        <link refid="cu__vector__operations_8cu"/>
      </node>
      <node id="76">
        <label>/home/sia/work/github/imate/imate/_random_generator/random_array_generator.h</label>
        <link refid="random__array__generator_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_matrix.cpp</label>
        <link refid="c__csc__matrix_8cpp"/>
      </node>
      <node id="36">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_affine_matrix_function.h</label>
        <link refid="cu__dense__affine__matrix__function_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_affine_matrix_function.cpp</label>
        <link refid="c__csc__affine__matrix__function_8cpp"/>
      </node>
      <node id="41">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h</label>
        <link refid="c__matrix_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.cu</label>
        <link refid="cu__affine__matrix__function_8cu"/>
      </node>
      <node id="45">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_lanczos_tridiagonalization.h</label>
        <link refid="c__lanczos__tridiagonalization_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_definitions/definitions.h</label>
        <link refid="definitions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_matrix.cu</label>
        <link refid="cu__dense__matrix_8cu"/>
      </node>
      <node id="6">
        <label>/home/sia/work/github/imate/imate/_definitions/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_matrix_operations.h</label>
        <link refid="cu__matrix__operations_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_trace_estimator.h</label>
        <link refid="c__trace__estimator_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_orthogonalization.h</label>
        <link refid="cu__orthogonalization_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_trace_estimator.h</label>
        <link refid="cu__trace__estimator_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/c_matrix_operations.h</label>
        <link refid="c__matrix__operations_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_golub_kahn_bidiagonalization.h</label>
        <link refid="c__golub__kahn__bidiagonalization_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_affine_matrix_function.h</label>
        <link refid="c__csc__affine__matrix__function_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>/home/sia/work/github/imate/imate/_cuda_utilities/cuda_interface.cu</label>
        <link refid="cuda__interface_8cu"/>
      </node>
      <node id="33">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu</label>
        <link refid="cu__csr__matrix_8cu"/>
      </node>
      <node id="17">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_affine_matrix_function.h</label>
        <link refid="c__affine__matrix__function_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/c_matrix_operations.cpp</label>
        <link refid="c__matrix__operations_8cpp"/>
      </node>
      <node id="15">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_orthogonalization.cpp</label>
        <link refid="c__orthogonalization_8cpp"/>
      </node>
      <node id="31">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_affine_matrix_function.h</label>
        <link refid="cu__csr__affine__matrix__function_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_affine_matrix_function.cu</label>
        <link refid="cu__csc__affine__matrix__function_8cu"/>
      </node>
      <node id="13">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_golub_kahn_bidiagonalization.cpp</label>
        <link refid="c__golub__kahn__bidiagonalization_8cpp"/>
      </node>
      <node id="65">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.cpp</label>
        <link refid="special__functions_8cpp"/>
      </node>
      <node id="70">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_orthogonalization.cu</label>
        <link refid="cu__orthogonalization_8cu"/>
      </node>
      <node id="29">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_matrix.h</label>
        <link refid="c__csr__matrix_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.h</label>
        <link refid="cu__affine__matrix__function_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_linear_operator.cu</label>
        <link refid="cu__linear__operator_8cu"/>
      </node>
      <node id="9">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_matrix.cpp</label>
        <link refid="c__csr__matrix_8cpp"/>
      </node>
      <node id="16">
        <label>/home/sia/work/github/imate/imate/_random_generator/random_array_generator.cpp</label>
        <link refid="random__array__generator_8cpp"/>
      </node>
      <node id="55">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_trace_estimator.cu</label>
        <link refid="cu__trace__estimator_8cu"/>
      </node>
      <node id="22">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h</label>
        <link refid="c__dense__affine__matrix__function_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/diagonalization.h</label>
        <link refid="diagonalization_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_affine_matrix_function.h</label>
        <link refid="cu__csc__affine__matrix__function_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_matrix_operations.cu</label>
        <link refid="cu__matrix__operations_8cu"/>
      </node>
      <node id="4">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/cblas_interface.h</label>
        <link refid="cblas__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>/home/sia/work/github/imate/imate/_cuda_utilities/cuda_interface.h</label>
        <link refid="cuda__interface_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/cblas_interface.cpp</label>
        <link refid="cblas__interface_8cpp"/>
      </node>
      <node id="57">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_lanczos_tridiagonalization.cu</label>
        <link refid="cu__lanczos__tridiagonalization_8cu"/>
      </node>
      <node id="51">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_matrix.h</label>
        <link refid="cu__matrix_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_golub_kahn_bidiagonalization.h</label>
        <link refid="cu__golub__kahn__bidiagonalization_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_orthogonalization.h</label>
        <link refid="c__orthogonalization_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_matrix.h</label>
        <link refid="cu__dense__matrix_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="definitions_8h_1ad1811715322a090d0de8c9974245038a" prot="public" static="no">
        <name>LONG_INT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_definitions/definitions.h" line="34" column="13" bodyfile="/home/sia/work/github/imate/imate/_definitions/definitions.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="definitions_8h_1aae2f14a52d0d5e952488ce2ccbf41a7b" prot="public" static="no">
        <name>UNSIGNED_LONG_INT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_definitions/definitions.h" line="57" column="13" bodyfile="/home/sia/work/github/imate/imate/_definitions/definitions.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="definitions_8h_1ab140247b235bb12fcc3f935beedc337c" prot="public" static="no">
        <name>USE_CBLAS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_definitions/definitions.h" line="67" column="13" bodyfile="/home/sia/work/github/imate/imate/_definitions/definitions.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileType:<sp/>SOURCE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_DEFINITIONS_DEFINITIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DEFINITIONS_DEFINITIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>set<sp/>to<sp/>0,<sp/>the<sp/>LongIndexType<sp/>is<sp/>declared<sp/>as<sp/>32-bit<sp/>integer.<sp/>Whereas<sp/>if<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>1,<sp/>the<sp/>LongIndexType<sp/>is<sp/>declared<sp/>as<sp/>64-bit<sp/>integer.<sp/>The<sp/>long<sp/>integer<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>slow<sp/>down<sp/>the<sp/>performance<sp/>on<sp/>reading<sp/>array<sp/>if<sp/>integers.<sp/>Note<sp/>that<sp/>in<sp/>C++,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>no<sp/>difference<sp/>between<sp/>&quot;int&quot;<sp/>and<sp/>&quot;long<sp/>int&quot;.<sp/>That<sp/>is,<sp/>both<sp/>are<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bit.<sp/>To<sp/>see<sp/>the<sp/>real<sp/>effect<sp/>of<sp/>long<sp/>type,<sp/>define<sp/>the<sp/>integer<sp/>by<sp/>&quot;long<sp/>long&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rather<sp/>than<sp/>&quot;long<sp/>int&quot;.<sp/>The<sp/>&quot;long<sp/>long&quot;<sp/>is<sp/>indeed<sp/>64-bit.<sp/>Currently,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>long<sp/>type<sp/>in<sp/>&quot;./types.h&quot;<sp/>is<sp/>defined<sp/>as<sp/>&quot;long<sp/>int&quot;.<sp/>Hence,<sp/>setting<sp/>LONG_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>1<sp/>will<sp/>not<sp/>make<sp/>any<sp/>difference<sp/>unless<sp/>&quot;long<sp/>long&quot;<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>The<sp/>malloc<sp/>and<sp/>cudaMalloc<sp/>can<sp/>only<sp/>allocate<sp/>at<sp/>maximum,<sp/>an<sp/>array<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>limit<sp/>size<sp/>of<sp/>&quot;size_t&quot;<sp/>(unsigned<sp/>int).<sp/>So,<sp/>using<sp/>&quot;long<sp/>long<sp/>int&quot;<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>indeed<sp/>practical<sp/>for<sp/>malloc.<sp/>Thus,<sp/>it<sp/>is<sp/>better<sp/>to<sp/>set<sp/>the<sp/>type<sp/>of<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indices<sp/>as<sp/>just<sp/>&quot;signed<sp/>int&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LONG_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="definitions_8h_1ad1811715322a090d0de8c9974245038a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LONG_INT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>set<sp/>to<sp/>0,<sp/>the<sp/>LongIndexType<sp/>is<sp/>declared<sp/>as<sp/>signed<sp/>integer,<sp/>whereas<sp/>if<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>1,<sp/>the<sp/>LongIndexType<sp/>is<sp/>declared<sp/>as<sp/>unsigned<sp/>integer.<sp/>The<sp/>unsigned<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>double<sp/>the<sp/>limit<sp/>of<sp/>the<sp/>largest<sp/>integer<sp/>index,<sp/>while<sp/>keeps<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>speed<sp/>for<sp/>index<sp/>operations.<sp/>Note<sp/>that<sp/>the<sp/>indices<sp/>and<sp/>index<sp/>pointers<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scipy<sp/>sparse<sp/>arrays<sp/>are<sp/>defined<sp/>by<sp/>&quot;signed<sp/>int&quot;.<sp/>Hence,<sp/>by<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UNSIGNED_LONG_INT<sp/>to<sp/>1,<sp/>there<sp/>is<sp/>a<sp/>one-time<sp/>overhead<sp/>of<sp/>convening<sp/>the<sp/>numpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>arrays<sp/>(two<sp/>matrices<sp/>of<sp/>scipy.sparse.csr_matrix.indices<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scipy.sparse.csr_matrix.indptr)<sp/>from<sp/>&quot;int&quot;<sp/>to<sp/>&quot;unsigned<sp/>int&quot;.<sp/>This<sp/>overhead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>only<sp/>one-time<sp/>and<sp/>should<sp/>be<sp/>around<sp/>half<sp/>a<sp/>second<sp/>for<sp/>moderate<sp/>to<sp/>large</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arrays.<sp/>But,<sp/>on<sp/>the<sp/>positive<sp/>side,<sp/>the<sp/>unsigned<sp/>int<sp/>can<sp/>handle<sp/>arrays<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>up<sp/>to<sp/>twice<sp/>the<sp/>index<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>The<sp/>malloc<sp/>and<sp/>cudaMalloc<sp/>can<sp/>only<sp/>allocate<sp/>at<sp/>maximum,<sp/>an<sp/>array<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>limit<sp/>size<sp/>of<sp/>&quot;size_t&quot;<sp/>(unsigned<sp/>int).<sp/>So,<sp/>using<sp/>&quot;unsigned<sp/>int&quot;<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>index<sp/>is<sp/>not<sp/>indeed<sp/>practical<sp/>since<sp/>the<sp/>array<sp/>size<sp/>in<sp/>bytes<sp/>is<sp/>the<sp/>size<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>array<sp/>times<sp/>sizeof(DataType).<sp/>That<sp/>is,<sp/>if<sp/>DataType<sp/>is<sp/>double<sp/>for<sp/>instance,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>array<sp/>size<sp/>could<sp/>potentially<sp/>be<sp/>8<sp/>times<sp/>the<sp/>size<sp/>of<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>&quot;size_t&quot;<sp/>(unsigned<sp/>int)<sp/>which<sp/>is<sp/>not<sp/>possible<sp/>for<sp/>malloc.<sp/>Thus,<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>better<sp/>to<sp/>set<sp/>the<sp/>type<sp/>of<sp/>array<sp/>indices<sp/>as<sp/>just<sp/>&quot;signed<sp/>int&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNSIGNED_LONG_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="definitions_8h_1aae2f14a52d0d5e952488ce2ccbf41a7b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNSIGNED_LONG_INT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>USE_CBLAS<sp/>is<sp/>set<sp/>to<sp/>1,<sp/>the<sp/>OpenBlas<sp/>library<sp/>is<sp/>used<sp/>for<sp/>dense<sp/>vector<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>operations.<sp/>Note<sp/>that<sp/>Openblas<sp/>does<sp/>not<sp/>declare<sp/>operations<sp/>on<sp/>&quot;long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>double&quot;<sp/>type,<sp/>rather,<sp/>only<sp/>&quot;float&quot;<sp/>and<sp/>&quot;double&quot;<sp/>types<sp/>are<sp/>supported.<sp/>To<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;long<sp/>double&quot;<sp/>type,<sp/>set<sp/>USE_CBLAS<sp/>to<sp/>0.<sp/>Openblas<sp/>is<sp/>nearly<sp/>twice<sp/>faster,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>looses<sp/>accuracy<sp/>on<sp/>large<sp/>arrays<sp/>of<sp/>float<sp/>type.<sp/>This<sp/>inaccuracy<sp/>could</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matter<sp/>a<sp/>lot<sp/>when<sp/>computing<sp/>dot<sp/>product<sp/>and<sp/>norm<sp/>of<sp/>very<sp/>large<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_CBLAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="definitions_8h_1ab140247b235bb12fcc3f935beedc337c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>USE_CBLAS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_DEFINITIONS_DEFINITIONS_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/github/imate/imate/_definitions/definitions.h"/>
  </compounddef>
</doxygen>
