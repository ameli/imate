<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacecublas__interface" kind="namespace" language="C++">
    <compoundname>cublas_interface</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecublas__interface_1a03e5b052ebf979af3acdcdd005a724d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXgemv&lt; float &gt;</definition>
        <argsstring>(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const float *alpha, const float *A, int lda, const float *x, int incx, const float *beta, float *y, int incy)</argsstring>
        <name>cublasXgemv&lt; float &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>cublasOperation_t</type>
          <declname>trans</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasSgemv</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="40" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="40" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a949907e4805099b5e00f2448429bb4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXgemv&lt; double &gt;</definition>
        <argsstring>(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const double *alpha, const double *A, int lda, const double *x, int incx, const double *beta, double *y, int incy)</argsstring>
        <name>cublasXgemv&lt; double &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>cublasOperation_t</type>
          <declname>trans</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasDgemv</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="67" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="67" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1aad4b6aa34461efc1afa3d01f368f6e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXcopy&lt; float &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const float *x, int incx, float *y, int incy)</argsstring>
        <name>cublasXcopy&lt; float &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasScopy</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="95" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="95" bodyend="104"/>
        <references refid="cublas__symbols_8cpp_1a89ae1ea2d0e82912eb230b596bcbe10a" compoundref="cublas__symbols_8cpp" startline="219" endline="238">cublasScopy</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a3148d241a7bbbda4197942130e07a78b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXcopy&lt; double &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const double *x, int incx, double *y, int incy)</argsstring>
        <name>cublasXcopy&lt; double &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasDcopy</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="115" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="115" bodyend="124"/>
        <references refid="cublas__symbols_8cpp_1a0f1595e513448a76b5f2c5dcc8b35b36" compoundref="cublas__symbols_8cpp" startline="248" endline="267">cublasDcopy</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a14a2b23b2f35a3104f77cc737afaf4a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXaxpy&lt; float &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const float *alpha, const float *x, int incx, float *y, int incy)</argsstring>
        <name>cublasXaxpy&lt; float &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasSaxpy</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="135" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="135" bodyend="145"/>
        <references refid="cublas__symbols_8cpp_1a62acf2de66cac606d7a4bd27112aa803" compoundref="cublas__symbols_8cpp" startline="277" endline="298">cublasSaxpy</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a1426a2550ba9261e7f7f564c86c7df27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXaxpy&lt; double &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const double *alpha, const double *x, int incx, double *y, int incy)</argsstring>
        <name>cublasXaxpy&lt; double &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasDaxpy</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="156" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="156" bodyend="166"/>
        <references refid="cublas__symbols_8cpp_1a6c84951f2c95eb556e60cc0f0be709a1" compoundref="cublas__symbols_8cpp" startline="308" endline="329">cublasDaxpy</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a3a105dbe8185e9ee5e06c73dec639b34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXdot&lt; float &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const float *x, int incx, const float *y, int incy, float *result)</argsstring>
        <name>cublasXdot&lt; float &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasSdot</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="177" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="177" bodyend="187"/>
        <references refid="cublas__symbols_8cpp_1a44c8284e4c9bdd530f002f7bee7792e5" compoundref="cublas__symbols_8cpp" startline="339" endline="360">cublasSdot</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1ae0fa1ca80f7a2b6b8aa462a823097827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXdot&lt; double &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const double *x, int incx, const double *y, int incy, double *result)</argsstring>
        <name>cublasXdot&lt; double &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasDdot</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="198" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="198" bodyend="208"/>
        <references refid="cublas__symbols_8cpp_1ab702f83f2aab0befc7aa8eb65313a960" compoundref="cublas__symbols_8cpp" startline="370" endline="391">cublasDdot</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a0bc10835797655e0793c76c914f03f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXnrm2&lt; float &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const float *x, int incx, float *result)</argsstring>
        <name>cublasXnrm2&lt; float &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>A template wrapper to <computeroutput>cublasSnrm2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="219" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="219" bodyend="227"/>
        <references refid="cublas__symbols_8cpp_1a5e52724d6890361c8cbf8ba1e8aa1097" compoundref="cublas__symbols_8cpp" startline="401" endline="420">cublasSnrm2</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1afe1d950b2616c22aaa1419f86c56bd74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXnrm2&lt; double &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const double *x, int incx, double *result)</argsstring>
        <name>cublasXnrm2&lt; double &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>A template wrapper to <computeroutput>cublasDnrm2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="238" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="238" bodyend="246"/>
        <references refid="cublas__symbols_8cpp_1a9413f9e26fd99ee1c5997c4838fca230" compoundref="cublas__symbols_8cpp" startline="430" endline="449">cublasDnrm2</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a393cc1d5e5b4ad695c1dc5f26a6df9bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXscal&lt; float &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const float *alpha, float *x, int incx)</argsstring>
        <name>cublasXscal&lt; float &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasSscal</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="257" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="257" bodyend="265"/>
        <references refid="cublas__symbols_8cpp_1a1d9fddf373b0f2f694aef356e9f7e46c" compoundref="cublas__symbols_8cpp" startline="459" endline="478">cublasSscal</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a2b34f7b520de77a0e915aa8d726ac886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXscal&lt; double &gt;</definition>
        <argsstring>(cublasHandle_t handle, int n, const double *alpha, double *x, int incx)</argsstring>
        <name>cublasXscal&lt; double &gt;</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cublasDscal</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="276" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" bodystart="276" bodyend="284"/>
        <references refid="cublas__symbols_8cpp_1a42e36cca17f3a8a8b3caa5c9b0660956" compoundref="cublas__symbols_8cpp" startline="488" endline="507">cublasDscal</references>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1ac4f7c12ce59f4e8701116a92173763db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXgemv</definition>
        <argsstring>(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const DataType *alpha, const DataType *A, int lda, const DataType *x, int incx, const DataType *beta, DataType *y, int incy)</argsstring>
        <name>cublasXgemv</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>cublasOperation_t</type>
          <declname>trans</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" line="37" column="20" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" declline="37" declcolumn="20"/>
        <referencedby refid="classcuMatrixOperations_1a607abe26c3a8e0aa65a03895b1c3b66e" compoundref="cu__matrix__operations_8cu" startline="52" endline="93">cuMatrixOperations&lt; DataType &gt;::dense_matvec</referencedby>
        <referencedby refid="classcuMatrixOperations_1afd343508b61995018e3a76a461254414" compoundref="cu__matrix__operations_8cu" startline="128" endline="169">cuMatrixOperations&lt; DataType &gt;::dense_matvec_plus</referencedby>
        <referencedby refid="classcuMatrixOperations_1a87b2dab8b53b2d2095d1a7d87b425348" compoundref="cu__matrix__operations_8cu" startline="203" endline="244">cuMatrixOperations&lt; DataType &gt;::dense_transposed_matvec</referencedby>
        <referencedby refid="classcuMatrixOperations_1a7f9fbf9751a63bf21744f7f343570c9e" compoundref="cu__matrix__operations_8cu" startline="280" endline="326">cuMatrixOperations&lt; DataType &gt;::dense_transposed_matvec_plus</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a7baec66eaf5a126362956ed808c8e9ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXcopy</definition>
        <argsstring>(cublasHandle_t handle, int n, const DataType *x, int incx, DataType *y, int incy)</argsstring>
        <name>cublasXcopy</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" line="53" column="20" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" declline="53" declcolumn="20"/>
        <referencedby refid="classcuVectorOperations_1a18e8a8069b986b0b559f8ac97b72a495" compoundref="cu__vector__operations_8cu" startline="73" endline="96">cuVectorOperations&lt; DataType &gt;::copy_scaled_vector</referencedby>
        <referencedby refid="classcuVectorOperations_1a08467db301f35f715fb07e4ec4907406" compoundref="cu__vector__operations_8cu" startline="38" endline="52">cuVectorOperations&lt; DataType &gt;::copy_vector</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1ae1a3b8bc292abb02f3146d71f1acc90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXaxpy</definition>
        <argsstring>(cublasHandle_t handle, int n, const DataType *alpha, const DataType *x, int incx, DataType *y, int incy)</argsstring>
        <name>cublasXaxpy</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" line="62" column="20" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" declline="62" declcolumn="20"/>
        <referencedby refid="classcuVectorOperations_1a516e90d70f99436cf48cd5b7deeb69c7" compoundref="cu__vector__operations_8cu" startline="126" endline="147">cuVectorOperations&lt; DataType &gt;::subtract_scaled_vector</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a143bcc56d4d99a7a05219b3ee8dd10fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXdot</definition>
        <argsstring>(cublasHandle_t handle, int n, const DataType *x, int incx, const DataType *y, int incy, DataType *result)</argsstring>
        <name>cublasXdot</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incy</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" line="73" column="20" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" declline="73" declcolumn="20"/>
        <referencedby refid="classcuVectorOperations_1a88c6373da3d2fef0dca236aef3ef1ec1" compoundref="cu__vector__operations_8cu" startline="166" endline="183">cuVectorOperations&lt; DataType &gt;::inner_product</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a4cdb08fd9dbcb3df01c1988004a8ff63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXnrm2</definition>
        <argsstring>(cublasHandle_t handle, int n, const DataType *x, int incx, DataType *result)</argsstring>
        <name>cublasXnrm2</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" line="84" column="20" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" declline="84" declcolumn="20"/>
        <referencedby refid="classcuVectorOperations_1adc247988515923e3c79226e891c9f3e1" compoundref="cu__vector__operations_8cu" startline="201" endline="215">cuVectorOperations&lt; DataType &gt;::euclidean_norm</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecublas__interface_1a373969305e12857bb6463ab630cb9b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>cublasStatus_t</type>
        <definition>cublasStatus_t cublas_interface::cublasXscal</definition>
        <argsstring>(cublasHandle_t handle, int n, const DataType *alpha, DataType *x, int incx)</argsstring>
        <name>cublasXscal</name>
        <param>
          <type>cublasHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" line="93" column="20" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.h" declline="93" declcolumn="20"/>
        <referencedby refid="classcuVectorOperations_1a18e8a8069b986b0b559f8ac97b72a495" compoundref="cu__vector__operations_8cu" startline="73" endline="96">cuVectorOperations&lt; DataType &gt;::copy_scaled_vector</referencedby>
        <referencedby refid="classcuVectorOperations_1a624e0023a7be0d361c31be756229b68c" compoundref="cu__vector__operations_8cu" startline="234" endline="252">cuVectorOperations&lt; DataType &gt;::normalize_vector_in_place</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A collection of templates to wrapper cublas functions. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>The implementation in the <computeroutput>cu</computeroutput> file is wrapped inside the namepsace clause. This is not necessary in general, however, it is needed to avoid the old gcc compiler error (this is a gcc bug) which complains &quot;no instance of function template matches
           the argument list const float&quot;. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cublas_interface.cu" line="29" column="1"/>
  </compounddef>
</doxygen>
