<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcLinearOperator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>cLinearOperator</compoundname>
    <derivedcompoundref refid="classcAffineMatrixFunction" prot="public" virt="non-virtual">cAffineMatrixFunction&lt; DataType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcMatrix" prot="public" virt="virtual">cMatrix&lt; DataType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcuLinearOperator" prot="public" virt="virtual">cuLinearOperator&lt; DataType &gt;</derivedcompoundref>
    <includes refid="c__linear__operator_8h" local="no">c_linear_operator.h</includes>
    <templateparamlist>
      <param>
        <type>typename DataType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcLinearOperator_1a6786391614f08ef1575554f78717fbb0" prot="protected" static="no" mutable="no">
        <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
        <definition>const LongIndexType cLinearOperator&lt; DataType &gt;::num_rows</definition>
        <argsstring></argsstring>
        <name>num_rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="75" column="29" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcLinearOperator_1acdafe59b033d5a73f5abe380f63f40a1" prot="protected" static="no" mutable="no">
        <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
        <definition>const LongIndexType cLinearOperator&lt; DataType &gt;::num_columns</definition>
        <argsstring></argsstring>
        <name>num_columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="76" column="29" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcLinearOperator_1ac4c88c2dcdc8a4d33a77df3979789d42" prot="protected" static="no" mutable="no">
        <type><ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref></type>
        <definition>FlagType cLinearOperator&lt; DataType &gt;::eigenvalue_relation_known</definition>
        <argsstring></argsstring>
        <name>eigenvalue_relation_known</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="77" column="18" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" bodystart="77" bodyend="-1"/>
        <referencedby refid="classcCSCAffineMatrixFunction_1ac8673f2581c6a02a050c20de35d344ca" compoundref="c__csc__affine__matrix__function_8cpp" startline="29" endline="47">cCSCAffineMatrixFunction&lt; DataType &gt;::cCSCAffineMatrixFunction</referencedby>
        <referencedby refid="classcCSRAffineMatrixFunction_1af8dd062a6e8e8bfd65e1ebe09828adc0" compoundref="c__csr__affine__matrix__function_8cpp" startline="29" endline="47">cCSRAffineMatrixFunction&lt; DataType &gt;::cCSRAffineMatrixFunction</referencedby>
        <referencedby refid="classcDenseAffineMatrixFunction_1a1cdf6594b971ab7c69b4917f48745f31" compoundref="c__dense__affine__matrix__function_8cpp" startline="29" endline="46">cDenseAffineMatrixFunction&lt; DataType &gt;::cDenseAffineMatrixFunction</referencedby>
        <referencedby refid="classcuCSCAffineMatrixFunction_1ab35dd09274079e7ea620a9508ee865b9" compoundref="cu__csc__affine__matrix__function_8cu" startline="30" endline="53">cuCSCAffineMatrixFunction&lt; DataType &gt;::cuCSCAffineMatrixFunction</referencedby>
        <referencedby refid="classcuCSRAffineMatrixFunction_1a9dd70267c2e9daa2d74dc029d16ae366" compoundref="cu__csr__affine__matrix__function_8cu" startline="30" endline="53">cuCSRAffineMatrixFunction&lt; DataType &gt;::cuCSRAffineMatrixFunction</referencedby>
        <referencedby refid="classcuDenseAffineMatrixFunction_1a7b3a93e837ea2d2d7f6ed6eb0dfbf40a" compoundref="cu__dense__affine__matrix__function_8cu" startline="30" endline="51">cuDenseAffineMatrixFunction&lt; DataType &gt;::cuDenseAffineMatrixFunction</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcLinearOperator_1a22683aa9286bfd651f1f2dbae3660545" prot="protected" static="no" mutable="no">
        <type>DataType *</type>
        <definition>DataType* cLinearOperator&lt; DataType &gt;::parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="78" column="18" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcLinearOperator_1aab9f0063e55c2a1a92a7e643f086348b" prot="protected" static="no" mutable="no">
        <type><ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref></type>
        <definition>IndexType cLinearOperator&lt; DataType &gt;::num_parameters</definition>
        <argsstring></argsstring>
        <name>num_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="79" column="19" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" bodystart="79" bodyend="-1"/>
        <referencedby refid="classcAffineMatrixFunction_1a5ea11698bccc5eb587f8227a03dbc257" compoundref="c__affine__matrix__function_8cpp" startline="29" endline="40">cAffineMatrixFunction&lt; DataType &gt;::cAffineMatrixFunction</referencedby>
        <referencedby refid="classcuAffineMatrixFunction_1a577ffadfc3b5d791b152d7c03d257dda" compoundref="cu__affine__matrix__function_8cu" startline="31" endline="36">cuAffineMatrixFunction&lt; DataType &gt;::cuAffineMatrixFunction</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcLinearOperator_1acb0880fed1d5599d721a9438c207ee5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cLinearOperator&lt; DataType &gt;::cLinearOperator</definition>
        <argsstring>()</argsstring>
        <name>cLinearOperator</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="45" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.cpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1ac844c5dd7b83eb1e95f3c96181366629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cLinearOperator&lt; DataType &gt;::cLinearOperator</definition>
        <argsstring>(const LongIndexType num_rows_, const LongIndexType num_columns_)</argsstring>
        <name>cLinearOperator</name>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_rows_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_columns_</declname>
        </param>
        <briefdescription>
<para>Constructor with setting <computeroutput>num_rows</computeroutput> and <computeroutput>num_columns</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>For the classed that are virtually derived (virtual inheritance) from this class, this constructor will never be called. Rather, the default constructor is called by the most derived class. Thus, set the member data directly instead of below. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="47" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.cpp" bodystart="50" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1a53065884c6a1349054a96a9fb8838e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>cLinearOperator&lt; DataType &gt;::~cLinearOperator</definition>
        <argsstring>()</argsstring>
        <name>~cLinearOperator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="51" column="17" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1aecc5b62db1d8a41f5112b289c7031aaf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
        <definition>LongIndexType cLinearOperator&lt; DataType &gt;::get_num_rows</definition>
        <argsstring>() const</argsstring>
        <name>get_num_rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="53" column="23" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.cpp" bodystart="79" bodyend="82"/>
        <referencedby refid="classcTraceEstimator_1a02afa505a915c58380b99a62e4d56b30" compoundref="c__trace__estimator_8cpp" startline="401" endline="644">cTraceEstimator&lt; DataType &gt;::_c_stochastic_lanczos_quadrature</referencedby>
        <referencedby refid="classcuTraceEstimator_1ab4edc323dc7dcc98f401eeec9276e245" compoundref="cu__trace__estimator_8cu" startline="409" endline="652">cuTraceEstimator&lt; DataType &gt;::_cu_stochastic_lanczos_quadrature</referencedby>
        <referencedby refid="classcTraceEstimator_1a29144b4d62c71f0889002754384f57f4" compoundref="c__trace__estimator_8cpp" startline="183" endline="297">cTraceEstimator&lt; DataType &gt;::c_trace_estimator</referencedby>
        <referencedby refid="classcuTraceEstimator_1aac1cf44a9dc5522d3104b2cdf3b05285" compoundref="cu__trace__estimator_8cu" startline="188" endline="305">cuTraceEstimator&lt; DataType &gt;::cu_trace_estimator</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1a08a2eb3bd8ff1f47d1141dc164af1c61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
        <definition>LongIndexType cLinearOperator&lt; DataType &gt;::get_num_columns</definition>
        <argsstring>() const</argsstring>
        <name>get_num_columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="54" column="23" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1ad7395bd04ec8014c9dd0e66c318ae125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cLinearOperator&lt; DataType &gt;::set_parameters</definition>
        <argsstring>(DataType *parameters_)</argsstring>
        <name>set_parameters</name>
        <param>
          <type>DataType *</type>
          <declname>parameters_</declname>
        </param>
        <briefdescription>
<para>Sets the scalar parameter <computeroutput>this-&gt;parameters</computeroutput>. Parameter is initialized to <computeroutput>NULL</computeroutput>. However, before calling <computeroutput>dot</computeroutput> or <computeroutput>transpose_dot</computeroutput> functions, the parameters must be set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parameters_</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the scalar or array of parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="55" column="14" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.cpp" bodystart="108" bodyend="111"/>
        <referencedby refid="classcTraceEstimator_1a02afa505a915c58380b99a62e4d56b30" compoundref="c__trace__estimator_8cpp" startline="401" endline="644">cTraceEstimator&lt; DataType &gt;::_c_stochastic_lanczos_quadrature</referencedby>
        <referencedby refid="classcuTraceEstimator_1ab4edc323dc7dcc98f401eeec9276e245" compoundref="cu__trace__estimator_8cu" startline="409" endline="652">cuTraceEstimator&lt; DataType &gt;::_cu_stochastic_lanczos_quadrature</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1af9be60b44a47eed5b2c98f077ff54987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref></type>
        <definition>IndexType cLinearOperator&lt; DataType &gt;::get_num_parameters</definition>
        <argsstring>() const</argsstring>
        <name>get_num_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="56" column="19" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.cpp" bodystart="119" bodyend="122"/>
        <referencedby refid="classcTraceEstimator_1a02afa505a915c58380b99a62e4d56b30" compoundref="c__trace__estimator_8cpp" startline="401" endline="644">cTraceEstimator&lt; DataType &gt;::_c_stochastic_lanczos_quadrature</referencedby>
        <referencedby refid="classcuTraceEstimator_1ab4edc323dc7dcc98f401eeec9276e245" compoundref="cu__trace__estimator_8cu" startline="409" endline="652">cuTraceEstimator&lt; DataType &gt;::_cu_stochastic_lanczos_quadrature</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1af0c980ca87c2795e0dbfda1c84f74591" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref></type>
        <definition>FlagType cLinearOperator&lt; DataType &gt;::is_eigenvalue_relation_known</definition>
        <argsstring>() const</argsstring>
        <name>is_eigenvalue_relation_known</name>
        <briefdescription>
<para>Returns a flag that determines whether a relation between the parameters of the operator and its eigenvalue(s) is known. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>If the relation between parameters and eigenvalue of the operator is known, returns <computeroutput>1</computeroutput>, otherwise returns <computeroutput>0</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="57" column="18" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.cpp" bodystart="136" bodyend="139"/>
        <referencedby refid="classcTraceEstimator_1a02afa505a915c58380b99a62e4d56b30" compoundref="c__trace__estimator_8cpp" startline="401" endline="644">cTraceEstimator&lt; DataType &gt;::_c_stochastic_lanczos_quadrature</referencedby>
        <referencedby refid="classcuTraceEstimator_1ab4edc323dc7dcc98f401eeec9276e245" compoundref="cu__trace__estimator_8cu" startline="409" endline="652">cuTraceEstimator&lt; DataType &gt;::_cu_stochastic_lanczos_quadrature</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1a0dd6306a434563e4a48a806b43f23d03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>DataType</type>
        <definition>virtual DataType cLinearOperator&lt; DataType &gt;::get_eigenvalue</definition>
        <argsstring>(const DataType *known_parameters, const DataType known_eigenvalue, const DataType *inquiry_parameters) const =0</argsstring>
        <name>get_eigenvalue</name>
        <reimplementedby refid="classcAffineMatrixFunction_1a9d877f4e35cbdefc4f3d81f4386e1c1e">get_eigenvalue</reimplementedby>
        <reimplementedby refid="classcMatrix_1afb08422559c53336b4515a6627a9d990">get_eigenvalue</reimplementedby>
        <reimplementedby refid="classcuAffineMatrixFunction_1acdf545a2c27a4cb6988548d808474c42">get_eigenvalue</reimplementedby>
        <param>
          <type>const DataType *</type>
          <declname>known_parameters</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>known_eigenvalue</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>inquiry_parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="59" column="26"/>
        <referencedby refid="classcTraceEstimator_1a02afa505a915c58380b99a62e4d56b30" compoundref="c__trace__estimator_8cpp" startline="401" endline="644">cTraceEstimator&lt; DataType &gt;::_c_stochastic_lanczos_quadrature</referencedby>
        <referencedby refid="classcuTraceEstimator_1ab4edc323dc7dcc98f401eeec9276e245" compoundref="cu__trace__estimator_8cu" startline="409" endline="652">cuTraceEstimator&lt; DataType &gt;::_cu_stochastic_lanczos_quadrature</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1a48c76860a74f00fefaa1297368d17a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void cLinearOperator&lt; DataType &gt;::dot</definition>
        <argsstring>(const DataType *vector, DataType *product)=0</argsstring>
        <name>dot</name>
        <reimplementedby refid="classcuCSCMatrix_1a1eb47019eaa7abd083d644e37893fc3a">dot</reimplementedby>
        <reimplementedby refid="classcuCSRMatrix_1ac7153e0293610828cf3455d01ffe8c30">dot</reimplementedby>
        <reimplementedby refid="classcuDenseMatrix_1acda42015f534adec6df3728f53f2a6d7">dot</reimplementedby>
        <reimplementedby refid="classcCSCAffineMatrixFunction_1aab2dc67ae91ef9a4e9b34d5f71a3e730">dot</reimplementedby>
        <reimplementedby refid="classcCSCMatrix_1a3780d212eb797641bf36772eeb864462">dot</reimplementedby>
        <reimplementedby refid="classcCSRAffineMatrixFunction_1abaf2110370c3f047b728088a1d6d5316">dot</reimplementedby>
        <reimplementedby refid="classcCSRMatrix_1a5074b2a9d415dd6e867713341a00f9be">dot</reimplementedby>
        <reimplementedby refid="classcDenseAffineMatrixFunction_1a30421159eaba38b6e0988b8fcfa212b4">dot</reimplementedby>
        <reimplementedby refid="classcDenseMatrix_1af74821f413996e44b0a7ecf767054bda">dot</reimplementedby>
        <reimplementedby refid="classcuCSCAffineMatrixFunction_1af32083ef69ad51e67be4df8c0fa32866">dot</reimplementedby>
        <reimplementedby refid="classcuCSRAffineMatrixFunction_1a5eca23d1d1229359cdd589c9b60ec69d">dot</reimplementedby>
        <reimplementedby refid="classcuDenseAffineMatrixFunction_1a22bf1848160453d4a54f3ea2c44f02c4">dot</reimplementedby>
        <param>
          <type>const DataType *</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="64" column="22"/>
        <referencedby refid="c__golub__kahn__bidiagonalization_8cpp_1a6125b021cd93b43ab4d9f20813487f85" compoundref="c__golub__kahn__bidiagonalization_8cpp" startline="111" endline="232">c_golub_kahn_bidiagonalization</referencedby>
        <referencedby refid="c__lanczos__tridiagonalization_8cpp_1a88831f1a1ba564b198f446a7c8a8d5ef" compoundref="c__lanczos__tridiagonalization_8cpp" startline="117" endline="236">c_lanczos_tridiagonalization</referencedby>
        <referencedby refid="cu__golub__kahn__bidiagonalization_8cu_1aa755f765f48f41b63d9dab3528b5f0b2" compoundref="cu__golub__kahn__bidiagonalization_8cu" startline="113" endline="242">cu_golub_kahn_bidiagonalization</referencedby>
        <referencedby refid="cu__lanczos__tridiagonalization_8cu_1a30ec831ebcc2ce17eefefb770b13773d" compoundref="cu__lanczos__tridiagonalization_8cu" startline="119" endline="248">cu_lanczos_tridiagonalization</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcLinearOperator_1a40f5051c4399ebfa153ef7147e10a6e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void cLinearOperator&lt; DataType &gt;::transpose_dot</definition>
        <argsstring>(const DataType *vector, DataType *product)=0</argsstring>
        <name>transpose_dot</name>
        <reimplementedby refid="classcuCSCMatrix_1a0af6927d0301ce630c70a88c1d799300">transpose_dot</reimplementedby>
        <reimplementedby refid="classcuCSRMatrix_1a533fef9f3fd9de1f3c984dae663b0ba7">transpose_dot</reimplementedby>
        <reimplementedby refid="classcuDenseMatrix_1a36bcdf696c8a5b30d818f43d63a1a0ff">transpose_dot</reimplementedby>
        <reimplementedby refid="classcCSCAffineMatrixFunction_1a8e08aed918c8d81639f317c9aeadcd4f">transpose_dot</reimplementedby>
        <reimplementedby refid="classcCSCMatrix_1a3061588e0400fbceabad9d7f49736d86">transpose_dot</reimplementedby>
        <reimplementedby refid="classcCSRAffineMatrixFunction_1ae3dfe817ca504c3b52d0a2fa44e2a9c6">transpose_dot</reimplementedby>
        <reimplementedby refid="classcCSRMatrix_1a481e0733264a9befe5286bda9c1832d5">transpose_dot</reimplementedby>
        <reimplementedby refid="classcDenseAffineMatrixFunction_1ab6298d183f65a83b77deda25a7d6494d">transpose_dot</reimplementedby>
        <reimplementedby refid="classcDenseMatrix_1ac1bae9c2baf5e8cd552505ead3c244c8">transpose_dot</reimplementedby>
        <reimplementedby refid="classcuCSCAffineMatrixFunction_1a09c7b10ec81d6a906690cfd0af16bc1e">transpose_dot</reimplementedby>
        <reimplementedby refid="classcuCSRAffineMatrixFunction_1a658a809943e53ca5d4f78c09ad1e0c89">transpose_dot</reimplementedby>
        <reimplementedby refid="classcuDenseAffineMatrixFunction_1ae7b4134ea90ecc89c1a2551628cd82b3">transpose_dot</reimplementedby>
        <param>
          <type>const DataType *</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="68" column="22"/>
        <referencedby refid="c__golub__kahn__bidiagonalization_8cpp_1a6125b021cd93b43ab4d9f20813487f85" compoundref="c__golub__kahn__bidiagonalization_8cpp" startline="111" endline="232">c_golub_kahn_bidiagonalization</referencedby>
        <referencedby refid="cu__golub__kahn__bidiagonalization_8cu_1aa755f765f48f41b63d9dab3528b5f0b2" compoundref="cu__golub__kahn__bidiagonalization_8cu" startline="113" endline="242">cu_golub_kahn_bidiagonalization</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for linear operators. This class serves as interface for all derived classes. </para>
    </briefdescription>
    <detaileddescription>
<para>The prefix <computeroutput>c</computeroutput> in this class&apos;s name (and its derivatves), stands for the <computeroutput>cpp</computeroutput> code, intrast to the <computeroutput>cu</computeroutput> prefix, which stands for the cuda code. Most derived classes have a cuda counterpart.</para>
<para><simplesect kind="see"><para><ref refid="classcMatrix" kindref="compound">cMatrix</ref>, <ref refid="classcAffineMatrixFunction" kindref="compound">cAffineMatrixFunction</ref>, <ref refid="classcuLinearOperator" kindref="compound">cuLinearOperator</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>cMatrix&lt; DataType &gt;</label>
        <link refid="classcMatrix"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>cuCSRMatrix&lt; DataType &gt;</label>
        <link refid="classcuCSRMatrix"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcAffineMatrixFunction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>cuDenseAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcuDenseAffineMatrixFunction"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>cuLinearOperator&lt; DataType &gt;</label>
        <link refid="classcuLinearOperator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>cuCSCAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcuCSCAffineMatrixFunction"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>cuAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcuAffineMatrixFunction"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>cCSRMatrix&lt; DataType &gt;</label>
        <link refid="classcCSRMatrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>cuCSCMatrix&lt; DataType &gt;</label>
        <link refid="classcuCSCMatrix"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>cuDenseMatrix&lt; DataType &gt;</label>
        <link refid="classcuDenseMatrix"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>cuMatrix&lt; DataType &gt;</label>
        <link refid="classcuMatrix"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>cDenseMatrix&lt; DataType &gt;</label>
        <link refid="classcDenseMatrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>cCSRAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcCSRAffineMatrixFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
      <node id="7">
        <label>cCSCMatrix&lt; DataType &gt;</label>
        <link refid="classcCSCMatrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>cDenseAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcDenseAffineMatrixFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>cuCSRAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcuCSRAffineMatrixFunction"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>cCSCAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcCSCAffineMatrixFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" line="40" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_linear_operator.h" bodystart="41" bodyend="80"/>
    <listofallmembers>
      <member refid="classcLinearOperator_1acb0880fed1d5599d721a9438c207ee5b" prot="public" virt="non-virtual"><scope>cLinearOperator</scope><name>cLinearOperator</name></member>
      <member refid="classcLinearOperator_1ac844c5dd7b83eb1e95f3c96181366629" prot="public" virt="non-virtual"><scope>cLinearOperator</scope><name>cLinearOperator</name></member>
      <member refid="classcLinearOperator_1a48c76860a74f00fefaa1297368d17a77" prot="public" virt="pure-virtual"><scope>cLinearOperator</scope><name>dot</name></member>
      <member refid="classcLinearOperator_1ac4c88c2dcdc8a4d33a77df3979789d42" prot="protected" virt="non-virtual"><scope>cLinearOperator</scope><name>eigenvalue_relation_known</name></member>
      <member refid="classcLinearOperator_1a0dd6306a434563e4a48a806b43f23d03" prot="public" virt="pure-virtual"><scope>cLinearOperator</scope><name>get_eigenvalue</name></member>
      <member refid="classcLinearOperator_1a08a2eb3bd8ff1f47d1141dc164af1c61" prot="public" virt="non-virtual"><scope>cLinearOperator</scope><name>get_num_columns</name></member>
      <member refid="classcLinearOperator_1af9be60b44a47eed5b2c98f077ff54987" prot="public" virt="non-virtual"><scope>cLinearOperator</scope><name>get_num_parameters</name></member>
      <member refid="classcLinearOperator_1aecc5b62db1d8a41f5112b289c7031aaf" prot="public" virt="non-virtual"><scope>cLinearOperator</scope><name>get_num_rows</name></member>
      <member refid="classcLinearOperator_1af0c980ca87c2795e0dbfda1c84f74591" prot="public" virt="non-virtual"><scope>cLinearOperator</scope><name>is_eigenvalue_relation_known</name></member>
      <member refid="classcLinearOperator_1acdafe59b033d5a73f5abe380f63f40a1" prot="protected" virt="non-virtual"><scope>cLinearOperator</scope><name>num_columns</name></member>
      <member refid="classcLinearOperator_1aab9f0063e55c2a1a92a7e643f086348b" prot="protected" virt="non-virtual"><scope>cLinearOperator</scope><name>num_parameters</name></member>
      <member refid="classcLinearOperator_1a6786391614f08ef1575554f78717fbb0" prot="protected" virt="non-virtual"><scope>cLinearOperator</scope><name>num_rows</name></member>
      <member refid="classcLinearOperator_1a22683aa9286bfd651f1f2dbae3660545" prot="protected" virt="non-virtual"><scope>cLinearOperator</scope><name>parameters</name></member>
      <member refid="classcLinearOperator_1ad7395bd04ec8014c9dd0e66c318ae125" prot="public" virt="non-virtual"><scope>cLinearOperator</scope><name>set_parameters</name></member>
      <member refid="classcLinearOperator_1a40f5051c4399ebfa153ef7147e10a6e6" prot="public" virt="pure-virtual"><scope>cLinearOperator</scope><name>transpose_dot</name></member>
      <member refid="classcLinearOperator_1a53065884c6a1349054a96a9fb8838e65" prot="public" virt="virtual"><scope>cLinearOperator</scope><name>~cLinearOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
