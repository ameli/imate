<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classTimer" kind="class" language="C++" prot="public">
    <compoundname>Timer</compoundname>
    <includes refid="timer_8h" local="no">timer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classTimer_1a65d45bf747a05aebad26a6640d09a106" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Timer::start_time</definition>
        <argsstring></argsstring>
        <name>start_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="64" column="16" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.h" bodystart="64" bodyend="-1"/>
        <referencedby refid="classTimer_1a6a89a613c2af9b0d1e5f7e4ba9e46c54" compoundref="timer_8cpp" startline="92" endline="95">elapsed</referencedby>
        <referencedby refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" compoundref="timer_8cpp" startline="66" endline="69">start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classTimer_1a90dbf07f78c2ea4e4833286a1bc916b0" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Timer::stop_time</definition>
        <argsstring></argsstring>
        <name>stop_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="65" column="16" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="classTimer_1a6a89a613c2af9b0d1e5f7e4ba9e46c54" compoundref="timer_8cpp" startline="92" endline="95">elapsed</referencedby>
        <referencedby refid="classTimer_1a63f0eb44b27402196590a03781515dba" compoundref="timer_8cpp" startline="79" endline="82">stop</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTimer_1a5f16e8da27d2a5a5242dead46de05d97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Timer::Timer</definition>
        <argsstring>()</argsstring>
        <name>Timer</name>
        <briefdescription>
<para>constructor for <computeroutput><ref refid="classTimer" kindref="compound">Timer</ref></computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="53" column="9" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.cpp" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a14fa469c4c295c5fa6e66a4ad1092146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Timer::~Timer</definition>
        <argsstring>()</argsstring>
        <name>~Timer</name>
        <briefdescription>
<para>Destructor for <computeroutput><ref refid="classTimer" kindref="compound">Timer</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="54" column="9" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a3a8b5272198d029779dc9302a54305a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>Starts the timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="55" column="14" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.cpp" bodystart="66" bodyend="69"/>
        <references refid="classTimer_1a46df9c79ce115f9d206c92abcd5969f4" compoundref="timer_8cpp" startline="105" endline="142">get_wall_time</references>
        <references refid="classTimer_1a65d45bf747a05aebad26a6640d09a106" compoundref="timer_8h" startline="64">start_time</references>
        <referencedby refid="classcTraceEstimator_1a5fb96a5c4d72df3faf68b21b089bf2f2" compoundref="c__trace__estimator_8cpp" startline="192" endline="307">cTraceEstimator&lt; DataType &gt;::c_trace_estimator</referencedby>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a63f0eb44b27402196590a03781515dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Stops the timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="56" column="14" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.cpp" bodystart="79" bodyend="82"/>
        <references refid="classTimer_1a46df9c79ce115f9d206c92abcd5969f4" compoundref="timer_8cpp" startline="105" endline="142">get_wall_time</references>
        <references refid="classTimer_1a90dbf07f78c2ea4e4833286a1bc916b0" compoundref="timer_8h" startline="65">stop_time</references>
        <referencedby refid="classcTraceEstimator_1a5fb96a5c4d72df3faf68b21b089bf2f2" compoundref="c__trace__estimator_8cpp" startline="192" endline="307">cTraceEstimator&lt; DataType &gt;::c_trace_estimator</referencedby>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a6a89a613c2af9b0d1e5f7e4ba9e46c54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Timer::elapsed</definition>
        <argsstring>() const</argsstring>
        <name>elapsed</name>
        <briefdescription>
<para>Returns the elapsed time in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="57" column="16" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.cpp" bodystart="92" bodyend="95"/>
        <references refid="classTimer_1a65d45bf747a05aebad26a6640d09a106" compoundref="timer_8h" startline="64">start_time</references>
        <references refid="classTimer_1a90dbf07f78c2ea4e4833286a1bc916b0" compoundref="timer_8h" startline="65">stop_time</references>
        <referencedby refid="classcTraceEstimator_1a5fb96a5c4d72df3faf68b21b089bf2f2" compoundref="c__trace__estimator_8cpp" startline="192" endline="307">cTraceEstimator&lt; DataType &gt;::c_trace_estimator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classTimer_1a46df9c79ce115f9d206c92abcd5969f4" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Timer::get_wall_time</definition>
        <argsstring>()</argsstring>
        <name>get_wall_time</name>
        <briefdescription>
<para>Returns the wall time since the epoch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="61" column="23" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.cpp" bodystart="105" bodyend="142"/>
        <referencedby refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" compoundref="timer_8cpp" startline="66" endline="69">start</referencedby>
        <referencedby refid="classTimer_1a63f0eb44b27402196590a03781515dba" compoundref="timer_8cpp" startline="79" endline="82">stop</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Records elasped wall time between two events. </para>
    </briefdescription>
    <detaileddescription>
<para>The measured time is the <emphasis>wall</emphasis> time, not the <emphasis>process time</emphasis> of the CPU.</para>
<para><bold>Example:</bold> <verbatim>Timer timer;
timer.start();

// Some CPU threads here.
// ...

// Note, this Time measures wall time, so the sleep() time
// counts toward the measured time.
sleep(1);

timer.stop();
double elapsed_time = timer.elapsed();
</verbatim> <simplesect kind="note"><para>The start and stop time variables <emphasis>inside</emphasis> this class must be declared as <computeroutput>double</computeroutput>, and not <computeroutput>float</computeroutput> to have enough precision for the subtraction of stop minus start time. However, the elapsed time <emphasis>outside</emphasis> of this class can be declared as <computeroutput>float</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classCudaTimer" kindref="compound">CudaTimer</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/sia/work/github/imate/imate/_utilities/timer.h" line="49" column="1" bodyfile="/home/sia/work/github/imate/imate/_utilities/timer.h" bodystart="50" bodyend="66"/>
    <listofallmembers>
      <member refid="classTimer_1a6a89a613c2af9b0d1e5f7e4ba9e46c54" prot="public" virt="non-virtual"><scope>Timer</scope><name>elapsed</name></member>
      <member refid="classTimer_1a46df9c79ce115f9d206c92abcd5969f4" prot="protected" virt="non-virtual"><scope>Timer</scope><name>get_wall_time</name></member>
      <member refid="classTimer_1a3a8b5272198d029779dc9302a54305a8" prot="public" virt="non-virtual"><scope>Timer</scope><name>start</name></member>
      <member refid="classTimer_1a65d45bf747a05aebad26a6640d09a106" prot="protected" virt="non-virtual"><scope>Timer</scope><name>start_time</name></member>
      <member refid="classTimer_1a63f0eb44b27402196590a03781515dba" prot="public" virt="non-virtual"><scope>Timer</scope><name>stop</name></member>
      <member refid="classTimer_1a90dbf07f78c2ea4e4833286a1bc916b0" prot="protected" virt="non-virtual"><scope>Timer</scope><name>stop_time</name></member>
      <member refid="classTimer_1a5f16e8da27d2a5a5242dead46de05d97" prot="public" virt="non-virtual"><scope>Timer</scope><name>Timer</name></member>
      <member refid="classTimer_1a14fa469c4c295c5fa6e66a4ad1092146" prot="public" virt="non-virtual"><scope>Timer</scope><name>~Timer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
