<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceimate_1_1__trace__estimator_1_1trace__estimator__utilities" kind="namespace" language="Python">
    <compoundname>imate::_trace_estimator::trace_estimator_utilities</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceimate_1_1__trace__estimator_1_1trace__estimator__utilities_1a87ea284f98231bc284774754f497f023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate._trace_estimator.trace_estimator_utilities.get_operator</definition>
        <argsstring>(A)</argsstring>
        <name>get_operator</name>
        <param>
          <type>A</type>
          <defname>A</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Check the input operator (or matrix) has proper type and shape. If A is a
numpy dense matrix or a scipy sparse matrix, it will be converted to an
instance of :class:`ConstantMatrix` class.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" line="24" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" bodystart="24" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespaceimate_1_1__trace__estimator_1_1trace__estimator__utilities_1a1792b47551e4ddfad6aa9d0c357829fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate._trace_estimator.trace_estimator_utilities.get_operator_parameters</definition>
        <argsstring>(parameters, data_type_name)</argsstring>
        <name>get_operator_parameters</name>
        <param>
          <type>parameters</type>
          <defname>parameters</defname>
        </param>
        <param>
          <type>data_type_name</type>
          <defname>data_type_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Checks the type of parameters and returns parameters in a proper type if a
type conversion is needed (such as list to numpy array). It also returns
the parameters size as follows:

* If the parameters is None, or a scalar, the parameters size is 1.
* If the parameters is a list or array, it returns its size.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" line="62" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" bodystart="62" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespaceimate_1_1__trace__estimator_1_1trace__estimator__utilities_1a9fe4c1dd676fb61d18b03a34b029a836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate._trace_estimator.trace_estimator_utilities.check_arguments</definition>
        <argsstring>(gram, exponent, min_num_samples, max_num_samples, error_atol, error_rtol, confidence_level, outlier_significance_level, lanczos_degree, lanczos_tol, orthogonalize, num_threads, num_gpu_devices, verbose, plot, gpu)</argsstring>
        <name>check_arguments</name>
        <param>
          <type>gram</type>
          <defname>gram</defname>
        </param>
        <param>
          <type>exponent</type>
          <defname>exponent</defname>
        </param>
        <param>
          <type>min_num_samples</type>
          <defname>min_num_samples</defname>
        </param>
        <param>
          <type>max_num_samples</type>
          <defname>max_num_samples</defname>
        </param>
        <param>
          <type>error_atol</type>
          <defname>error_atol</defname>
        </param>
        <param>
          <type>error_rtol</type>
          <defname>error_rtol</defname>
        </param>
        <param>
          <type>confidence_level</type>
          <defname>confidence_level</defname>
        </param>
        <param>
          <type>outlier_significance_level</type>
          <defname>outlier_significance_level</defname>
        </param>
        <param>
          <type>lanczos_degree</type>
          <defname>lanczos_degree</defname>
        </param>
        <param>
          <type>lanczos_tol</type>
          <defname>lanczos_tol</defname>
        </param>
        <param>
          <type>orthogonalize</type>
          <defname>orthogonalize</defname>
        </param>
        <param>
          <type>num_threads</type>
          <defname>num_threads</defname>
        </param>
        <param>
          <type>num_gpu_devices</type>
          <defname>num_gpu_devices</defname>
        </param>
        <param>
          <type>verbose</type>
          <defname>verbose</defname>
        </param>
        <param>
          <type>plot</type>
          <defname>plot</defname>
        </param>
        <param>
          <type>gpu</type>
          <defname>gpu</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Checks if the input arguments have proper type and values.


:return: If ``error_atol`` or ``error_rtol`` are ``None``, it
    converts them to ``0`` and returns them.
:rtype: data_type
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" line="108" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" bodystart="124" bodyend="315"/>
        <references refid="namespaceimate_1_1__utilities_1_1plot__utilities_1ac5be3859295616ee4d82fdcaab5faedd" compoundref="plot__utilities_8py" startline="64" endline="103">imate._utilities.plot_utilities.load_plot_settings</references>
        <referencedby refid="namespaceimate_1_1traceinv_1_1__hutchinson__method_1a62c0bc37cf02ed8dddf9d15fd56112ed" compoundref="__hutchinson__method_8pyx" startline="55" endline="720">imate.traceinv._hutchinson_method.hutchinson_method</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceimate_1_1__trace__estimator_1_1trace__estimator__utilities_1a44218db48e3515513c3f6fe8292cca9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate._trace_estimator.trace_estimator_utilities.get_machine_precision</definition>
        <argsstring>(data_type_name)</argsstring>
        <name>get_machine_precision</name>
        <param>
          <type>data_type_name</type>
          <defname>data_type_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the machine precision used for the &quot;epsilon&quot; value of the
stochastic quadrature method.

The machine&apos;s epsilon precision:

* for 32-bit precision data is 2**(-23) = 1.1920929e-07.
* for 64-bit precision data is 2**(-52) = 2.220446049250313e-16.
* for 128-bit precision data is 2**(-63) = -1.084202172485504434e-19.

:param data_type_name: A string indicating the data type, such as
    ``b&apos;float32&apos;``, ``b&apos;float64&apos;``, or ``b&apos;float128&apos;``.
:type data_type_name: string

:return: Machine precision for the specified data type.
:rtype: float
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" line="316" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" bodystart="316" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="namespaceimate_1_1__trace__estimator_1_1trace__estimator__utilities_1a049901f16aa7f4f39034bf69834411a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate._trace_estimator.trace_estimator_utilities.find_num_inquiries</definition>
        <argsstring>(Aop, parameters_size)</argsstring>
        <name>find_num_inquiries</name>
        <param>
          <type>Aop</type>
          <defname>Aop</defname>
        </param>
        <param>
          <type>parameters_size</type>
          <defname>parameters_size</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Find the number of parameter inquiries. Parameter inquiries may not be the
same as the length of parameters array. The &quot;parameter size&quot; is the product
of the &quot;number of the parameter inquiries&quot; and the &quot;number of the
parameters of the operator&quot;.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" line="342" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" bodystart="342" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="namespaceimate_1_1__trace__estimator_1_1trace__estimator__utilities_1a8e2f724d2797c34188b5ae135765a177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate._trace_estimator.trace_estimator_utilities.print_summary</definition>
        <argsstring>(info)</argsstring>
        <name>print_summary</name>
        <param>
          <type>info</type>
          <defname>info</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim></verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" line="384" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" bodystart="384" bodyend="576"/>
        <referencedby refid="namespaceimate_1_1traceinv_1_1__hutchinson__method_1a62c0bc37cf02ed8dddf9d15fd56112ed" compoundref="__hutchinson__method_8pyx" startline="55" endline="720">imate.traceinv._hutchinson_method.hutchinson_method</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_utilities.py" line="1" column="1"/>
  </compounddef>
</doxygen>
