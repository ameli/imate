<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod" kind="class" language="Python" prot="public">
    <compoundname>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</compoundname>
    <basecompoundref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase" prot="public" virt="non-virtual">imate.interpolator._interpolant_base.InterpolantBase</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1adddf906bcbd84e2557593a0f6c97b752" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod::basis_functions_type</definition>
        <argsstring></argsstring>
        <name>basis_functions_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="162" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="162" bodyend="-1"/>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1aff990c3677acb01a825fd327d6c80933" compoundref="__inverse__monomial__basis__functions__method_8py" startline="282" endline="353">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af1a24aac10c2ef3d05501a6b1af26dcc" compoundref="__inverse__monomial__basis__functions__method_8py" startline="174" endline="255">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.initialize_interpolator</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af6bd58b74cf5f9e51124e414f9e5a7d2" compoundref="__inverse__monomial__basis__functions__method_8py" startline="452" endline="511">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.interpolate</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7c5272e89448e04db04eba0bb10a117b" compoundref="__inverse__monomial__basis__functions__method_8py" startline="358" endline="447">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.orthogonal_basis_function_coefficients</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af084fb16cc78ff4d2a22d2ec915ffa78" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod::alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="165" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="165" bodyend="-1"/>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af1a24aac10c2ef3d05501a6b1af26dcc" compoundref="__inverse__monomial__basis__functions__method_8py" startline="174" endline="255">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.initialize_interpolator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a6b8e4059f0371249f228542bf0031295" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="166" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="166" bodyend="-1"/>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af1a24aac10c2ef3d05501a6b1af26dcc" compoundref="__inverse__monomial__basis__functions__method_8py" startline="174" endline="255">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.initialize_interpolator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7db38c28a3b2716bb850ea8a61401dc7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="167" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="167" bodyend="-1"/>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af1a24aac10c2ef3d05501a6b1af26dcc" compoundref="__inverse__monomial__basis__functions__method_8py" startline="174" endline="255">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.initialize_interpolator</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af6bd58b74cf5f9e51124e414f9e5a7d2" compoundref="__inverse__monomial__basis__functions__method_8py" startline="452" endline="511">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.interpolate</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1ad23d11f704a76ece93c37796698b5644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.__init__</definition>
        <argsstring>(self, A, B=None, p=0, ti=[], options={}, verbose=False, basis_functions_type=&apos;Orthogonal2&apos;)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" kindref="member">A</ref></type>
          <defname>A</defname>
        </param>
        <param>
          <type><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref></type>
          <defname>B</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref></type>
          <defname>p</defname>
          <defval>0</defval>
        </param>
        <param>
          <type>ti</type>
          <defname>ti</defname>
          <defval>[]</defval>
        </param>
        <param>
          <type><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1aa7e7c3c9208e548c066c88869df9b124" kindref="member">options</ref></type>
          <defname>options</defname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" kindref="member">verbose</ref></type>
          <defname>verbose</defname>
          <defval>False</defval>
        </param>
        <param>
          <type><ref refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1adddf906bcbd84e2557593a0f6c97b752" kindref="member">basis_functions_type</ref></type>
          <defname>basis_functions_type</defname>
          <defval>&apos;Orthogonal2&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Initializes the base class and the attributes, namely, the computes the
trace at interpolant points.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="148" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="149" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af1a24aac10c2ef3d05501a6b1af26dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.initialize_interpolator</definition>
        <argsstring>(self)</argsstring>
        <name>initialize_interpolator</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Internal function that is called by the class constructor. It computes
the weight coefficients :math:`w_i` and stores them in the member
variable ``self.w``.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="174" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="174" bodyend="255"/>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a6b8e4059f0371249f228542bf0031295" compoundref="__inverse__monomial__basis__functions__method_8py" startline="166">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.a</references>
        <references refid="classSmoothStep_1a680de90ce8bee905435664a6b15d665f" compoundref="functions_8h" startline="258">SmoothStep::alpha</references>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af084fb16cc78ff4d2a22d2ec915ffa78" compoundref="__inverse__monomial__basis__functions__method_8py" startline="165">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.alpha</references>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1aff990c3677acb01a825fd327d6c80933" compoundref="__inverse__monomial__basis__functions__method_8py" startline="282" endline="353">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions</references>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1adddf906bcbd84e2557593a0f6c97b752" compoundref="__inverse__monomial__basis__functions__method_8py" startline="162">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions_type</references>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7c5272e89448e04db04eba0bb10a117b" compoundref="__inverse__monomial__basis__functions__method_8py" startline="358" endline="447">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.orthogonal_basis_function_coefficients</references>
        <references refid="classimate_1_1interpolator_1_1__chebyshev__rational__functions__method_1_1ChebyshevRationalFunctionsMethod_1a7131cc9ef4dbf46a7122054a69f6eef1" compoundref="__chebyshev__rational__functions__method_8py" startline="135">imate.interpolator._chebyshev_rational_functions_method.ChebyshevRationalFunctionsMethod.q</references>
        <references refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac7cef414659b58736e7fb3bcb60f6969" compoundref="__eigenvalues__method_8py" startline="137">imate.interpolator._eigenvalues_method.EigenvaluesMethod.q</references>
        <references refid="classimate_1_1interpolator_1_1__exact__method_1_1ExactMethod_1a1d5db5757d2089b7c1ecc4d2feaf3e51" compoundref="interpolator_2__exact__method_8py" startline="94">imate.interpolator._exact_method.ExactMethod.q</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" compoundref="__interpolant__base_8py" startline="111">imate.interpolator._interpolant_base.InterpolantBase.q</references>
        <references refid="classimate_1_1interpolator_1_1__monomial__basis__functions__method_1_1MonomialBasisFunctionsMethod_1ab5e1ebcc18953fda4b9c20ef5e816883" compoundref="__monomial__basis__functions__method_8py" startline="149">imate.interpolator._monomial_basis_functions_method.MonomialBasisFunctionsMethod.q</references>
        <references refid="classimate_1_1interpolator_1_1interpolate__schatten_1_1InterpolateSchatten_1af0effb5324f0e773ae8deb275099cf43" compoundref="interpolate__schatten_8py" startline="256">imate.interpolator.interpolate_schatten.InterpolateSchatten.q</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1acc462c4406fe65b9fc25a0c1d092dfe5" compoundref="__interpolant__base_8py" startline="114">imate.interpolator._interpolant_base.InterpolantBase.scale_t</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" compoundref="__interpolant__base_8py" startline="110">imate.interpolator._interpolant_base.InterpolantBase.t_i</references>
        <references refid="classimate_1_1interpolator_1_1__monomial__basis__functions__method_1_1MonomialBasisFunctionsMethod_1a2648d0b6a6207723a019de74419400c3" compoundref="__monomial__basis__functions__method_8py" startline="148">imate.interpolator._monomial_basis_functions_method.MonomialBasisFunctionsMethod.t_i</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a47d85671bdafd1b0d30002c6d50e48e9" compoundref="__interpolant__base_8py" startline="109">imate.interpolator._interpolant_base.InterpolantBase.tau0</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a13fd1ead3c2fb291728d8134f6677487" compoundref="__interpolant__base_8py" startline="113">imate.interpolator._interpolant_base.InterpolantBase.tau_i</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" compoundref="__interpolant__base_8py" startline="77">imate.interpolator._interpolant_base.InterpolantBase.verbose</references>
        <references refid="classimate_1_1interpolator_1_1interpolate__schatten_1_1InterpolateSchatten_1aa20bf547bac7d4856e9a6e5923ac379c" compoundref="interpolate__schatten_8py" startline="253">imate.interpolator.interpolate_schatten.InterpolateSchatten.verbose</references>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7db38c28a3b2716bb850ea8a61401dc7" compoundref="__inverse__monomial__basis__functions__method_8py" startline="167">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.w</references>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1aff990c3677acb01a825fd327d6c80933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions</definition>
        <argsstring>(self, j, t)</argsstring>
        <name>basis_functions</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>j</type>
          <defname>j</defname>
        </param>
        <param>
          <type>t</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns the basis functions at inquiry point :math:`t`

The index j of the basis functions should start from 1.

:param t: Inquiry point.
:type t: float

:return: Basis functions at inquiry point.
:rtype: float

Depending on ``basis_functions_type``, the basis functions are:

* For ``NonOrthogonal``:

    .. math::

        \\phi_i(t) = t^{\\frac{1}{i}}, \\qquad i &gt; 0

* For ``Orthogonal``:

    .. math::

        \\phi_i^{\\perp}(t) = \\alpha_i \\sum_{j=1}^9 a_{ij} \\phi_j(t)

* For ``Orthogona2``:

    .. math::

        \\phi_i^{\\perp}(t) = \\alpha_i \\sum_{j=1}^9 a_{ij}
        \\phi_{j+1}(t)

.. note::

    The difference between ``Orthogonal`` and ``Orthogonal2`` is that
    in the former, the functions :math:`\\phi_j^{\\perp}` at
    :math:`j=1, \\dots, 9` are orthogonal but in the latter, the
    functions at :math:`j=2, \\dots, 9` are orthogonal. That is they
    are not orthogonal to :math:`\\phi_1(t) = t`.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="282" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="282" bodyend="353"/>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1adddf906bcbd84e2557593a0f6c97b752" compoundref="__inverse__monomial__basis__functions__method_8py" startline="162">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions_type</references>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7c5272e89448e04db04eba0bb10a117b" compoundref="__inverse__monomial__basis__functions__method_8py" startline="358" endline="447">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.orthogonal_basis_function_coefficients</references>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af1a24aac10c2ef3d05501a6b1af26dcc" compoundref="__inverse__monomial__basis__functions__method_8py" startline="174" endline="255">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.initialize_interpolator</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af6bd58b74cf5f9e51124e414f9e5a7d2" compoundref="__inverse__monomial__basis__functions__method_8py" startline="452" endline="511">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.interpolate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7c5272e89448e04db04eba0bb10a117b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.orthogonal_basis_function_coefficients</definition>
        <argsstring>(self)</argsstring>
        <name>orthogonal_basis_function_coefficients</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Hard-coded coefficients :math:`\\alpha_i` and :math:`a_{ij}` which will
be used by :func:`basis_functions` to form the orthogonal basis:

.. math::

    \\phi_i^{\\perp}(t) = \\alpha_i \\sum_{j=0}^9 a_{ij} \\phi_j(t).

**Generate coefficients:**

To generate these coefficients, see the python package
`Orthogonal Functions &lt;https://ameli.github.io/Orthogonal-Functions&gt;`_.

Install this package by

    ::

        pip install OrthogonalFunctions

* To generate the coefficients corresponding to ``Orthogonal`` basis:

  ::

    gen-orth -n 9 -s 0

* To generate the coefficients corresponding to ``Orthogonal2`` basis:

  ::

    gen-orth -n 9 -s 1

:return: Weight coefficients of the orthogonal basis functions.
:rtype: numpy.array, numpy.ndarray
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="358" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="358" bodyend="447"/>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1adddf906bcbd84e2557593a0f6c97b752" compoundref="__inverse__monomial__basis__functions__method_8py" startline="162">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions_type</references>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1aff990c3677acb01a825fd327d6c80933" compoundref="__inverse__monomial__basis__functions__method_8py" startline="282" endline="353">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af1a24aac10c2ef3d05501a6b1af26dcc" compoundref="__inverse__monomial__basis__functions__method_8py" startline="174" endline="255">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.initialize_interpolator</referencedby>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af6bd58b74cf5f9e51124e414f9e5a7d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.interpolate</definition>
        <argsstring>(self, t)</argsstring>
        <name>interpolate</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>t</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Interpolates :math:`\\mathrm{trace} \\left( (\\mathbf{A} +
t \\mathbf{B})^{-1} \\right)` at :math:`t`.

This is the main interface function of this module and it is used after
the interpolation
object is initialized.

:param t: The inquiry point(s).
:type t: float, list, or numpy.array

:return: The interpolated value of the trace.
:rtype: float or numpy.array

**Details:**

Depending on the ``basis_functions_type``, the interpolation is as
follows:

For ``&apos;NonOrthogonal&apos;`` basis:

.. math::

    \\frac{1}{\\tau(t)} = \\frac{1}{\\tau_0} + t + \\sum_{j=1}^q w_j
    \\phi_j(t).

For ``&apos;Orthogonal&apos;`` and ``&apos;Orthogonal2&apos;`` bases:

.. math::

    \\frac{1}{\\tau(t)} = \\frac{1}{\\tau_0} + t + \\sum_{j=1}^q w_j
    \\phi_j(t).
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="452" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="452" bodyend="511"/>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1aff990c3677acb01a825fd327d6c80933" compoundref="__inverse__monomial__basis__functions__method_8py" startline="282" endline="353">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions</references>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1adddf906bcbd84e2557593a0f6c97b752" compoundref="__inverse__monomial__basis__functions__method_8py" startline="162">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.basis_functions_type</references>
        <references refid="classimate_1_1interpolator_1_1__chebyshev__rational__functions__method_1_1ChebyshevRationalFunctionsMethod_1a7131cc9ef4dbf46a7122054a69f6eef1" compoundref="__chebyshev__rational__functions__method_8py" startline="135">imate.interpolator._chebyshev_rational_functions_method.ChebyshevRationalFunctionsMethod.q</references>
        <references refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac7cef414659b58736e7fb3bcb60f6969" compoundref="__eigenvalues__method_8py" startline="137">imate.interpolator._eigenvalues_method.EigenvaluesMethod.q</references>
        <references refid="classimate_1_1interpolator_1_1__exact__method_1_1ExactMethod_1a1d5db5757d2089b7c1ecc4d2feaf3e51" compoundref="interpolator_2__exact__method_8py" startline="94">imate.interpolator._exact_method.ExactMethod.q</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" compoundref="__interpolant__base_8py" startline="111">imate.interpolator._interpolant_base.InterpolantBase.q</references>
        <references refid="classimate_1_1interpolator_1_1__monomial__basis__functions__method_1_1MonomialBasisFunctionsMethod_1ab5e1ebcc18953fda4b9c20ef5e816883" compoundref="__monomial__basis__functions__method_8py" startline="149">imate.interpolator._monomial_basis_functions_method.MonomialBasisFunctionsMethod.q</references>
        <references refid="classimate_1_1interpolator_1_1interpolate__schatten_1_1InterpolateSchatten_1af0effb5324f0e773ae8deb275099cf43" compoundref="interpolate__schatten_8py" startline="256">imate.interpolator.interpolate_schatten.InterpolateSchatten.q</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1acc462c4406fe65b9fc25a0c1d092dfe5" compoundref="__interpolant__base_8py" startline="114">imate.interpolator._interpolant_base.InterpolantBase.scale_t</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" compoundref="__interpolant__base_8py" startline="108">imate.interpolator._interpolant_base.InterpolantBase.schatten_B</references>
        <references refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a47d85671bdafd1b0d30002c6d50e48e9" compoundref="__interpolant__base_8py" startline="109">imate.interpolator._interpolant_base.InterpolantBase.tau0</references>
        <references refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7db38c28a3b2716bb850ea8a61401dc7" compoundref="__inverse__monomial__basis__functions__method_8py" startline="167">imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.w</references>
        <referencedby refid="classimate_1_1interpolator_1_1interpolate__schatten_1_1InterpolateSchatten_1a8d73f3cded7d501f9563ce09ff9951e4" compoundref="interpolate__schatten_8py" startline="317" endline="323">imate.interpolator.interpolate_schatten.InterpolateSchatten.__call__</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1interpolate__schatten_1_1InterpolateSchatten_1ab6500d8ed781a3dc971e9c06e856b58f" compoundref="interpolate__schatten_8py" startline="760" endline="962">imate.interpolator.interpolate_schatten.InterpolateSchatten._plot_finite</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1interpolate__schatten_1_1InterpolateSchatten_1a9cbdbcf5477fa0f629bfc90b96124d47" compoundref="interpolate__schatten_8py" startline="592" endline="751">imate.interpolator.interpolate_schatten.InterpolateSchatten._plot_semi_infinite</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1interpolate__logdet_1_1InterpolateLogdet_1af80d3805ea6303c00baf4f1e92d79652" compoundref="interpolate__logdet_8py" startline="449" endline="591">imate.interpolator.interpolate_logdet.InterpolateLogdet.plot</referencedby>
        <referencedby refid="classimate_1_1interpolator_1_1interpolate__trace_1_1InterpolateTrace_1a38158704798314a5ea2a5d3f9fb2a226" compoundref="interpolate__trace_8py" startline="447" endline="607">imate.interpolator.interpolate_trace.InterpolateTrace.plot</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a700682399321ad86ff68f59c37151938" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod.phi</definition>
        <argsstring>(i, t)</argsstring>
        <name>phi</name>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <param>
          <type>t</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Non-orthogonal basis function, which is defined by

.. math::

    \\phi_i(t) = t^{\\frac{1}{i}}, \\qquad i &gt; 0.

:param t: Inquiry point.
:type t: float

:return: The value of the function :math:`\\phi(t)`
:rtype: float
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="261" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="261" bodyend="277"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Computes the trace of inverse of an invertible matrix :math:`\\mathbf{A} +
t \\mathbf{B}` using an interpolation scheme based on inverse monomial
basis functions (see details below).

**Class Inheritance:**

.. inheritance-diagram::
    imate.InterpolateTraceinv.InverseMonomialBasisFunctionsMethod
    :parts: 1

:param A: Invertible matrix, can be either dense or sparse matrix.
:type A: numpy.ndarray

:param B: Invertible matrix, can be either dense or sparse matrix.
:type B: numpy.ndarray

:param options: A dictionary of input arguments fo
    :mod:`imate.traceinv.traceinv` module.
:type options: dict

:param verbose: If ``True``, prints some information on the computation
    process. Default is ``False``.
:type verbose: bool

:param basis_functions_type: One of the types ``&apos;NonOrthogonal&apos;``,
    ``&apos;Orthogonal&apos;`` and ``&apos;Orthogonal2&apos;``. Default is ``&apos;orthogonal2&apos;``.
:type basisFunctionsType: string

**Interpolation Method**

Define the function

.. math::

    \\tau(t) = \\frac{\\mathrm{trace}\\left( (\\mathbf{A} +
    t \\mathbf{B})^{-1} \\right)}{\\mathrm{trace}(\\mathbf{B}^{-1})}

and :math:`\\tau_0 = \\tau(0)`. Then, we approximate :math:`\\tau^{-1}(t)`
by

.. math::

    \\frac{1}{\\tau(t)} \\approx \\frac{1}{\\tau_0} + \\sum_{i = 0}^q w_i
    \\phi_i(t),

where  :math:`\\phi_i` are some known basis functions, and :math:`w_i` are
the coefficients of the linear basis functions. The first coefficient is
set to :math:`w_{0} = 1` and the rest of the weights are to be found from
the known function values :math:`\\tau_i = \\tau(t_i)` at some given
interpolant points :math:`t_i`.

**Basis Functions:**

In this module, three kinds of basis functions which can be set by the
argument ``basis_functions_type``.

When ``basis_functions_type`` is set to ``NonOrthogonal``, the basis
functions are the inverse of the monomial functions defined by

.. math::

    \\phi_i(t) = t^{\\frac{1}{i+1}}, \\qquad i = 0, \\dots, q.

When ``basis_functions_type`` is set to ``&apos;Orthogonal&apos;`` or
``&apos;Orthogonal2&apos;``, the orthogonal form of the above basis functions are
used. Orthogonal basis functions are formed by the above non-orthogonal
functions as

.. math::

    \\phi_i^{\\perp}(t) = \\alpha_i \\sum_{j=1}^i a_{ij} \\phi_j(t)

The coefficients :math:`\\alpha_i` and :math:`a_{ij}` can be obtained by
the python package `Orthogoanl Functions
&lt;https://ameli.github.io/Orthogonal-Functions&gt;`_. These coefficients are
hard-coded in this function up to :math:`i = 9`. Thus, in this module, up
to nine interpolant points are supported.

.. warning::

    The non-orthogonal basis functions can lead to ill-conditioned system
    of equations for finding the weight coefficients :math:`w_i`. When the
    number of interpolating points is large (such as :math:`q &gt; 6`), it is
    recommended to use the orthogonalized set of basis functions.

.. note::

    The recommended basis function type is ``&apos;Orthogonal2&apos;``.


**Example**

This class can be invoked from
:class:`imate.InterpolateTraceinv.InterpolateTraceinv` module using
``method=&apos;RMBF&apos;`` argument.

.. code-block:: python

    &gt;&gt;&gt; from imate import generate_matrix
    &gt;&gt;&gt; from imate import InterpolateTraceinv

    &gt;&gt;&gt; # Create a symmetric positive-definite matrix, size (20**2, 20**2)
    &gt;&gt;&gt; A = generate_matrix(size=20)

    &gt;&gt;&gt; # Create an object that interpolates trace of inverse of A+tI
    &gt;&gt;&gt; # where I is identity matrix.
    &gt;&gt;&gt; TI = InterpolateTraceinv(A, method=&apos;RMBF&apos;)

    &gt;&gt;&gt; # Interpolate A+tI at some input point t
    &gt;&gt;&gt; t = 4e-1
    &gt;&gt;&gt; trace = TI.interpolate(t)

.. seealso::

    The other class that provides interpolation with basis functions method
    is :mod:`imate.InterpolateTraceinv.Monomialbasis_functionsMethod`.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod</label>
        <link refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>imate.interpolator._interpolant_base.InterpolantBase</label>
        <link refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>imate.interpolator._inverse_monomial_basis_functions_method.InverseMonomialBasisFunctionsMethod</label>
        <link refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>object</label>
      </node>
      <node id="2">
        <label>imate.interpolator._interpolant_base.InterpolantBase</label>
        <link refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" line="24" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_inverse_monomial_basis_functions_method.py" bodystart="24" bodyend="511"/>
    <listofallmembers>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1ad23d11f704a76ece93c37796698b5644" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>__init__</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1aba73527d5dff94b10354fb9c98f70e9c" prot="public" virt="non-virtual" ambiguityscope="imate::interpolator::_interpolant_base::InterpolantBase."><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>__init__</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a413ec50ad36453760a7640af0d254aa5" prot="private" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>_compute</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae34c18fb577fc57bcf0f70cc0a86d073" prot="private" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>_compute_for_array</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ac280d2903b95eebb4f52d53a39f9814b" prot="private" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>_compute_schatten</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af4dff8144fb18580899069269f2f57eb" prot="private" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>_compute_schatten_of_input_matrices</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a6b8e4059f0371249f228542bf0031295" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>a</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>A</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af084fb16cc78ff4d2a22d2ec915ffa78" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>alpha</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>B</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a83e399ae8baf97e70d45ca82dda5bf47" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>B_is_identity</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1aff990c3677acb01a825fd327d6c80933" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>basis_functions</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1adddf906bcbd84e2557593a0f6c97b752" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>basis_functions_type</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a8518f8ac4e73004e17323152e1dbbd27" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>bound</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ab536b71b179a86e3c869f7b1f5e1a113" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>eval</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a8a30ecda14ac7c529bdd11eed7839b32" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>find_scale_ti</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af1a24aac10c2ef3d05501a6b1af26dcc" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>initialize_interpolator</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1af6bd58b74cf5f9e51124e414f9e5a7d2" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>interpolate</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>n</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1aa7e7c3c9208e548c066c88869df9b124" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>options</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7c5272e89448e04db04eba0bb10a117b" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>orthogonal_basis_function_coefficients</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>p</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a700682399321ad86ff68f59c37151938" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>phi</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>q</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1acc462c4406fe65b9fc25a0c1d092dfe5" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>scale_t</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a74e195d8d706b23871cabae7d73c6531" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>schatten_A</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>schatten_B</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a071721de283ac47ca00f1c6f67391932" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>schatten_i</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>t_i</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a47d85671bdafd1b0d30002c6d50e48e9" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>tau0</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a13fd1ead3c2fb291728d8134f6677487" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>tau_i</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1afd64ffb368b4d148dd70b8cda73ecd5b" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>upper_bound</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a31d0bedf8669872d29106669eaab276b" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>use_sparse</name></member>
      <member refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>verbose</name></member>
      <member refid="classimate_1_1interpolator_1_1__inverse__monomial__basis__functions__method_1_1InverseMonomialBasisFunctionsMethod_1a7db38c28a3b2716bb850ea8a61401dc7" prot="public" virt="non-virtual"><scope>imate::interpolator::_inverse_monomial_basis_functions_method::InverseMonomialBasisFunctionsMethod</scope><name>w</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
