<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classConvergenceTools" kind="class" language="C++" prot="public">
    <compoundname>ConvergenceTools</compoundname>
    <includes refid="convergence__tools_8h" local="no">convergence_tools.h</includes>
    <templateparamlist>
      <param>
        <type>typename DataType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classConvergenceTools_1a5a0602ee4f933a4521ccf9ea137dd191" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref></type>
        <definition>FlagType ConvergenceTools&lt; DataType &gt;::check_convergence</definition>
        <argsstring>(DataType **samples, const IndexType min_num_samples, const IndexType num_inquiries, const IndexType *processed_samples_indices, const IndexType num_processed_samples, const DataType confidence_level, const DataType error_atol, const DataType error_rtol, DataType *error, IndexType *num_samples_used, FlagType *converged)</argsstring>
        <name>check_convergence</name>
        <param>
          <type>DataType **</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref></type>
          <declname>min_num_samples</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref></type>
          <declname>num_inquiries</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref> *</type>
          <declname>processed_samples_indices</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref></type>
          <declname>num_processed_samples</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>confidence_level</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>error_atol</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>error_rtol</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>error</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref> *</type>
          <declname>num_samples_used</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref> *</type>
          <declname>converged</declname>
        </param>
        <briefdescription>
<para>Checks if the standard deviation of the set of the cumulative averages of trace estimators converged below the given tolerance. </para>
        </briefdescription>
        <detaileddescription>
<para>The convergence criterion for each trace inquiry is if: <verbatim>            standard_deviation &lt; max(rtol * average[i], atol)

        where \c rtol and \c atol are relative and absolute tolerances,
        respectively. If this criterion is satisfied for *all* trace
        inquiries, this function returns \c 1, otherwise \c 0.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">samples</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2D array of the estimated trace. This array has the shape <computeroutput></computeroutput>(max_num_samples,num_inquiries). Each column of this array is the estimated trace values for a different trace inquiry. The rows are Monte-Carlo samples of the estimation of trace. The cumulative average of the rows are expected to converge. Note that because of parallel processing, the rows of this array are not filled sequentially. The list of filled rows are stored in <computeroutput>processed_samples_indices</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min_num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of sample iterations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_inquiries</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns of <computeroutput>samples</computeroutput> array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">processed_samples_indices</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D array indicating the processing order of rows of the <computeroutput>samples</computeroutput>. In parallel processing, this order of processing the rows of <computeroutput>samples</computeroutput> is not necessarly sequential. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_processed_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>A counter that keeps track of how many samples were processed so far in the iterations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">confidence_level</parametername>
</parameternamelist>
<parameterdescription>
<para>The confidence level of the error, which is a number between <computeroutput>0</computeroutput> and <computeroutput>1</computeroutput>. This affects the scale of <computeroutput>error</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">error_atol</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute tolerance criterion to be compared with the standard deviation of the cumulative averages. If <computeroutput>error_atol</computeroutput> is zero, it is ignored, and only <computeroutput>rtol</computeroutput> is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">error_rtol</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative tolerance criterion to be compared with the standard deviation of the cumulative averages. If <computeroutput>error_rtol</computeroutput> is zero, it is ignored, and only <computeroutput>error_atol</computeroutput> is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">error</parametername>
</parameternamelist>
<parameterdescription>
<para>The error of estimation of trace, which is the standard deviation of the rows of <computeroutput>samples</computeroutput> array. The size of this array is <computeroutput>num_inquiries</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">num_samples_used</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of the size of the number of columns of <computeroutput>samples</computeroutput>. Each element indicates how many iterations were used till convergence is reached for each column of the <computeroutput>samples</computeroutput>. The number of iterations should be a number between <computeroutput>min_num_samples</computeroutput> and <computeroutput>max_num_samples</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">converged</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of the size of the number of columns of <computeroutput>samples</computeroutput>. Each element indicates which column of <computeroutput>samples</computeroutput> has converged to the tolerance criteria. Normally, if the <computeroutput>num_samples_used</computeroutput> is less than <computeroutput>max_num_samples</computeroutput>, it indicates that the convergence has reached. the rows of <computeroutput>samples</computeroutput> array. The size of this array is <computeroutput>num_inquiries</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A signal to indicate the status of computation:<itemizedlist>
<listitem><para><computeroutput>1</computeroutput> indicates successful convergence within the given tolerances was met. Convergence is achieved when all elements of <computeroutput>convergence</computeroutput> array are below <computeroutput>convergence_atol</computeroutput> or <computeroutput>convergence_rtol</computeroutput> times <computeroutput>trace</computeroutput>.</para>
</listitem><listitem><para><computeroutput>0</computeroutput> indicates the convergence criterion was not met for at least one of the trace inquiries. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.h" line="41" column="25" bodyfile="/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.cpp" bodystart="95" bodyend="194"/>
        <references refid="special__functions_8cpp_1a44303dd28715725483ae9bb6e214fc17" compoundref="special__functions_8cpp" startline="56" endline="97">erf_inv</references>
        <referencedby refid="classcTraceEstimator_1a29144b4d62c71f0889002754384f57f4" compoundref="c__trace__estimator_8cpp" startline="183" endline="297">cTraceEstimator&lt; DataType &gt;::c_trace_estimator</referencedby>
        <referencedby refid="classcuTraceEstimator_1aac1cf44a9dc5522d3104b2cdf3b05285" compoundref="cu__trace__estimator_8cu" startline="188" endline="305">cuTraceEstimator&lt; DataType &gt;::cu_trace_estimator</referencedby>
      </memberdef>
      <memberdef kind="function" id="classConvergenceTools_1a88ae9fc09aa9af950d41cf803934c028" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConvergenceTools&lt; DataType &gt;::average_estimates</definition>
        <argsstring>(const DataType confidence_level, const DataType outlier_significance_level, const IndexType num_inquiries, const IndexType max_num_samples, const IndexType *num_samples_used, const IndexType *processed_samples_indices, DataType **samples, IndexType *num_outliers, DataType *trace, DataType *error)</argsstring>
        <name>average_estimates</name>
        <param>
          <type>const DataType</type>
          <declname>confidence_level</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>outlier_significance_level</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref></type>
          <declname>num_inquiries</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref></type>
          <declname>max_num_samples</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref> *</type>
          <declname>num_samples_used</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref> *</type>
          <declname>processed_samples_indices</declname>
        </param>
        <param>
          <type>DataType **</type>
          <declname>samples</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref> *</type>
          <declname>num_outliers</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>trace</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Averages the estimates of trace. Removes outliers and reevaluates the error to take into account for the removal of the outliers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The elimination of outliers does not affect the elements of samples array, rather it only affects the reevaluation of trac and error arrays.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">confidence_level</parametername>
</parameternamelist>
<parameterdescription>
<para>The confidence level of the error, which is a number between <computeroutput>0</computeroutput> and <computeroutput>1</computeroutput>. This affects the scale of <computeroutput>error</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">outlier_significance_level</parametername>
</parameternamelist>
<parameterdescription>
<para>One minus the confidence level of the uncertainty band of the outlier. This is a number between <computeroutput>0</computeroutput> and <computeroutput>1</computeroutput>. Confidence level of outleir and significance level of outlier are commlement of each other. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_inquiries</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of batches of parameters. This function computes <computeroutput>num_inquiries</computeroutput> values of trace corresponding to different batch of parameters of the linear operator <computeroutput>A</computeroutput>. Hence, the number of output trace is <computeroutput>num_inquiries</computeroutput>. Hence, it is the number of columns of the output array <computeroutput>samples</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of times that the trace estimation is repeated. The output trace value is the average of the samples. Hence, this is the number of rows of the output array <computeroutput>samples</computeroutput>. Larger number of samples leads to a better trace estimation. The computational const linearly increases with number of samples. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_samples_used</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of the size of the number of columns of <computeroutput>samples</computeroutput>. Each element indicates how many iterations were used till convergence is reached for each column of the <computeroutput>samples</computeroutput>. The number of iterations should be a number between <computeroutput>min_num_samples</computeroutput> and <computeroutput>max_num_samples</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">processed_samples_indices</parametername>
</parameternamelist>
<parameterdescription>
<para>A 1D array indicating the processing order of rows of the <computeroutput>samples</computeroutput>. In paralleli processing, this order of processing the rows of <computeroutput>samples</computeroutput> is not necessarly sequential. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">samples</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array of all estimated trace samples. The shape of this array is <computeroutput></computeroutput>(max_num_samples*num_inquiries). The average of the rows is also given in <computeroutput>trace</computeroutput> array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">num_outliers</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array with the size of number of columns of <computeroutput>samples</computeroutput>. Each element indicates how many rows of the <computeroutput>samples</computeroutput> array were outliers and were removed during averaging rows of <computeroutput>samples</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">trace</parametername>
</parameternamelist>
<parameterdescription>
<para>The output trace of size <computeroutput>num_inquiries</computeroutput>. These values are the average of the rows of <computeroutput>samples</computeroutput> array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">error</parametername>
</parameternamelist>
<parameterdescription>
<para>The error of estimation of trace, which is the standard deviation of the rows of <computeroutput>samples</computeroutput> array. The size of this array is <computeroutput>num_inquiries</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.h" line="55" column="21" bodyfile="/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.cpp" bodystart="256" bodyend="376"/>
        <references refid="special__functions_8cpp_1a44303dd28715725483ae9bb6e214fc17" compoundref="special__functions_8cpp" startline="56" endline="97">erf_inv</references>
        <referencedby refid="classcTraceEstimator_1a29144b4d62c71f0889002754384f57f4" compoundref="c__trace__estimator_8cpp" startline="183" endline="297">cTraceEstimator&lt; DataType &gt;::c_trace_estimator</referencedby>
        <referencedby refid="classcuTraceEstimator_1aac1cf44a9dc5522d3104b2cdf3b05285" compoundref="cu__trace__estimator_8cu" startline="188" endline="305">cuTraceEstimator&lt; DataType &gt;::cu_trace_estimator</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A static class to compute the trace of implicit matrix functions using stochastic Lanczos quadrature method. This class acts as a templated namespace, where the member methods is <emphasis>public</emphasis> and <emphasis>static</emphasis>. The internal private member functions are also static. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classDiagonalization" kindref="compound">Diagonalization</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.h" line="36" column="1" bodyfile="/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.h" bodystart="37" bodyend="66"/>
    <listofallmembers>
      <member refid="classConvergenceTools_1a88ae9fc09aa9af950d41cf803934c028" prot="public" virt="non-virtual"><scope>ConvergenceTools</scope><name>average_estimates</name></member>
      <member refid="classConvergenceTools_1a5a0602ee4f933a4521ccf9ea137dd191" prot="public" virt="non-virtual"><scope>ConvergenceTools</scope><name>check_convergence</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
