<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="__interpolant__base_8py" kind="file" language="Python">
    <compoundname>_interpolant_base.py</compoundname>
    <innerclass refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase" prot="public">imate::interpolator::_interpolant_base::InterpolantBase</innerclass>
    <innernamespace refid="namespaceimate_1_1interpolator_1_1__interpolant__base">imate::interpolator::_interpolant_base</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceimate_1_1interpolator_1_1__interpolant__base" refkind="compound"><highlight class="comment">#<sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-FileType:<sp/>SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..schatten<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>schatten</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Interpolant<sp/>Base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase" kindref="compound">InterpolantBase</ref>(object):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>is<sp/>the<sp/>base<sp/>class<sp/>for<sp/>the<sp/>interpolation<sp/>methods.</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>inheritance-diagram::</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imate.InterpolateTraceinv.ExactMethod</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imate.InterpolateTraceinv.EigenvaluesMethod</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imate.InterpolateTraceinv.MonomialBasisFunctionsMethod</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imate.InterpolateTraceinv.InverseMonomialBasisFunctionsMethod</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imate.InterpolateTraceinv.RadialBasisFunctionsMethod</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imate.InterpolateTraceinv.RationalPolynomialFunctionsMethod</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:parts:<sp/>1</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>A:<sp/>A<sp/>positive-definite<sp/>matrix.<sp/>Matrix<sp/>can<sp/>be<sp/>dense<sp/>or<sp/>sparse.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>A:<sp/>numpy.ndarray<sp/>or<sp/>scipy.sparse.csc_matrix</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>B:<sp/>A<sp/>positive-definite<sp/>matrix.<sp/>Matrix<sp/>can<sp/>be<sp/>dense<sp/>or<sp/>sparse.</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>``None``<sp/>or<sp/>not<sp/>provided,<sp/>it<sp/>is<sp/>assumed<sp/>that<sp/>``B``<sp/>is<sp/>an<sp/>identity</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>of<sp/>the<sp/>shape<sp/>of<sp/>``A``.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>B:<sp/>numpy.ndarray<sp/>or<sp/>scipy.sparse.csc_matrix</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>ti:<sp/>A<sp/>list<sp/>or<sp/>an<sp/>array<sp/>of<sp/>points<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpolator<sp/>use<sp/>to<sp/>interpolate.<sp/>The<sp/>trace<sp/>of<sp/>inverse<sp/>is<sp/>computed<sp/>for</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>interpolant<sp/>points<sp/>with<sp/>exact<sp/>method.</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>ti:<sp/>list(float)<sp/>or<sp/>numpy.array(float)</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>method:<sp/>One<sp/>of<sp/>the<sp/>methods<sp/>``&apos;EXT&apos;``,<sp/>``&apos;EIG&apos;``,<sp/>``&apos;MBF&apos;``,</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``&apos;RMBF&apos;``,<sp/>``&apos;RBF&apos;``,<sp/>and<sp/>``&apos;RPF&apos;``.<sp/>Default<sp/>is<sp/>``&apos;RMBF&apos;``.</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>method:<sp/>string</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>options:<sp/>A<sp/>dictionary<sp/>of<sp/>arguments<sp/>to<sp/>pass<sp/>to</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:mod:`imate.traceinv`<sp/>module.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>options:<sp/>dict</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>verbose:<sp/>If<sp/>``True``,<sp/>prints<sp/>some<sp/>information<sp/>on<sp/>the<sp/>computation</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process.<sp/>Default<sp/>is<sp/>``False``.</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>verbose:<sp/>bool</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1aba73527d5dff94b10354fb9c98f70e9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1aba73527d5dff94b10354fb9c98f70e9c" kindref="member">__init__</ref>(self,<sp/>A,<sp/>B=None,<sp/>p=0,<sp/>ti=None,<sp/>options={},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose=False):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>initialization<sp/>function<sp/>does<sp/>the<sp/>followings:</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Initializes<sp/>the<sp/>interpolant<sp/>points<sp/>and<sp/>the<sp/>input<sp/>matrix.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Scale<sp/>the<sp/>interpolant<sp/>points<sp/>if<sp/>needed.</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Computes<sp/>the<sp/>trace<sp/>of<sp/>inverse<sp/>at<sp/>the<sp/>interpolant<sp/>points.</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" kindref="member">verbose</ref>verbose<sp/>=<sp/>verbose</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Matrix<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" kindref="member">A</ref>A<sp/>=<sp/>A</highlight></codeline>
<codeline lineno="81" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" kindref="member">A</ref>A.shape[0]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Determine<sp/>to<sp/>use<sp/>sparse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a31d0bedf8669872d29106669eaab276b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a31d0bedf8669872d29106669eaab276b" kindref="member">use_sparse</ref>use_sparse<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>scipy.sparse.isspmatrix(A):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a31d0bedf8669872d29106669eaab276b" kindref="member">use_sparse</ref>use_sparse<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Matrix<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>B<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref>B<sp/>=<sp/>B</highlight></codeline>
<codeline lineno="91" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a83e399ae8baf97e70d45ca82dda5bf47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a83e399ae8baf97e70d45ca82dda5bf47" kindref="member">B_is_identity</ref>B_is_identity<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Assume<sp/>B<sp/>is<sp/>identity<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a83e399ae8baf97e70d45ca82dda5bf47" kindref="member">B_is_identity</ref>B_is_identity<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a31d0bedf8669872d29106669eaab276b" kindref="member">use_sparse</ref>use_sparse:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>sparse<sp/>identity<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref>B<sp/>=<sp/>scipy.sparse.eye(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n,<sp/>format=</highlight><highlight class="stringliteral">&apos;csc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>dense<sp/>identity<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref>B<sp/>=<sp/>numpy.eye(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Power<sp/>p<sp/>of<sp/>(A+tB)**p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p<sp/>=<sp/>p</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>trace<sp/>at<sp/>interpolant<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a74e195d8d706b23871cabae7d73c6531" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a74e195d8d706b23871cabae7d73c6531" kindref="member">schatten_A</ref>schatten_A<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" kindref="member">schatten_B</ref>schatten_B<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a47d85671bdafd1b0d30002c6d50e48e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a47d85671bdafd1b0d30002c6d50e48e9" kindref="member">tau0</ref>tau0<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" kindref="member">t_i</ref>t_i<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" kindref="member">q</ref>q<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a071721de283ac47ca00f1c6f67391932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a071721de283ac47ca00f1c6f67391932" kindref="member">schatten_i</ref>schatten_i<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a13fd1ead3c2fb291728d8134f6677487" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a13fd1ead3c2fb291728d8134f6677487" kindref="member">tau_i</ref>tau_i<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1acc462c4406fe65b9fc25a0c1d092dfe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1acc462c4406fe65b9fc25a0c1d092dfe5" kindref="member">scale_t</ref>scale_t<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1aa7e7c3c9208e548c066c88869df9b124" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1aa7e7c3c9208e548c066c88869df9b124" kindref="member">options</ref>options<sp/>=<sp/>options</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ti<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>self.schatten_A,<sp/>self.schatten_B,<sp/>and<sp/>self.tau0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af4dff8144fb18580899069269f2f57eb" kindref="member">_compute_schatten_of_input_matrices</ref>_compute_schatten_of_input_matrices()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ti<sp/>!=<sp/>[]:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>schatten<sp/>norm<sp/>at<sp/>interpolant<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" kindref="member">t_i</ref>t_i<sp/>=<sp/>numpy.array(ti)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" kindref="member">q</ref>q<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" kindref="member">t_i</ref>t_i.size</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a071721de283ac47ca00f1c6f67391932" kindref="member">schatten_i</ref>schatten_i<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae34c18fb577fc57bcf0f70cc0a86d073" kindref="member">_compute_for_array</ref>_compute_for_array(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" kindref="member">t_i</ref>t_i)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a13fd1ead3c2fb291728d8134f6677487" kindref="member">tau_i</ref>tau_i<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a071721de283ac47ca00f1c6f67391932" kindref="member">schatten_i</ref>schatten_i<sp/>/<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" kindref="member">schatten_B</ref>schatten_B</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Scale<sp/>interpolant<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1acc462c4406fe65b9fc25a0c1d092dfe5" kindref="member">scale_t</ref>scale_t<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a8a30ecda14ac7c529bdd11eed7839b32" kindref="member">find_scale_ti</ref>find_scale_ti()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>schatten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ac280d2903b95eebb4f52d53a39f9814b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ac280d2903b95eebb4f52d53a39f9814b" kindref="member">_compute_schatten</ref>(self,<sp/>A,<sp/>p):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>Schatten<sp/>norm<sp/>of<sp/>A,<sp/>defined<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>p<sp/>is<sp/>zero,<sp/>computes<sp/>det(A+tB)**(1/n)</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>p<sp/>is<sp/>not<sp/>zero,<sp/>computes<sp/>(trace(A+tB)**(p)/n)**(1/p)</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schatten_<sp/>=<sp/><ref refid="namespaceimate_1_1schatten_1_1schatten_1addd398048ffe6f31c8401438d3ab708e" kindref="member">schatten</ref>(A,<sp/>p=self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p,<sp/>**self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1aa7e7c3c9208e548c066c88869df9b124" kindref="member">options</ref>options)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schatten_</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>tracep<sp/>of<sp/>input<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af4dff8144fb18580899069269f2f57eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af4dff8144fb18580899069269f2f57eb" kindref="member">_compute_schatten_of_input_matrices</ref>(self):</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>Schatten<sp/>norm<sp/>of<sp/>A,<sp/>B,<sp/>and<sp/>its<sp/>ratio.</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Schatten<sp/>norm<sp/>is<sp/>defined<sp/>as:</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>p<sp/>is<sp/>zero,<sp/>computes<sp/>det(A+tB)**(1/n)</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>p<sp/>is<sp/>not<sp/>zero,<sp/>computes<sp/>(trace(A+tB)**(p)/n)**(1/p)</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>trace<sp/>of<sp/>Ainv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a74e195d8d706b23871cabae7d73c6531" kindref="member">schatten_A</ref>schatten_A<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ac280d2903b95eebb4f52d53a39f9814b" kindref="member">_compute_schatten</ref>_compute_schatten(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" kindref="member">A</ref>A,<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>trace<sp/>of<sp/>Binv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a83e399ae8baf97e70d45ca82dda5bf47" kindref="member">B_is_identity</ref>B_is_identity:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" kindref="member">schatten_B</ref>schatten_B<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" kindref="member">schatten_B</ref>schatten_B<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ac280d2903b95eebb4f52d53a39f9814b" kindref="member">_compute_schatten</ref>_compute_schatten(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref>B,<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>tau0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a47d85671bdafd1b0d30002c6d50e48e9" kindref="member">tau0</ref>tau0<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a74e195d8d706b23871cabae7d73c6531" kindref="member">schatten_A</ref>schatten_A<sp/>/<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" kindref="member">schatten_B</ref>schatten_B</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scale<sp/>interpolant<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a8a30ecda14ac7c529bdd11eed7839b32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a8a30ecda14ac7c529bdd11eed7839b32" kindref="member">find_scale_ti</ref>(self):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rescales<sp/>the<sp/>range<sp/>of<sp/>interpolant<sp/>points.<sp/>This<sp/>function<sp/>is<sp/>intended<sp/>to</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>used<sp/>internally.</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>largest<sp/>interpolant<sp/>point<sp/>in<sp/>``self.ti``<sp/>is</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>greater<sp/>than<sp/>``1``,<sp/>this<sp/>function<sp/>rescales<sp/>their<sp/>range<sp/>to<sp/>max<sp/>at<sp/>``1``.</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>rescale<sp/>is<sp/>necessary<sp/>if<sp/>the<sp/>method<sp/>of<sp/>interpolation<sp/>is<sp/>based<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orthogonal<sp/>basis<sp/>functions,<sp/>which<sp/>they<sp/>are<sp/>define<sp/>to<sp/>be<sp/>orthogonal</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>range<sp/>:math:`t<sp/>\\in<sp/>[0,<sp/>1]`.</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Scale<sp/>t,<sp/>if<sp/>some<sp/>of<sp/>t_i<sp/>are<sp/>greater<sp/>than<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_t<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" kindref="member">t_i</ref>t_i.size<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>numpy.max(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" kindref="member">t_i</ref>t_i)<sp/>&gt;<sp/>1.0:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_t<sp/>=<sp/>numpy.max(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae4a4039a4689e235dadae74f54858271" kindref="member">t_i</ref>t_i)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scale_t</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>eval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ab536b71b179a86e3c869f7b1f5e1a113" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ab536b71b179a86e3c869f7b1f5e1a113" kindref="member">eval</ref>(self,<sp/>t):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exact<sp/>solution<sp/>without<sp/>interpolation.<sp/>This<sp/>is<sp/>an<sp/>interface<sp/>function.</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>p<sp/>is<sp/>zero,<sp/>computes<sp/>det(A+tB)**(1/n)</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>p<sp/>is<sp/>not<sp/>zero,,<sp/>computes<sp/>(trace(A+tB)**(p))**(1/p)</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schatten<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a413ec50ad36453760a7640af0d254aa5" kindref="member">_compute</ref>_compute(t)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schatten</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a413ec50ad36453760a7640af0d254aa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a413ec50ad36453760a7640af0d254aa5" kindref="member">_compute</ref>(self,<sp/>t):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>Schatten<sp/>norm<sp/>of<sp/>A+tB<sp/>without<sp/>interpolation<sp/>for<sp/>one<sp/>t.</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Schatten<sp/>norm<sp/>is<sp/>defined<sp/>as:</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>p<sp/>is<sp/>zero,<sp/>computes<sp/>det(A+tB)**(1/n)</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>p<sp/>is<sp/>not<sp/>zero,<sp/>computes<sp/>(trace(A+tB)**(p)/n)**(1/p)</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>An<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" kindref="member">A</ref>A<sp/>+<sp/>t<sp/>*<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref>B</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schatten<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ac280d2903b95eebb4f52d53a39f9814b" kindref="member">_compute_schatten</ref>_compute_schatten(An,<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schatten</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>for<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae34c18fb577fc57bcf0f70cc0a86d073" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1ae34c18fb577fc57bcf0f70cc0a86d073" kindref="member">_compute_for_array</ref>(self,<sp/>t_i):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>Schatten<sp/>norm<sp/>of<sp/>A+tB<sp/>without<sp/>interpolation<sp/>for<sp/>an<sp/>array<sp/>of<sp/>t.</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Schatten<sp/>norm<sp/>is<sp/>defined<sp/>as:</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>p<sp/>is<sp/>zero,<sp/>computes<sp/>det(A+tB)**(1/n)</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>p<sp/>is<sp/>not<sp/>zero,<sp/>computes<sp/>(trace(A+tB)**(p)/n)**(1/p)</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" kindref="member">verbose</ref>verbose:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Evaluate<sp/>function<sp/>at<sp/>interpolant<sp/>points<sp/>...&apos;</highlight><highlight class="normal">,<sp/>end=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>numpy.isscalar(t_i):</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>for<sp/>scalar<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace_i<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a413ec50ad36453760a7640af0d254aa5" kindref="member">_compute</ref>_compute(t_i)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>for<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace_i<sp/>=<sp/>numpy.zeros(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" kindref="member">q</ref>q)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" kindref="member">q</ref>q):</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace_i[i]<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a413ec50ad36453760a7640af0d254aa5" kindref="member">_compute</ref>_compute(t_i[i])</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" kindref="member">verbose</ref>verbose:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;<sp/>Done.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trace_i</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1afd64ffb368b4d148dd70b8cda73ecd5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1afd64ffb368b4d148dd70b8cda73ecd5b" kindref="member">upper_bound</ref>(self,<sp/>t):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Upper<sp/>bound<sp/>of<sp/>the<sp/>function<sp/>:math:`t<sp/>\\mapsto<sp/>\\mathrm{trace}<sp/>\\left(</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{B})^{-1}<sp/>\\right)`.</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>lower<sp/>bound<sp/>is<sp/>given<sp/>by<sp/>Remark<sp/>2.2<sp/>of<sp/>[Ameli-2020]_<sp/>as</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathrm{trace}((\\mathbf{A}+t\\mathbf{B})^{-1})<sp/>\\geq</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\frac{n^2}{\\mathrm{trace}(\\mathbf{A})<sp/>+</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathrm{trace}(t<sp/>\\mathbf{B})}</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>t:<sp/>Inquiry<sp/>points</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>t:<sp/>float<sp/>or<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:<sp/>Lower<sp/>bound<sp/>of<sp/>the<sp/>trace<sp/>of<sp/>inverse<sp/>at<sp/>inquiry<sp/>points.</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>float<sp/>or<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p<sp/>!=<sp/>-1:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Lower<sp/>bound<sp/>is<sp/>only<sp/>available<sp/>for<sp/>&quot;p=-1&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Trace<sp/>of<sp/>A<sp/>and<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace_A<sp/>=<sp/>numpy.trace(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" kindref="member">A</ref>A)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace_B<sp/>=<sp/>numpy.trace(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref>B)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Lower<sp/>bound<sp/>of<sp/>trace<sp/>of<sp/>A+tB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace_ub<sp/>=<sp/>(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n**2)/(trace_A<sp/>+<sp/>t*trace_B)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schatten_ub<sp/>=<sp/>(trace_ub<sp/>/<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n)**(1.0/self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schatten_ub</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a8518f8ac4e73004e17323152e1dbbd27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a8518f8ac4e73004e17323152e1dbbd27" kindref="member">bound</ref>(self,<sp/>t):</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lower<sp/>bound<sp/>of<sp/>the<sp/>function<sp/>:math:`t<sp/>\\mapsto<sp/>\\mathrm{trace}<sp/>\\left(</highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{B})^{-1}<sp/>\\right)`.</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>upper<sp/>bound<sp/>is<sp/>given<sp/>by<sp/>Theorem<sp/>1<sp/>of<sp/>[Ameli-2020]_<sp/>as</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\frac{1}{\\tau(t)}<sp/>\\geq<sp/>\\frac{1}{\\tau_0}<sp/>+<sp/>t</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\tau(t)<sp/>=<sp/>\\frac{\\mathrm{trace}\\left(<sp/>(\\mathbf{A}<sp/>+</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>\\mathbf{B})^{-1}</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\right)}{\\mathrm{trace}(\\mathbf{B}^{-1})}</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>:math:`\\tau_0<sp/>=<sp/>\\tau(0)`.</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param<sp/>t:<sp/>Inquiry<sp/>points</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>t:<sp/>float<sp/>or<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:<sp/>Upper<sp/>bound<sp/>of<sp/>the<sp/>trace<sp/>of<sp/>inverse<sp/>at<sp/>inquiry<sp/>points.</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>float<sp/>or<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>trace<sp/>at<sp/>interpolant<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a47d85671bdafd1b0d30002c6d50e48e9" kindref="member">tau0</ref>tau0<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af4dff8144fb18580899069269f2f57eb" kindref="member">_compute_schatten_of_input_matrices</ref>_compute_schatten_of_input_matrices()</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Upper<sp/>bound<sp/>of<sp/>schatten<sp/>norm<sp/>of<sp/>A+tB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_bound<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a47d85671bdafd1b0d30002c6d50e48e9" kindref="member">tau0</ref>tau0<sp/>+<sp/>t</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schatten_bound<sp/>=<sp/>tau_bound<sp/>*<sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a270087e4ce38285c18c81e79a408d5a8" kindref="member">schatten_B</ref>schatten_B</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schatten_bound</highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_interpolant_base.py"/>
  </compounddef>
</doxygen>
