<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classIdentity" kind="class" language="C++" prot="public">
    <compoundname>Identity</compoundname>
    <basecompoundref refid="classFunction" prot="public" virt="non-virtual">Function</basecompoundref>
    <includes refid="functions_8h" local="no">functions.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classIdentity_1a3d50a8681f6ee06103f27755bb098fdc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float Identity::function</definition>
        <argsstring>(const float lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1a603a10dedebd89b477a23a5f8f705935">function</reimplements>
        <param>
          <type>const float</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/functions.h" line="68" column="23" bodyfile="/home/sia/work/github/imate/imate/functions/functions.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classIdentity_1a8adf764d26a5cb8e858d76cc2f331a71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Identity::function</definition>
        <argsstring>(const double lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1abb983ee238adf9b49ed7f1a7442e3019">function</reimplements>
        <param>
          <type>const double</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/functions.h" line="69" column="24" bodyfile="/home/sia/work/github/imate/imate/functions/functions.cpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classIdentity_1a75fb1deefe32816d79aa05c15ded292b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long double</type>
        <definition>long double Identity::function</definition>
        <argsstring>(const long double lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1a1e83c965a17529850d96015fb2d91968">function</reimplements>
        <param>
          <type>const long double</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/functions.h" line="70" column="29" bodyfile="/home/sia/work/github/imate/imate/functions/functions.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the function <formula id="38">$ f: \lambda \mapsto \lambda $</formula>. </para>
    </briefdescription>
    <detaileddescription>
<para>The matrix function <formula id="39">$ f: \mathbb{R}^{n \times n} \to \mathbb{R}^{n \times n} $</formula> is used in</para>
<para><formula id="40">\[ \mathrm{trace} \left( f(\mathbf{A}) \right). \]</formula></para>
<para>However, instead of a matrix function, the equivalent scalar function <formula id="41">$ f: \mathbb{R} \to \mathbb{R} $</formula> is defiend which acts on the eigenvalues of the matrix. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Function</label>
        <link refid="classFunction"/>
      </node>
      <node id="1">
        <label>Identity</label>
        <link refid="classIdentity"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Function</label>
        <link refid="classFunction"/>
      </node>
      <node id="1">
        <label>Identity</label>
        <link refid="classIdentity"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/github/imate/imate/functions/functions.h" line="65" column="1" bodyfile="/home/sia/work/github/imate/imate/functions/functions.h" bodystart="66" bodyend="71"/>
    <listofallmembers>
      <member refid="classIdentity_1a3d50a8681f6ee06103f27755bb098fdc" prot="public" virt="virtual"><scope>Identity</scope><name>function</name></member>
      <member refid="classIdentity_1a8adf764d26a5cb8e858d76cc2f331a71" prot="public" virt="virtual"><scope>Identity</scope><name>function</name></member>
      <member refid="classIdentity_1a75fb1deefe32816d79aa05c15ded292b" prot="public" virt="virtual"><scope>Identity</scope><name>function</name></member>
      <member refid="classFunction_1a3b03f7cf0b75d16edebdda1dee1db6fd" prot="public" virt="virtual"><scope>Identity</scope><name>~Function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
