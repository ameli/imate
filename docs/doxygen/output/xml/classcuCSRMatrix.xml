<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcuCSRMatrix" kind="class" language="C++" prot="public">
    <compoundname>cuCSRMatrix</compoundname>
    <basecompoundref refid="classcuMatrix" prot="public" virt="non-virtual">cuMatrix&lt; DataType &gt;</basecompoundref>
    <basecompoundref refid="classcCSRMatrix" prot="public" virt="non-virtual">cCSRMatrix&lt; DataType &gt;</basecompoundref>
    <includes refid="cu__csr__matrix_8h" local="no">cu_csr_matrix.h</includes>
    <templateparamlist>
      <param>
        <type>typename DataType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcuCSRMatrix_1abbe9e07d1521e95ac1631726ca05536b" prot="protected" static="no" mutable="no">
        <type>DataType **</type>
        <definition>DataType** cuCSRMatrix&lt; DataType &gt;::device_A_data</definition>
        <argsstring></argsstring>
        <name>device_A_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="82" column="18" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcuCSRMatrix_1af48755c0ad2558a24234e3442f1a56a5" prot="protected" static="no" mutable="no">
        <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> **</type>
        <definition>LongIndexType** cuCSRMatrix&lt; DataType &gt;::device_A_indices</definition>
        <argsstring></argsstring>
        <name>device_A_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="83" column="23" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcuCSRMatrix_1aa41bea125b9425e88d39fc642e7f8437" prot="protected" static="no" mutable="no">
        <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> **</type>
        <definition>LongIndexType** cuCSRMatrix&lt; DataType &gt;::device_A_index_pointer</definition>
        <argsstring></argsstring>
        <name>device_A_index_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="84" column="23" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcuCSRMatrix_1afd1d8b572ec8cc7f2c93645067f51abf" prot="protected" static="no" mutable="no">
        <type>void **</type>
        <definition>void** cuCSRMatrix&lt; DataType &gt;::device_buffer</definition>
        <argsstring></argsstring>
        <name>device_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="85" column="14" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="classcuCSRMatrix_1a6225b26c34a53755fea5cfd65b0743f3" compoundref="cu__csr__matrix_8cu" startline="52" endline="84">cuCSRMatrix&lt; DataType &gt;::cuCSRMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcuCSRMatrix_1a0adb85f5e1c0fac2f868fcdb0ae82f14" prot="protected" static="no" mutable="no">
        <type>size_t *</type>
        <definition>size_t* cuCSRMatrix&lt; DataType &gt;::device_buffer_num_bytes</definition>
        <argsstring></argsstring>
        <name>device_buffer_num_bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="86" column="16" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="classcuCSRMatrix_1a6225b26c34a53755fea5cfd65b0743f3" compoundref="cu__csr__matrix_8cu" startline="52" endline="84">cuCSRMatrix&lt; DataType &gt;::cuCSRMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcuCSRMatrix_1a94ba6c1ad09d00e50efbcb5a52fcb66f" prot="protected" static="no" mutable="no">
        <type>cusparseSpMatDescr_t *</type>
        <definition>cusparseSpMatDescr_t* cuCSRMatrix&lt; DataType &gt;::cusparse_matrix_A</definition>
        <argsstring></argsstring>
        <name>cusparse_matrix_A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="87" column="30" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcuCSRMatrix_1a271fc28ad13c373532818749eaa73183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cuCSRMatrix&lt; DataType &gt;::cuCSRMatrix</definition>
        <argsstring>()</argsstring>
        <name>cuCSRMatrix</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="37" column="9" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classcuCSRMatrix_1a6225b26c34a53755fea5cfd65b0743f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cuCSRMatrix&lt; DataType &gt;::cuCSRMatrix</definition>
        <argsstring>(const DataType *A_data_, const LongIndexType *A_indices_, const LongIndexType *A_index_pointer_, const LongIndexType num_rows_, const LongIndexType num_columns_, const int num_gpu_devices_)</argsstring>
        <name>cuCSRMatrix</name>
        <param>
          <type>const DataType *</type>
          <declname>A_data_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>A_indices_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>A_index_pointer_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_rows_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_columns_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>num_gpu_devices_</declname>
        </param>
        <briefdescription>
<para>Constructor with arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="39" column="9" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="52" bodyend="84"/>
        <references refid="classcuCSRMatrix_1af1c70b75225b3c39e9e8beab3255d897" compoundref="cu__csr__matrix_8cu" startline="165" endline="224">cuCSRMatrix&lt; DataType &gt;::copy_host_to_device</references>
        <references refid="classcuCSRMatrix_1afd1d8b572ec8cc7f2c93645067f51abf" compoundref="cu__csr__matrix_8h" startline="85">cuCSRMatrix&lt; DataType &gt;::device_buffer</references>
        <references refid="classcuCSRMatrix_1a0adb85f5e1c0fac2f868fcdb0ae82f14" compoundref="cu__csr__matrix_8h" startline="86">cuCSRMatrix&lt; DataType &gt;::device_buffer_num_bytes</references>
        <references refid="classcuLinearOperator_1a118f2b8f1523da52441070340f7c43f9" compoundref="cu__linear__operator_8cu" startline="217" endline="238">cuLinearOperator&lt; DataType &gt;::initialize_cusparse_handle</references>
        <references refid="classcuLinearOperator_1a701c8a301638c78c66a3290b0848483e" compoundref="cu__linear__operator_8h" startline="63">cuLinearOperator&lt; DataType &gt;::num_gpu_devices</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSRMatrix_1a5040e7af906ebb5e7b4ec1f5af701263" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>cuCSRMatrix&lt; DataType &gt;::~cuCSRMatrix</definition>
        <argsstring>()</argsstring>
        <name>~cuCSRMatrix</name>
        <briefdescription>
<para>Virtual desructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="47" column="17" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="95" bodyend="154"/>
        <references refid="classCudaInterface_1a427b7203f73cf821e35234e5f724064b" compoundref="cuda__interface_8cu" startline="166" endline="174">CudaInterface&lt; ArrayType &gt;::del</references>
        <references refid="namespacecusparse__interface_1a5ab766d1794cea863c5d79815e9b7537" compoundref="cusparse__interface_8cu" startline="141" endline="146">cusparse_interface::destroy_cusparse_matrix</references>
        <references refid="classCudaInterface_1aba5754e3b4c02d3b151fdee31fa0fd46" compoundref="cuda__interface_8cu" startline="188" endline="192">CudaInterface&lt; ArrayType &gt;::set_device</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSRMatrix_1ac7153e0293610828cf3455d01ffe8c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSRMatrix&lt; DataType &gt;::dot</definition>
        <argsstring>(const DataType *device_vector, DataType *device_product)</argsstring>
        <name>dot</name>
        <reimplements refid="classcCSRMatrix_1a5074b2a9d415dd6e867713341a00f9be">dot</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>device_vector</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="49" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="278" bodyend="318"/>
        <references refid="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048">cusparse_interface::create_cusparse_vector</references>
        <references refid="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420">cusparse_interface::cusparse_matvec</references>
        <references refid="cusparse__types_8h_1aa15860fbc431b7df1d83c21bce5c5f0f" compoundref="cusparse__types_8h" startline="32">CUSPARSE_SPMV_ALG_DEFAULT</references>
        <references refid="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" compoundref="cusparse__interface_8cu" startline="156" endline="161">cusparse_interface::destroy_cusparse_vector</references>
        <references refid="classCudaInterface_1a29ab521266d2670951510179d719ead1" compoundref="cuda__interface_8cu" startline="206" endline="213">CudaInterface&lt; ArrayType &gt;::get_device</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSRMatrix_1a96db9711b26e1be6b67da4d73f77cf70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSRMatrix&lt; DataType &gt;::dot_plus</definition>
        <argsstring>(const DataType *device_vector, const DataType alpha, DataType *device_product)</argsstring>
        <name>dot_plus</name>
        <reimplements refid="classcCSRMatrix_1aeea882fee0e29e012c140ae2f99efffb">dot_plus</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>device_vector</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="53" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="326" bodyend="366"/>
        <references refid="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048">cusparse_interface::create_cusparse_vector</references>
        <references refid="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420">cusparse_interface::cusparse_matvec</references>
        <references refid="cusparse__types_8h_1aa15860fbc431b7df1d83c21bce5c5f0f" compoundref="cusparse__types_8h" startline="32">CUSPARSE_SPMV_ALG_DEFAULT</references>
        <references refid="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" compoundref="cusparse__interface_8cu" startline="156" endline="161">cusparse_interface::destroy_cusparse_vector</references>
        <references refid="classCudaInterface_1a29ab521266d2670951510179d719ead1" compoundref="cuda__interface_8cu" startline="206" endline="213">CudaInterface&lt; ArrayType &gt;::get_device</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSRMatrix_1a533fef9f3fd9de1f3c984dae663b0ba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSRMatrix&lt; DataType &gt;::transpose_dot</definition>
        <argsstring>(const DataType *device_vector, DataType *device_product)</argsstring>
        <name>transpose_dot</name>
        <reimplements refid="classcCSRMatrix_1a481e0733264a9befe5286bda9c1832d5">transpose_dot</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>device_vector</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="58" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="374" bodyend="414"/>
        <references refid="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048">cusparse_interface::create_cusparse_vector</references>
        <references refid="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420">cusparse_interface::cusparse_matvec</references>
        <references refid="cusparse__types_8h_1aa15860fbc431b7df1d83c21bce5c5f0f" compoundref="cusparse__types_8h" startline="32">CUSPARSE_SPMV_ALG_DEFAULT</references>
        <references refid="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" compoundref="cusparse__interface_8cu" startline="156" endline="161">cusparse_interface::destroy_cusparse_vector</references>
        <references refid="classCudaInterface_1a29ab521266d2670951510179d719ead1" compoundref="cuda__interface_8cu" startline="206" endline="213">CudaInterface&lt; ArrayType &gt;::get_device</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSRMatrix_1ae43cfdb290779cd143389a2fa4ed5b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSRMatrix&lt; DataType &gt;::transpose_dot_plus</definition>
        <argsstring>(const DataType *device_vector, const DataType alpha, DataType *device_product)</argsstring>
        <name>transpose_dot_plus</name>
        <reimplements refid="classcCSRMatrix_1a25f9120cad4f8e2f36134a22a4661a92">transpose_dot_plus</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>device_vector</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="62" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="422" bodyend="462"/>
        <references refid="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048">cusparse_interface::create_cusparse_vector</references>
        <references refid="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420">cusparse_interface::cusparse_matvec</references>
        <references refid="cusparse__types_8h_1aa15860fbc431b7df1d83c21bce5c5f0f" compoundref="cusparse__types_8h" startline="32">CUSPARSE_SPMV_ALG_DEFAULT</references>
        <references refid="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" compoundref="cusparse__interface_8cu" startline="156" endline="161">cusparse_interface::destroy_cusparse_vector</references>
        <references refid="classCudaInterface_1a29ab521266d2670951510179d719ead1" compoundref="cuda__interface_8cu" startline="206" endline="213">CudaInterface&lt; ArrayType &gt;::get_device</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcuCSRMatrix_1af1c70b75225b3c39e9e8beab3255d897" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSRMatrix&lt; DataType &gt;::copy_host_to_device</definition>
        <argsstring>()</argsstring>
        <name>copy_host_to_device</name>
        <reimplements refid="classcuMatrix_1a9bb6e16a29711add2cf81c69d91dc082">copy_host_to_device</reimplements>
        <briefdescription>
<para>Copies the member data from the host memory to the device memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="70" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="165" bodyend="224"/>
        <references refid="classCudaInterface_1a65875bf1fdfe213562b31e3459f04b33" compoundref="cuda__interface_8cu" startline="36" endline="60">CudaInterface&lt; ArrayType &gt;::alloc</references>
        <references refid="classCudaInterface_1a95efada2ca34b3490f96ccfa97b4d6eb" compoundref="cuda__interface_8cu" startline="142" endline="151">CudaInterface&lt; ArrayType &gt;::copy_to_device</references>
        <references refid="namespacecusparse__interface_1a26d83ba6e0fe31cb088cd77f2b7d59cb">cusparse_interface::create_cusparse_matrix</references>
        <references refid="classCudaInterface_1aba5754e3b4c02d3b151fdee31fa0fd46" compoundref="cuda__interface_8cu" startline="188" endline="192">CudaInterface&lt; ArrayType &gt;::set_device</references>
        <referencedby refid="classcuCSRMatrix_1a6225b26c34a53755fea5cfd65b0743f3" compoundref="cu__csr__matrix_8cu" startline="52" endline="84">cuCSRMatrix&lt; DataType &gt;::cuCSRMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcuCSRMatrix_1ae629d237f7336a31473b637b9aeb2741" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cuCSRMatrix&lt; DataType &gt;::allocate_buffer</definition>
        <argsstring>(const int device_id, cusparseOperation_t cusparse_operation, const DataType alpha, const DataType beta, cusparseDnVecDescr_t &amp;cusparse_input_vector, cusparseDnVecDescr_t &amp;cusparse_output_vector, cusparseSpMVAlg_t algorithm)</argsstring>
        <name>allocate_buffer</name>
        <param>
          <type>const int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>cusparseOperation_t</type>
          <declname>cusparse_operation</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t &amp;</type>
          <declname>cusparse_input_vector</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t &amp;</type>
          <declname>cusparse_output_vector</declname>
        </param>
        <param>
          <type>cusparseSpMVAlg_t</type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>Allocates an external buffer for matrix-vector multiplication using <computeroutput>cusparseSpMV</computeroutput> function. </para>
        </briefdescription>
        <detaileddescription>
<para>If buffer size if not the same as required buffer size, allocate (or reallocate) memory. The allocation is always performed in the first call of this function since buffer size is initialized to zero in constructor. But for the next calls it might not be reallocated if the buffer size is the same. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="72" column="14" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu" bodystart="241" bodyend="270"/>
        <references refid="classCudaInterface_1a45411db9045668d1c0407e33d7b4e825" compoundref="cuda__interface_8cu" startline="115" endline="125">CudaInterface&lt; ArrayType &gt;::alloc_bytes</references>
        <references refid="namespacecusparse__interface_1aefebdbbc12a46732f32942498111a16c">cusparse_interface::cusparse_matrix_buffer_size</references>
        <references refid="classCudaInterface_1a427b7203f73cf821e35234e5f724064b" compoundref="cuda__interface_8cu" startline="166" endline="174">CudaInterface&lt; ArrayType &gt;::del</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>cMatrix&lt; DataType &gt;</label>
        <link refid="classcMatrix"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>cuCSRMatrix&lt; DataType &gt;</label>
        <link refid="classcuCSRMatrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>cuLinearOperator&lt; DataType &gt;</label>
        <link refid="classcuLinearOperator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>cCSRMatrix&lt; DataType &gt;</label>
        <link refid="classcCSRMatrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cuMatrix&lt; DataType &gt;</label>
        <link refid="classcuMatrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>cMatrix&lt; DataType &gt;</label>
        <link refid="classcMatrix"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>cuCSRMatrix&lt; DataType &gt;</label>
        <link refid="classcuCSRMatrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>cuLinearOperator&lt; DataType &gt;</label>
        <link refid="classcuLinearOperator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>cCSRMatrix&lt; DataType &gt;</label>
        <link refid="classcCSRMatrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cuMatrix&lt; DataType &gt;</label>
        <link refid="classcuMatrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" line="30" column="1" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h" bodystart="33" bodyend="88"/>
    <listofallmembers>
      <member refid="classcCSRMatrix_1a7aab6a9d1cb201890fe6788cef0eae67" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>A_data</name></member>
      <member refid="classcCSRMatrix_1a2bb853f01ed9e1dae7e48f9aae2af2a7" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>A_index_pointer</name></member>
      <member refid="classcCSRMatrix_1acc3b6855b8477e6cba3c3151ccbbf735" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>A_indices</name></member>
      <member refid="classcuCSRMatrix_1ae629d237f7336a31473b637b9aeb2741" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>allocate_buffer</name></member>
      <member refid="classcCSRMatrix_1ae54d494415328bb4d5e37e9a6bd0b489" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cCSRMatrix</name></member>
      <member refid="classcCSRMatrix_1ace6216c1ef8eb0b95db68e2692e152d9" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cCSRMatrix</name></member>
      <member refid="classcLinearOperator_1acb0880fed1d5599d721a9438c207ee5b" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cLinearOperator</name></member>
      <member refid="classcLinearOperator_1ac844c5dd7b83eb1e95f3c96181366629" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cLinearOperator</name></member>
      <member refid="classcMatrix_1a3e7134e2fe4ad377d33b730ac49ee4c5" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cMatrix</name></member>
      <member refid="classcuLinearOperator_1ac5b5c2becca5fd6368acd5c98de7bbe5" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>copied_host_to_device</name></member>
      <member refid="classcuCSRMatrix_1af1c70b75225b3c39e9e8beab3255d897" prot="protected" virt="virtual"><scope>cuCSRMatrix</scope><name>copy_host_to_device</name></member>
      <member refid="classcuLinearOperator_1a46558cb4eb689bf6131c2e2415efea0d" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cublas_handle</name></member>
      <member refid="classcuCSRMatrix_1a271fc28ad13c373532818749eaa73183" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cuCSRMatrix</name></member>
      <member refid="classcuCSRMatrix_1a6225b26c34a53755fea5cfd65b0743f3" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cuCSRMatrix</name></member>
      <member refid="classcuLinearOperator_1a003b67351f4a3cf2e574a1e8631e1b24" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cuLinearOperator</name></member>
      <member refid="classcuLinearOperator_1a8a27f677cbfb7c9c26d07904cdd0ee74" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cuLinearOperator</name></member>
      <member refid="classcuMatrix_1a8f1e4536906b1f57e05877bd64d5f47e" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cuMatrix</name></member>
      <member refid="classcuMatrix_1acd84126f06028a052ebeda858fa14798" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cuMatrix</name></member>
      <member refid="classcuLinearOperator_1ab097cf1372d598ceac08237e26bafc6d" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cusparse_handle</name></member>
      <member refid="classcuCSRMatrix_1a94ba6c1ad09d00e50efbcb5a52fcb66f" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>cusparse_matrix_A</name></member>
      <member refid="classcuCSRMatrix_1abbe9e07d1521e95ac1631726ca05536b" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>device_A_data</name></member>
      <member refid="classcuCSRMatrix_1aa41bea125b9425e88d39fc642e7f8437" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>device_A_index_pointer</name></member>
      <member refid="classcuCSRMatrix_1af48755c0ad2558a24234e3442f1a56a5" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>device_A_indices</name></member>
      <member refid="classcuCSRMatrix_1afd1d8b572ec8cc7f2c93645067f51abf" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>device_buffer</name></member>
      <member refid="classcuCSRMatrix_1a0adb85f5e1c0fac2f868fcdb0ae82f14" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>device_buffer_num_bytes</name></member>
      <member refid="classcuCSRMatrix_1ac7153e0293610828cf3455d01ffe8c30" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>dot</name></member>
      <member refid="classcuCSRMatrix_1a96db9711b26e1be6b67da4d73f77cf70" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>dot_plus</name></member>
      <member refid="classcLinearOperator_1ac4c88c2dcdc8a4d33a77df3979789d42" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>eigenvalue_relation_known</name></member>
      <member refid="classcuLinearOperator_1aa0bf630097fc3820d7ec27ec4e1a2994" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>get_cublas_handle</name></member>
      <member refid="classcLinearOperator_1a0dd6306a434563e4a48a806b43f23d03" prot="public" virt="pure-virtual" ambiguityscope="cuMatrix::"><scope>cuCSRMatrix</scope><name>get_eigenvalue</name></member>
      <member refid="classcMatrix_1afb08422559c53336b4515a6627a9d990" prot="public" virt="virtual" ambiguityscope="cCSRMatrix::"><scope>cuCSRMatrix</scope><name>get_eigenvalue</name></member>
      <member refid="classcCSRMatrix_1a5ba91dad4ec62d1ef40a2095e9cefa7b" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>get_nnz</name></member>
      <member refid="classcLinearOperator_1a08a2eb3bd8ff1f47d1141dc164af1c61" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>get_num_columns</name></member>
      <member refid="classcLinearOperator_1af9be60b44a47eed5b2c98f077ff54987" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>get_num_parameters</name></member>
      <member refid="classcLinearOperator_1aecc5b62db1d8a41f5112b289c7031aaf" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>get_num_rows</name></member>
      <member refid="classcuLinearOperator_1ae2bec474007baff1b7e598a869e83e12" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>initialize_cublas_handle</name></member>
      <member refid="classcuLinearOperator_1a118f2b8f1523da52441070340f7c43f9" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>initialize_cusparse_handle</name></member>
      <member refid="classcLinearOperator_1af0c980ca87c2795e0dbfda1c84f74591" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>is_eigenvalue_relation_known</name></member>
      <member refid="classcCSRMatrix_1a7f2869b79991a2ea2e9a8eaebd050dcb" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>is_identity_matrix</name></member>
      <member refid="classcLinearOperator_1acdafe59b033d5a73f5abe380f63f40a1" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>num_columns</name></member>
      <member refid="classcuLinearOperator_1a701c8a301638c78c66a3290b0848483e" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>num_gpu_devices</name></member>
      <member refid="classcLinearOperator_1aab9f0063e55c2a1a92a7e643f086348b" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>num_parameters</name></member>
      <member refid="classcLinearOperator_1a6786391614f08ef1575554f78717fbb0" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>num_rows</name></member>
      <member refid="classcLinearOperator_1a22683aa9286bfd651f1f2dbae3660545" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>parameters</name></member>
      <member refid="classcuLinearOperator_1a8dac55aff04e3f372468b21367a6dab8" prot="protected" virt="non-virtual"><scope>cuCSRMatrix</scope><name>query_gpu_devices</name></member>
      <member refid="classcLinearOperator_1ad7395bd04ec8014c9dd0e66c318ae125" prot="public" virt="non-virtual"><scope>cuCSRMatrix</scope><name>set_parameters</name></member>
      <member refid="classcuCSRMatrix_1a533fef9f3fd9de1f3c984dae663b0ba7" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>transpose_dot</name></member>
      <member refid="classcuCSRMatrix_1ae43cfdb290779cd143389a2fa4ed5b3f" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>transpose_dot_plus</name></member>
      <member refid="classcCSRMatrix_1aa0d385830c4d70fcccd734183f91a13f" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>~cCSRMatrix</name></member>
      <member refid="classcLinearOperator_1a53065884c6a1349054a96a9fb8838e65" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>~cLinearOperator</name></member>
      <member refid="classcMatrix_1a0b7276e140f160bdfbb5cdbd14f4265e" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>~cMatrix</name></member>
      <member refid="classcuCSRMatrix_1a5040e7af906ebb5e7b4ec1f5af701263" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>~cuCSRMatrix</name></member>
      <member refid="classcuLinearOperator_1ad1d14172ed32afa599208af04ec4db0c" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>~cuLinearOperator</name></member>
      <member refid="classcuMatrix_1a9a764596132535491b6614e2637ab636" prot="public" virt="virtual"><scope>cuCSRMatrix</scope><name>~cuMatrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
