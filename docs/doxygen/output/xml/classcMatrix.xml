<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcMatrix" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>cMatrix</compoundname>
    <basecompoundref refid="classcLinearOperator" prot="public" virt="virtual">cLinearOperator&lt; DataType &gt;</basecompoundref>
    <derivedcompoundref refid="classcCSCMatrix" prot="public" virt="non-virtual">cCSCMatrix&lt; DataType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcCSRMatrix" prot="public" virt="non-virtual">cCSRMatrix&lt; DataType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcDenseMatrix" prot="public" virt="non-virtual">cDenseMatrix&lt; DataType &gt;</derivedcompoundref>
    <includes refid="c__matrix_8h" local="no">c_matrix.h</includes>
    <templateparamlist>
      <param>
        <type>typename DataType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcMatrix_1a3e7134e2fe4ad377d33b730ac49ee4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cMatrix&lt; DataType &gt;::cMatrix</definition>
        <argsstring>()</argsstring>
        <name>cMatrix</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h" line="45" column="9" bodyfile="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classcMatrix_1a0b7276e140f160bdfbb5cdbd14f4265e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>cMatrix&lt; DataType &gt;::~cMatrix</definition>
        <argsstring>()</argsstring>
        <name>~cMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h" line="47" column="17" bodyfile="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classcMatrix_1afb08422559c53336b4515a6627a9d990" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>DataType</type>
        <definition>DataType cMatrix&lt; DataType &gt;::get_eigenvalue</definition>
        <argsstring>(const DataType *known_parameters, const DataType known_eigenvalue, const DataType *inquiry_parameters) const</argsstring>
        <name>get_eigenvalue</name>
        <reimplements refid="classcLinearOperator_1a0dd6306a434563e4a48a806b43f23d03">get_eigenvalue</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>known_parameters</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>known_eigenvalue</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>inquiry_parameters</declname>
        </param>
        <briefdescription>
<para>This virtual function is implemented from its pure virtual function of the base class. In this class, this functio has no use and was only implemented so that this class be able to be instantiated (due to the pure virtual function). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">known_parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>A set of parameters of the operator where the corresponding eigenvalue of the parameter is known for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">known_eigenvalue</parametername>
</parameternamelist>
<parameterdescription>
<para>The known eigenvalue of the operator for the known parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inquiry_parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>A set of inquiry parameters of the operator where the corresponding eigenvalue of the operator is sought. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The eigenvalue of the operator corresponding the inquiry parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h" line="49" column="18" bodyfile="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.cpp" bodystart="64" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classcMatrix_1a1ad379eba2ec9877da2ddd43aa7e2021" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref></type>
        <definition>virtual FlagType cMatrix&lt; DataType &gt;::is_identity_matrix</definition>
        <argsstring>() const =0</argsstring>
        <name>is_identity_matrix</name>
        <reimplementedby refid="classcCSCMatrix_1a79d28a5222adf5aa510c3e859285dd2c">is_identity_matrix</reimplementedby>
        <reimplementedby refid="classcCSRMatrix_1a7f2869b79991a2ea2e9a8eaebd050dcb">is_identity_matrix</reimplementedby>
        <reimplementedby refid="classcDenseMatrix_1a657035cddc1ef4c3e936d7ded871415a">is_identity_matrix</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h" line="54" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classcMatrix_1a0f5d440b2d592259b6dc26e00335b847" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void cMatrix&lt; DataType &gt;::dot_plus</definition>
        <argsstring>(const DataType *vector, const DataType alpha, DataType *product)=0</argsstring>
        <name>dot_plus</name>
        <reimplementedby refid="classcuCSCMatrix_1ac4759c30ffb86521f4ae29eac739db42">dot_plus</reimplementedby>
        <reimplementedby refid="classcuCSRMatrix_1a96db9711b26e1be6b67da4d73f77cf70">dot_plus</reimplementedby>
        <reimplementedby refid="classcuDenseMatrix_1a5be7f76677e25f81d4a1edbedfbf3f35">dot_plus</reimplementedby>
        <reimplementedby refid="classcCSCMatrix_1a9c016188ebff671e8df98a6cf96ce1c4">dot_plus</reimplementedby>
        <reimplementedby refid="classcCSRMatrix_1aeea882fee0e29e012c140ae2f99efffb">dot_plus</reimplementedby>
        <reimplementedby refid="classcDenseMatrix_1a9ea1621bef79d3410e3617798ec0fd59">dot_plus</reimplementedby>
        <param>
          <type>const DataType *</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h" line="56" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classcMatrix_1af2feaf32d99537897767b14c2c1708b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void cMatrix&lt; DataType &gt;::transpose_dot_plus</definition>
        <argsstring>(const DataType *vector, const DataType alpha, DataType *product)=0</argsstring>
        <name>transpose_dot_plus</name>
        <reimplementedby refid="classcuCSCMatrix_1a19f87522864944c7d622c1a3653bf883">transpose_dot_plus</reimplementedby>
        <reimplementedby refid="classcuCSRMatrix_1ae43cfdb290779cd143389a2fa4ed5b3f">transpose_dot_plus</reimplementedby>
        <reimplementedby refid="classcuDenseMatrix_1a04afe283c6f3570cbaffb36b8043d940">transpose_dot_plus</reimplementedby>
        <reimplementedby refid="classcCSCMatrix_1ada140e4a0a6d3a1d4efc88c234afd650">transpose_dot_plus</reimplementedby>
        <reimplementedby refid="classcCSRMatrix_1a25f9120cad4f8e2f36134a22a4661a92">transpose_dot_plus</reimplementedby>
        <reimplementedby refid="classcDenseMatrix_1a3932df3fb31e974f74931a99c8892e9b">transpose_dot_plus</reimplementedby>
        <param>
          <type>const DataType *</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h" line="61" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for constant matrices. </para>
    </briefdescription>
    <detaileddescription>
<para>The prefix <computeroutput>c</computeroutput> in this class&apos;s name (and its derivatves), stands for the <computeroutput>cpp</computeroutput> code, intrast to the <computeroutput>cu</computeroutput> prefix, which stands for the cuda code. Most derived classes have a cuda counterpart.</para>
<para><simplesect kind="see"><para><ref refid="classcAffineMatrixFunction" kindref="compound">cAffineMatrixFunction</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>cMatrix&lt; DataType &gt;</label>
        <link refid="classcMatrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>cuCSRMatrix&lt; DataType &gt;</label>
        <link refid="classcuCSRMatrix"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>cCSRMatrix&lt; DataType &gt;</label>
        <link refid="classcCSRMatrix"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>cuCSCMatrix&lt; DataType &gt;</label>
        <link refid="classcuCSCMatrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>cuDenseMatrix&lt; DataType &gt;</label>
        <link refid="classcuDenseMatrix"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>cDenseMatrix&lt; DataType &gt;</label>
        <link refid="classcDenseMatrix"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
      <node id="3">
        <label>cCSCMatrix&lt; DataType &gt;</label>
        <link refid="classcCSCMatrix"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>cMatrix&lt; DataType &gt;</label>
        <link refid="classcMatrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h" line="40" column="1" bodyfile="/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h" bodystart="41" bodyend="65"/>
    <listofallmembers>
      <member refid="classcLinearOperator_1acb0880fed1d5599d721a9438c207ee5b" prot="public" virt="non-virtual"><scope>cMatrix</scope><name>cLinearOperator</name></member>
      <member refid="classcLinearOperator_1ac844c5dd7b83eb1e95f3c96181366629" prot="public" virt="non-virtual"><scope>cMatrix</scope><name>cLinearOperator</name></member>
      <member refid="classcMatrix_1a3e7134e2fe4ad377d33b730ac49ee4c5" prot="public" virt="non-virtual"><scope>cMatrix</scope><name>cMatrix</name></member>
      <member refid="classcLinearOperator_1a48c76860a74f00fefaa1297368d17a77" prot="public" virt="pure-virtual"><scope>cMatrix</scope><name>dot</name></member>
      <member refid="classcMatrix_1a0f5d440b2d592259b6dc26e00335b847" prot="public" virt="pure-virtual"><scope>cMatrix</scope><name>dot_plus</name></member>
      <member refid="classcLinearOperator_1ac4c88c2dcdc8a4d33a77df3979789d42" prot="protected" virt="non-virtual"><scope>cMatrix</scope><name>eigenvalue_relation_known</name></member>
      <member refid="classcMatrix_1afb08422559c53336b4515a6627a9d990" prot="public" virt="virtual"><scope>cMatrix</scope><name>get_eigenvalue</name></member>
      <member refid="classcLinearOperator_1a08a2eb3bd8ff1f47d1141dc164af1c61" prot="public" virt="non-virtual"><scope>cMatrix</scope><name>get_num_columns</name></member>
      <member refid="classcLinearOperator_1af9be60b44a47eed5b2c98f077ff54987" prot="public" virt="non-virtual"><scope>cMatrix</scope><name>get_num_parameters</name></member>
      <member refid="classcLinearOperator_1aecc5b62db1d8a41f5112b289c7031aaf" prot="public" virt="non-virtual"><scope>cMatrix</scope><name>get_num_rows</name></member>
      <member refid="classcLinearOperator_1af0c980ca87c2795e0dbfda1c84f74591" prot="public" virt="non-virtual"><scope>cMatrix</scope><name>is_eigenvalue_relation_known</name></member>
      <member refid="classcMatrix_1a1ad379eba2ec9877da2ddd43aa7e2021" prot="public" virt="pure-virtual"><scope>cMatrix</scope><name>is_identity_matrix</name></member>
      <member refid="classcLinearOperator_1acdafe59b033d5a73f5abe380f63f40a1" prot="protected" virt="non-virtual"><scope>cMatrix</scope><name>num_columns</name></member>
      <member refid="classcLinearOperator_1aab9f0063e55c2a1a92a7e643f086348b" prot="protected" virt="non-virtual"><scope>cMatrix</scope><name>num_parameters</name></member>
      <member refid="classcLinearOperator_1a6786391614f08ef1575554f78717fbb0" prot="protected" virt="non-virtual"><scope>cMatrix</scope><name>num_rows</name></member>
      <member refid="classcLinearOperator_1a22683aa9286bfd651f1f2dbae3660545" prot="protected" virt="non-virtual"><scope>cMatrix</scope><name>parameters</name></member>
      <member refid="classcLinearOperator_1ad7395bd04ec8014c9dd0e66c318ae125" prot="public" virt="non-virtual"><scope>cMatrix</scope><name>set_parameters</name></member>
      <member refid="classcLinearOperator_1a40f5051c4399ebfa153ef7147e10a6e6" prot="public" virt="pure-virtual"><scope>cMatrix</scope><name>transpose_dot</name></member>
      <member refid="classcMatrix_1af2feaf32d99537897767b14c2c1708b2" prot="public" virt="pure-virtual"><scope>cMatrix</scope><name>transpose_dot_plus</name></member>
      <member refid="classcLinearOperator_1a53065884c6a1349054a96a9fb8838e65" prot="public" virt="virtual"><scope>cMatrix</scope><name>~cLinearOperator</name></member>
      <member refid="classcMatrix_1a0b7276e140f160bdfbb5cdbd14f4265e" prot="public" virt="virtual"><scope>cMatrix</scope><name>~cMatrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
