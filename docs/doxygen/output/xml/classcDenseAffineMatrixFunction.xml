<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcDenseAffineMatrixFunction" kind="class" language="C++" prot="public">
    <compoundname>cDenseAffineMatrixFunction</compoundname>
    <basecompoundref refid="classcAffineMatrixFunction" prot="public" virt="non-virtual">cAffineMatrixFunction&lt; DataType &gt;</basecompoundref>
    <includes refid="c__dense__affine__matrix__function_8h" local="no">c_dense_affine_matrix_function.h</includes>
    <templateparamlist>
      <param>
        <type>typename DataType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcDenseAffineMatrixFunction_1ab224b7527d1a747fc3bb21b28377d2a8" prot="protected" static="no" mutable="no">
        <type><ref refid="classcDenseMatrix" kindref="compound">cDenseMatrix</ref>&lt; DataType &gt;</type>
        <definition>cDenseMatrix&lt;DataType&gt; cDenseAffineMatrixFunction&lt; DataType &gt;::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" line="62" column="22" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcDenseAffineMatrixFunction_1a8921ca68e61144796207a379517a7763" prot="protected" static="no" mutable="no">
        <type><ref refid="classcDenseMatrix" kindref="compound">cDenseMatrix</ref>&lt; DataType &gt;</type>
        <definition>cDenseMatrix&lt;DataType&gt; cDenseAffineMatrixFunction&lt; DataType &gt;::B</definition>
        <argsstring></argsstring>
        <name>B</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" line="63" column="22" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" bodystart="63" bodyend="-1"/>
        <referencedby refid="classcDenseAffineMatrixFunction_1a575ab74827a1eec612731e0eda6d5b9d" compoundref="c__dense__affine__matrix__function_8cpp" startline="54" endline="75">cDenseAffineMatrixFunction&lt; DataType &gt;::cDenseAffineMatrixFunction</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcDenseAffineMatrixFunction_1a1cdf6594b971ab7c69b4917f48745f31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cDenseAffineMatrixFunction&lt; DataType &gt;::cDenseAffineMatrixFunction</definition>
        <argsstring>(const DataType *A_, const FlagType A_is_row_major_, const LongIndexType num_rows_, const LongIndexType num_colums_)</argsstring>
        <name>cDenseAffineMatrixFunction</name>
        <param>
          <type>const DataType *</type>
          <declname>A_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref></type>
          <declname>A_is_row_major_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_rows_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_colums_</declname>
        </param>
        <briefdescription>
<para>Constructor. Matrix <computeroutput>B</computeroutput> is assumed to be the identity matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" line="35" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.cpp" bodystart="29" bodyend="46"/>
        <references refid="classcAffineMatrixFunction_1a44e80d570e57f6960f7c1d7868447624" compoundref="c__affine__matrix__function_8h" startline="68">cAffineMatrixFunction&lt; DataType &gt;::B_is_identity</references>
        <references refid="classcLinearOperator_1ac4c88c2dcdc8a4d33a77df3979789d42" compoundref="c__linear__operator_8h" startline="77">cLinearOperator&lt; DataType &gt;::eigenvalue_relation_known</references>
      </memberdef>
      <memberdef kind="function" id="classcDenseAffineMatrixFunction_1a575ab74827a1eec612731e0eda6d5b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cDenseAffineMatrixFunction&lt; DataType &gt;::cDenseAffineMatrixFunction</definition>
        <argsstring>(const DataType *A_, const FlagType A_is_row_major_, const LongIndexType num_rows_, const LongIndexType num_columns_, const DataType *B_, const FlagType B_is_row_major_)</argsstring>
        <name>cDenseAffineMatrixFunction</name>
        <param>
          <type>const DataType *</type>
          <declname>A_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref></type>
          <declname>A_is_row_major_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_rows_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_columns_</declname>
        </param>
        <param>
          <type>const DataType *</type>
          <declname>B_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref></type>
          <declname>B_is_row_major_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" line="41" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.cpp" bodystart="54" bodyend="75"/>
        <references refid="classcDenseAffineMatrixFunction_1a8921ca68e61144796207a379517a7763" compoundref="c__dense__affine__matrix__function_8h" startline="63">cDenseAffineMatrixFunction&lt; DataType &gt;::B</references>
        <references refid="classcAffineMatrixFunction_1a44e80d570e57f6960f7c1d7868447624" compoundref="c__affine__matrix__function_8h" startline="68">cAffineMatrixFunction&lt; DataType &gt;::B_is_identity</references>
        <references refid="classcLinearOperator_1ac4c88c2dcdc8a4d33a77df3979789d42" compoundref="c__linear__operator_8h" startline="77">cLinearOperator&lt; DataType &gt;::eigenvalue_relation_known</references>
      </memberdef>
      <memberdef kind="function" id="classcDenseAffineMatrixFunction_1a4c462b21149851b0aedb0f5622045169" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>cDenseAffineMatrixFunction&lt; DataType &gt;::~cDenseAffineMatrixFunction</definition>
        <argsstring>()</argsstring>
        <name>~cDenseAffineMatrixFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" line="49" column="17" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.cpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classcDenseAffineMatrixFunction_1a30421159eaba38b6e0988b8fcfa212b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cDenseAffineMatrixFunction&lt; DataType &gt;::dot</definition>
        <argsstring>(const DataType *vector, DataType *product)</argsstring>
        <name>dot</name>
        <reimplements refid="classcLinearOperator_1a48c76860a74f00fefaa1297368d17a77">dot</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>product</declname>
        </param>
        <briefdescription>
<para>Computes the matrix vector product: </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="25">\[ \boldsymbol{c} = (\mathbf{A} + t \mathbf{B}) \boldsymbol{b}. \]</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The input vector :math:<computeroutput>\\boldsymbol{b}</computeroutput> is given by <computeroutput>vector</computeroutput>. If <formula id="1">$ \mathbf{A} $</formula> and <formula id="26">$ \mathbf{B} $</formula> are <formula id="27">$ m \times n $</formula> matrices, the length of input c vector is <computeroutput>n</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">product</parametername>
</parameternamelist>
<parameterdescription>
<para>The output of the product, <formula id="7">$ \boldsymbol{c} $</formula>, is written in-place into this array. Let <linebreak/>
 m be the number of rows of <formula id="1">$ \mathbf{A} $</formula> and <formula id="26">$ \mathbf{B} $</formula>, then, the output vector <computeroutput>product</computeroutput> is 1D column array of length <computeroutput>m</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" line="51" column="22" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.cpp" bodystart="109" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classcDenseAffineMatrixFunction_1ab6298d183f65a83b77deda25a7d6494d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cDenseAffineMatrixFunction&lt; DataType &gt;::transpose_dot</definition>
        <argsstring>(const DataType *vector, DataType *product)</argsstring>
        <name>transpose_dot</name>
        <reimplements refid="classcLinearOperator_1a40f5051c4399ebfa153ef7147e10a6e6">transpose_dot</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>product</declname>
        </param>
        <briefdescription>
<para>Computes the matrix vector product: </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="28">\[ \boldsymbol{c} = (\mathbf{A} + t \mathbf{B})^{\intercal} \boldsymbol{b}. \]</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The input vector <formula id="6">$ \boldsymbol{b} $</formula> is given by <computeroutput>vector</computeroutput>. If <formula id="1">$ \mathbf{A} $</formula> and <formula id="26">$ \mathbf{B} $</formula> are <formula id="27">$ m \times n $</formula> matrices, the length of input <computeroutput>vector</computeroutput> is <computeroutput>n</computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">product</parametername>
</parameternamelist>
<parameterdescription>
<para>The output of the product, <formula id="7">$ \boldsymbol{c} $</formula>, is written in-place into this array. Let <computeroutput>n</computeroutput> be the number of columns of <formula id="1">$ \mathbf{A} $</formula> and <formula id="26">$ \mathbf{B} $</formula>, then, the output vector <computeroutput>product</computeroutput> is 1D column array of length <computeroutput>m</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" line="55" column="22" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.cpp" bodystart="165" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>cAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcAffineMatrixFunction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
      <node id="1">
        <label>cDenseAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcDenseAffineMatrixFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>cAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcAffineMatrixFunction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
      <node id="1">
        <label>cDenseAffineMatrixFunction&lt; DataType &gt;</label>
        <link refid="classcDenseAffineMatrixFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" line="30" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h" bodystart="31" bodyend="64"/>
    <listofallmembers>
      <member refid="classcAffineMatrixFunction_1a144b790e6cf7ef04d2b140a8031929a4" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>_add_scaled_vector</name></member>
      <member refid="classcDenseAffineMatrixFunction_1ab224b7527d1a747fc3bb21b28377d2a8" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>A</name></member>
      <member refid="classcDenseAffineMatrixFunction_1a8921ca68e61144796207a379517a7763" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>B</name></member>
      <member refid="classcAffineMatrixFunction_1a44e80d570e57f6960f7c1d7868447624" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>B_is_identity</name></member>
      <member refid="classcAffineMatrixFunction_1a5ea11698bccc5eb587f8227a03dbc257" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>cAffineMatrixFunction</name></member>
      <member refid="classcDenseAffineMatrixFunction_1a1cdf6594b971ab7c69b4917f48745f31" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>cDenseAffineMatrixFunction</name></member>
      <member refid="classcDenseAffineMatrixFunction_1a575ab74827a1eec612731e0eda6d5b9d" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>cDenseAffineMatrixFunction</name></member>
      <member refid="classcLinearOperator_1acb0880fed1d5599d721a9438c207ee5b" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>cLinearOperator</name></member>
      <member refid="classcLinearOperator_1ac844c5dd7b83eb1e95f3c96181366629" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>cLinearOperator</name></member>
      <member refid="classcDenseAffineMatrixFunction_1a30421159eaba38b6e0988b8fcfa212b4" prot="public" virt="virtual"><scope>cDenseAffineMatrixFunction</scope><name>dot</name></member>
      <member refid="classcLinearOperator_1ac4c88c2dcdc8a4d33a77df3979789d42" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>eigenvalue_relation_known</name></member>
      <member refid="classcAffineMatrixFunction_1a9d877f4e35cbdefc4f3d81f4386e1c1e" prot="public" virt="virtual"><scope>cDenseAffineMatrixFunction</scope><name>get_eigenvalue</name></member>
      <member refid="classcLinearOperator_1a08a2eb3bd8ff1f47d1141dc164af1c61" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>get_num_columns</name></member>
      <member refid="classcLinearOperator_1af9be60b44a47eed5b2c98f077ff54987" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>get_num_parameters</name></member>
      <member refid="classcLinearOperator_1aecc5b62db1d8a41f5112b289c7031aaf" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>get_num_rows</name></member>
      <member refid="classcLinearOperator_1af0c980ca87c2795e0dbfda1c84f74591" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>is_eigenvalue_relation_known</name></member>
      <member refid="classcLinearOperator_1acdafe59b033d5a73f5abe380f63f40a1" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>num_columns</name></member>
      <member refid="classcLinearOperator_1aab9f0063e55c2a1a92a7e643f086348b" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>num_parameters</name></member>
      <member refid="classcLinearOperator_1a6786391614f08ef1575554f78717fbb0" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>num_rows</name></member>
      <member refid="classcLinearOperator_1a22683aa9286bfd651f1f2dbae3660545" prot="protected" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>parameters</name></member>
      <member refid="classcAffineMatrixFunction_1a3b7e9de00731adfcc930a8fefd21c5c6" prot="public" virt="non-virtual"><scope>cDenseAffineMatrixFunction</scope><name>set_parameters</name></member>
      <member refid="classcDenseAffineMatrixFunction_1ab6298d183f65a83b77deda25a7d6494d" prot="public" virt="virtual"><scope>cDenseAffineMatrixFunction</scope><name>transpose_dot</name></member>
      <member refid="classcAffineMatrixFunction_1a353aeed42783e4fc81fca10d48848dcd" prot="public" virt="virtual"><scope>cDenseAffineMatrixFunction</scope><name>~cAffineMatrixFunction</name></member>
      <member refid="classcDenseAffineMatrixFunction_1a4c462b21149851b0aedb0f5622045169" prot="public" virt="virtual"><scope>cDenseAffineMatrixFunction</scope><name>~cDenseAffineMatrixFunction</name></member>
      <member refid="classcLinearOperator_1a53065884c6a1349054a96a9fb8838e65" prot="public" virt="virtual"><scope>cDenseAffineMatrixFunction</scope><name>~cLinearOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
