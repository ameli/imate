<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classimate_1_1device_1_1__timer_1_1Timer" kind="class" language="Python" prot="public">
    <compoundname>imate::device::_timer::Timer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classimate_1_1device_1_1__timer_1_1Timer_1ab991b1ba75812426894ccbde74a22e12" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.device._timer.Timer::init_wall_time</definition>
        <argsstring></argsstring>
        <name>init_wall_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="247" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="247" bodyend="-1"/>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1ac99edad9a3a112aaca394d7935840cc1" compoundref="__timer_8py" startline="261" endline="311">imate.device._timer.Timer.tic</referencedby>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" compoundref="__timer_8py" startline="316" endline="378">imate.device._timer.Timer.toc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1device_1_1__timer_1_1Timer_1a60544be35e5994679dc324864274f5d7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.device._timer.Timer::init_proc_time</definition>
        <argsstring></argsstring>
        <name>init_proc_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="248" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="248" bodyend="-1"/>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1ac99edad9a3a112aaca394d7935840cc1" compoundref="__timer_8py" startline="261" endline="311">imate.device._timer.Timer.tic</referencedby>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" compoundref="__timer_8py" startline="316" endline="378">imate.device._timer.Timer.toc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1device_1_1__timer_1_1Timer_1aa0885760f94a3e55915d54c01f0d1fc8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.device._timer.Timer::tic_initiated</definition>
        <argsstring></argsstring>
        <name>tic_initiated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="249" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="249" bodyend="-1"/>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abc4cab4daae83f86f44ee8167d2bdb04" compoundref="__timer_8py" startline="383" endline="436">imate.device._timer.Timer.reset</referencedby>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1ac99edad9a3a112aaca394d7935840cc1" compoundref="__timer_8py" startline="261" endline="311">imate.device._timer.Timer.tic</referencedby>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" compoundref="__timer_8py" startline="316" endline="378">imate.device._timer.Timer.toc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1device_1_1__timer_1_1Timer_1acf68d314f8414682072dc07761613055" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.device._timer.Timer::hold</definition>
        <argsstring></argsstring>
        <name>hold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="250" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="250" bodyend="-1"/>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" compoundref="__timer_8py" startline="316" endline="378">imate.device._timer.Timer.toc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1device_1_1__timer_1_1Timer_1a507ad7cd7cec57c049def4a9d0aec218" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.device._timer.Timer::wall_time</definition>
        <argsstring></argsstring>
        <name>wall_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="253" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="253" bodyend="-1"/>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abc4cab4daae83f86f44ee8167d2bdb04" compoundref="__timer_8py" startline="383" endline="436">imate.device._timer.Timer.reset</referencedby>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" compoundref="__timer_8py" startline="316" endline="378">imate.device._timer.Timer.toc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1device_1_1__timer_1_1Timer_1a1948d82371c366ebd540a3f1c916cccb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.device._timer.Timer::proc_time</definition>
        <argsstring></argsstring>
        <name>proc_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="254" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="254" bodyend="-1"/>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abc4cab4daae83f86f44ee8167d2bdb04" compoundref="__timer_8py" startline="383" endline="436">imate.device._timer.Timer.reset</referencedby>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" compoundref="__timer_8py" startline="316" endline="378">imate.device._timer.Timer.toc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classimate_1_1device_1_1__timer_1_1Timer_1a612e6114ae3bdaab998e90b2bad06481" prot="public" static="no" mutable="no">
        <type></type>
        <definition>imate.device._timer.Timer::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="255" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="255" bodyend="-1"/>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abc4cab4daae83f86f44ee8167d2bdb04" compoundref="__timer_8py" startline="383" endline="436">imate.device._timer.Timer.reset</referencedby>
        <referencedby refid="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" compoundref="__timer_8py" startline="316" endline="378">imate.device._timer.Timer.toc</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classimate_1_1device_1_1__timer_1_1Timer_1a58e13a6c91f59845b6cff5f405d294fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.device._timer.Timer.__init__</definition>
        <argsstring>(self, hold=True)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classimate_1_1device_1_1__timer_1_1Timer_1acf68d314f8414682072dc07761613055" kindref="member">hold</ref></type>
          <defname>hold</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Initialization.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="241" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="241" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1device_1_1__timer_1_1Timer_1ac99edad9a3a112aaca394d7935840cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.device._timer.Timer.tic</definition>
        <argsstring>(self)</argsstring>
        <name>tic</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Initializes tracking time.

.. note::

    This function should be called before calling
    :meth:`imate.Timer.toc`.

Examples
--------

.. code-block:: python
    :emphasize-lines: 8

    &gt;&gt;&gt; # Load Timer class
    &gt;&gt;&gt; from imate import Timer

    &gt;&gt;&gt; # Instantiate a timer object
    &gt;&gt;&gt; timer = Timer()

    &gt;&gt;&gt; # Start tracking time
    &gt;&gt;&gt; timer.tic()

    &gt;&gt;&gt; # do something time-consuming
    &gt;&gt;&gt; from imate import toeplitz, logdet
    &gt;&gt;&gt; A = toeplitz(2, 1, size=1000000, gram=True)
    &gt;&gt;&gt; ld, info = logdet(A, method=&apos;slq&apos;, return_info=True)

    &gt;&gt;&gt; # Register a time-stamp right here in the code
    &gt;&gt;&gt; timer.toc()

    &gt;&gt;&gt; # Read wall time
    &gt;&gt;&gt; timer.wall_time
    2.727652072906494

    &gt;&gt;&gt; # Read process time
    &gt;&gt;&gt; timer.proc_time
    17.752098541000002
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="261" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="261" bodyend="311"/>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1a60544be35e5994679dc324864274f5d7" compoundref="__timer_8py" startline="248">imate.device._timer.Timer.init_proc_time</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1ab991b1ba75812426894ccbde74a22e12" compoundref="__timer_8py" startline="247">imate.device._timer.Timer.init_wall_time</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1aa0885760f94a3e55915d54c01f0d1fc8" compoundref="__timer_8py" startline="249">imate.device._timer.Timer.tic_initiated</references>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.device._timer.Timer.toc</definition>
        <argsstring>(self)</argsstring>
        <name>toc</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Measures time from the last call to :meth:`imate.Timer.tic`.

.. note::

    This function should be called after calling
    :meth:`imate.Timer.tic`.

Examples
--------

.. code-block:: python
    :emphasize-lines: 16

    &gt;&gt;&gt; # Load Timer class
    &gt;&gt;&gt; from imate import Timer

    &gt;&gt;&gt; # Instantiate a timer object
    &gt;&gt;&gt; timer = Timer()

    &gt;&gt;&gt; # Start tracking time
    &gt;&gt;&gt; timer.tic()

    &gt;&gt;&gt; # do something time-consuming
    &gt;&gt;&gt; from imate import toeplitz, logdet
    &gt;&gt;&gt; A = toeplitz(2, 1, size=1000000, gram=True)
    &gt;&gt;&gt; ld, info = logdet(A, method=&apos;slq&apos;, return_info=True)

    &gt;&gt;&gt; # Register a time-stamp right here in the code
    &gt;&gt;&gt; timer.toc()

    &gt;&gt;&gt; # Read wall time
    &gt;&gt;&gt; timer.wall_time
    2.727652072906494

    &gt;&gt;&gt; # Read process time
    &gt;&gt;&gt; timer.proc_time
    17.752098541000002
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="316" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="316" bodyend="378"/>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1a612e6114ae3bdaab998e90b2bad06481" compoundref="__timer_8py" startline="255">imate.device._timer.Timer.count</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1acf68d314f8414682072dc07761613055" compoundref="__timer_8py" startline="250">imate.device._timer.Timer.hold</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1a60544be35e5994679dc324864274f5d7" compoundref="__timer_8py" startline="248">imate.device._timer.Timer.init_proc_time</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1ab991b1ba75812426894ccbde74a22e12" compoundref="__timer_8py" startline="247">imate.device._timer.Timer.init_wall_time</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1a1948d82371c366ebd540a3f1c916cccb" compoundref="__timer_8py" startline="254">imate.device._timer.Timer.proc_time</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1aa0885760f94a3e55915d54c01f0d1fc8" compoundref="__timer_8py" startline="249">imate.device._timer.Timer.tic_initiated</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1a507ad7cd7cec57c049def4a9d0aec218" compoundref="__timer_8py" startline="253">imate.device._timer.Timer.wall_time</references>
      </memberdef>
      <memberdef kind="function" id="classimate_1_1device_1_1__timer_1_1Timer_1abc4cab4daae83f86f44ee8167d2bdb04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def imate.device._timer.Timer.reset</definition>
        <argsstring>(self)</argsstring>
        <name>reset</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Resets time counters.

This function is used when an instance of this class should be
reused again from fresh settings.

Examples
--------

.. code-block:: python
    :emphasize-lines: 19

    &gt;&gt;&gt; # Load Timer class
    &gt;&gt;&gt; from imate import Timer

    &gt;&gt;&gt; # Instantiate a timer object
    &gt;&gt;&gt; timer = Timer()

    &gt;&gt;&gt; # Start tracking time
    &gt;&gt;&gt; timer.tic()

    &gt;&gt;&gt; # do something time-consuming
    &gt;&gt;&gt; from imate import toeplitz, logdet
    &gt;&gt;&gt; A = toeplitz(2, 1, size=1000000, gram=True)
    &gt;&gt;&gt; ld, info = logdet(A, method=&apos;slq&apos;, return_info=True)

    &gt;&gt;&gt; # Register a time-stamp right here in the code
    &gt;&gt;&gt; timer.toc()

    &gt;&gt;&gt; # Read wall time
    &gt;&gt;&gt; timer.wall_time
    2.727652072906494

    &gt;&gt;&gt; # Read process time
    &gt;&gt;&gt; timer.proc_time
    17.752098541000002

    &gt;&gt;&gt; # Reset timer
    &gt;&gt;&gt; timer.reset()

    # By resetting, all attributes of the object set back to zero
    &gt;&gt;&gt; timer.wall_time
    0.0

    &gt;&gt;&gt; time.proc_time
    0.0
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="383" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="383" bodyend="436"/>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1a612e6114ae3bdaab998e90b2bad06481" compoundref="__timer_8py" startline="255">imate.device._timer.Timer.count</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1a1948d82371c366ebd540a3f1c916cccb" compoundref="__timer_8py" startline="254">imate.device._timer.Timer.proc_time</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1aa0885760f94a3e55915d54c01f0d1fc8" compoundref="__timer_8py" startline="249">imate.device._timer.Timer.tic_initiated</references>
        <references refid="classimate_1_1device_1_1__timer_1_1Timer_1a507ad7cd7cec57c049def4a9d0aec218" compoundref="__timer_8py" startline="253">imate.device._timer.Timer.wall_time</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>A timer to measure elapsed wall time and CPU process time of Python
process.

Parameters
----------

hold : bool, default=True
    When ``hold`` is `True`, measuring time between successive `tic-toc`
    calls are cumulative.

Attributes
----------

init_wall_time : float, default=0
    The initial wall time in seconds. This is set by
    :meth:`imate.Timer.tic`.

init_proc_time : float, default=0
    The initial CPU process time in seconds. This is set by
    :meth:`imate.Timer.tic`.

tic_initiated : bool, default=False
    Indicates whether the function :meth:`imate.Timer.tic` has been called
    to initiate tracking time.

hold : bool
    Initialized by the argument ``hold``, and indicates whether to
    accumulate the recording of time between successive tic-toc calls.

wall_time : float, default=0
    The wall time between a `tic` and a `toc` in seconds. This variable is
    updated by calling :meth:`imate.Timer.toc`.

proc_time : float, default=0
    The CPU process time between a `tic` and a `toc` in seconds. This
    variable is updated by calling :meth:`imate.Timer.toc`.

count : int, default=0
    Counts how many pairs of `tic-toc` is called. That is, the counter
    counts a completed pair of `tic-toc` calls. If there is one tic but
    multiple toc calls later, this is counted as only once.

Methods
-------
tic
toc
reset

See Also
--------

imate.Memory
imate.device.restrict_to_single_processor

Notes
-----

**Difference Between Wall and Process Times:**

The *wall* time (``Timer.wall_time``) measures the wall&apos;s clock time in
between the execution of two tasks, including. This includes when the
processor is idle or performs other tasks other the Python process.

On the other hand, the *process* time (``Timer.proc_time``) is the combined
CPU clock on all cores of the CPU processor of the process. It excludes the
time when the processor is idle. Namely, it only measures how much the
processor was busy. Also, it only measures the time it takes to run the
*current* process, and not other tasks that the process might perform
concurrently.

As a rule of thumb, the process time is larger than the wall time by the
order of the number of CPU cores (see
:func:`imate.device.get_num_cpu_threads`). However, the process time can
in some cases deviate from this rule significantly (or even be less than
the wall time if the processor was largely idle).

Generally, the process time is the preferred measure to benchmark a
computational task.

Examples
--------

**Using Tic-Toc:**

A simple usage of measuring wall and process time to compute the
log-determinant of a sample matrix:

.. code-block:: python
    :emphasize-lines: 8, 16

    &gt;&gt;&gt; # Load Timer class
    &gt;&gt;&gt; from imate import Timer

    &gt;&gt;&gt; # Instantiate a timer object
    &gt;&gt;&gt; timer = Timer()

    &gt;&gt;&gt; # Start tracking time
    &gt;&gt;&gt; timer.tic()

    &gt;&gt;&gt; # do something time-consuming
    &gt;&gt;&gt; from imate import toeplitz, logdet
    &gt;&gt;&gt; A = toeplitz(2, 1, size=1000000, gram=True)
    &gt;&gt;&gt; ld, info = logdet(A, method=&apos;slq&apos;, return_info=True)

    &gt;&gt;&gt; # Register a time-stamp right here in the code
    &gt;&gt;&gt; timer.toc()

    &gt;&gt;&gt; # Read wall time
    &gt;&gt;&gt; timer.wall_time
    2.727652072906494

    &gt;&gt;&gt; # Read process time
    &gt;&gt;&gt; timer.proc_time
    17.752098541000002

The `toc` calls can continue (multiple `toc` calls). In each of the `toc`
calls, the measured time is updated from the time s `toc` is called
with respect to the last `tic` call.

**Alternative Way of Measuring Time Using Function Returns:**

In the above example we also passed ``return_info=True`` argument to the
:func:`imate.logdet` function, which returns the dictionary ``info``.
The key ``info[&apos;time&apos;]`` also keeps the track of computation time of this
function, which can be compared with the wall and process times  measured
by :class:`imate.Timer` as follows:

.. code-block:: python

    &gt;&gt;&gt; info[&apos;time&apos;]
    {
        &apos;tot_wall_time&apos;: 2.617882580962032,
        &apos;alg_wall_time&apos;: 2.5974619388580322,
        &apos;cpu_proc_time&apos;: 17.642682527999998
    }

**Resetting Timer:**

The above timer can be reset as follows:

.. code-block:: python

    &gt;&gt;&gt; # Reset timer
    &gt;&gt;&gt; timer.reset()
    17.752098541000002

    # By resetting, all attributes of the object set back to zero
    &gt;&gt;&gt; timer.wall_time
    0.0

    &gt;&gt;&gt; time.proc_time
    0.0

**Accumulative Time Measure Using Hold:**

Often it is useful to measure times accumulatively, in between multiple
pairs of `tic-toc` calls. To do so, set ``hold`` to `True` as follows. The
measured time in the example below is the addition of the first two and the
second two calls to the pair of `tic` and `toc` on the highlighted lines,
which includes the time to process matrices `A` and `C`, but excludes the
matrix `B`.

.. code-block:: python
    :emphasize-lines: 8, 16, 24, 32

    &gt;&gt;&gt; # Load Timer class
    &gt;&gt;&gt; from imate import Timer

    &gt;&gt;&gt; # Instantiate a timer object
    &gt;&gt;&gt; timer = Timer(hold=True)

    &gt;&gt;&gt; # The first call to tic
    &gt;&gt;&gt; timer.tic()

    &gt;&gt;&gt; # The first task with matrix A.
    &gt;&gt;&gt; from imate import toeplitz, logdet
    &gt;&gt;&gt; A = toeplitz(2, 1, size=1000000, gram=True)
    &gt;&gt;&gt; logdet(A, method=&apos;slq&apos;)

    &gt;&gt;&gt; # The first call to toc stops tracking time since last tic.
    &gt;&gt;&gt; timer.toc()

    &gt;&gt;&gt; # A second task with matrix B. Elapsed time for this task is not
    &gt;&gt;&gt; # recorded.
    &gt;&gt;&gt; B = toeplitz(3, 2, size=1000000, gram=True)
    &gt;&gt;&gt; logdet(B, method=&apos;slq&apos;)

    &gt;&gt;&gt; # Resume tracking time.
    &gt;&gt;&gt; timer.tic()

    &gt;&gt;&gt; # The third task with matrix C. Time for this job is added to the
    &gt;&gt;&gt; # time tracking since timer is resumed.
    &gt;&gt;&gt; C = toeplitz(4, 3, size=1000000, gram=True)
    &gt;&gt;&gt; logdet(C, method=&apos;slq&apos;)

    &gt;&gt;&gt; # The second call to toc stops tracking time since last tic.
    &gt;&gt;&gt; timer.toc()

    &gt;&gt;&gt; # Read wall time
    &gt;&gt;&gt; timer.wall_time
    5.431022644042969

    &gt;&gt;&gt; # Read process time
    &gt;&gt;&gt; timer.proc_time
    36.046730618
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>imate.device._timer.Timer</label>
        <link refid="classimate_1_1device_1_1__timer_1_1Timer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>imate.device._timer.Timer</label>
        <link refid="classimate_1_1device_1_1__timer_1_1Timer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" line="28" column="1" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/device/_timer.py" bodystart="28" bodyend="436"/>
    <listofallmembers>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1a58e13a6c91f59845b6cff5f405d294fb" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>__init__</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1a612e6114ae3bdaab998e90b2bad06481" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>count</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1acf68d314f8414682072dc07761613055" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>hold</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1a60544be35e5994679dc324864274f5d7" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>init_proc_time</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1ab991b1ba75812426894ccbde74a22e12" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>init_wall_time</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1a1948d82371c366ebd540a3f1c916cccb" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>proc_time</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1abc4cab4daae83f86f44ee8167d2bdb04" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>reset</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1ac99edad9a3a112aaca394d7935840cc1" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>tic</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1aa0885760f94a3e55915d54c01f0d1fc8" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>tic_initiated</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1abf29babf6941cb58fe78a12752e59585" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>toc</name></member>
      <member refid="classimate_1_1device_1_1__timer_1_1Timer_1a507ad7cd7cec57c049def4a9d0aec218" prot="public" virt="non-virtual"><scope>imate::device::_timer::Timer</scope><name>wall_time</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
