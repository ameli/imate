<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="special__functions_8h" kind="file" language="C++">
    <compoundname>special_functions.h</compoundname>
    <includes refid="types_8h" local="yes">../_definitions/types.h</includes>
    <includedby refid="convergence__tools_8cpp" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.cpp</includedby>
    <includedby refid="special__functions_8cpp" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.h</label>
        <link refid="special__functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>./definitions.h</label>
        <link refid="definitions_8h"/>
      </node>
      <node id="2">
        <label>../_definitions/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.h</label>
        <link refid="special__functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.cpp</label>
        <link refid="convergence__tools_8cpp"/>
      </node>
      <node id="3">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.cpp</label>
        <link refid="special__functions_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="special__functions_8h_1a44303dd28715725483ae9bb6e214fc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double erf_inv</definition>
        <argsstring>(const double x)</argsstring>
        <name>erf_inv</name>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para><ref refid="classInverse" kindref="compound">Inverse</ref> error function. </para>
        </briefdescription>
        <detaileddescription>
<para>The function inverse is found based on Newton method using the evaluation of the error function <computeroutput>erf</computeroutput> from standard math library and its derivative. The Newton method here uses two refinements.</para>
<para>For further details on the algorithm, refer to: <ulink url="http://www.mimirgames.com/articles/programming/approximations-">http://www.mimirgames.com/articles/programming/approximations-</ulink> of-the-inverse-error-function/</para>
<para>The accuracy of this method for the whole input interval of <computeroutput></computeroutput>[-1, 1] is in the order of 1e-15 compared to <computeroutput>scipy.special.erfinv</computeroutput> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Input</parametername>
</parameternamelist>
<parameterdescription>
<para>value, a float number between -1 to 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The inverse error function ranging from -INFINITY to INFINITY. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.h" line="26" column="8" bodyfile="/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.cpp" bodystart="56" bodyend="97" declfile="/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.h" declline="26" declcolumn="8"/>
        <references refid="special__functions_8cpp_1a8df1c56975179584e0485c5ddcb1e71b" compoundref="special__functions_8cpp" startline="27" endline="30">sign</references>
        <referencedby refid="classConvergenceTools_1a88ae9fc09aa9af950d41cf803934c028" compoundref="convergence__tools_8cpp" startline="256" endline="376">ConvergenceTools&lt; DataType &gt;::average_estimates</referencedby>
        <referencedby refid="classConvergenceTools_1a5a0602ee4f933a4521ccf9ea137dd191" compoundref="convergence__tools_8cpp" startline="95" endline="194">ConvergenceTools&lt; DataType &gt;::check_convergence</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileType:<sp/>SOURCE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_C_TRACE_ESTIMATOR_SPECIAL_FUNCTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_C_TRACE_ESTIMATOR_SPECIAL_FUNCTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../_definitions/types.h&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DataType,<sp/>IndexType,<sp/>FlagType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>erf<sp/>inv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="special__functions_8h_1a44303dd28715725483ae9bb6e214fc17" kindref="member">erf_inv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_C_TRACE_ESTIMATOR_SPECIAL_FUNCTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/github/imate/imate/_c_trace_estimator/special_functions.h"/>
  </compounddef>
</doxygen>
