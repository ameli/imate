<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcuCSCMatrix" kind="class" language="C++" prot="public">
    <compoundname>cuCSCMatrix</compoundname>
    <basecompoundref refid="classcuMatrix" prot="public" virt="non-virtual">cuMatrix&lt; DataType &gt;</basecompoundref>
    <basecompoundref refid="classcCSCMatrix" prot="public" virt="non-virtual">cCSCMatrix&lt; DataType &gt;</basecompoundref>
    <includes refid="cu__csc__matrix_8h" local="no">cu_csc_matrix.h</includes>
    <templateparamlist>
      <param>
        <type>typename DataType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcuCSCMatrix_1ad152c35aff1a99991fec22e1522bdc7e" prot="protected" static="no" mutable="no">
        <type>DataType **</type>
        <definition>DataType** cuCSCMatrix&lt; DataType &gt;::device_A_data</definition>
        <argsstring></argsstring>
        <name>device_A_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="82" column="18" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcuCSCMatrix_1af2ecb9fa43853ebf5bbf0b512dedbbd8" prot="protected" static="no" mutable="no">
        <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> **</type>
        <definition>LongIndexType** cuCSCMatrix&lt; DataType &gt;::device_A_indices</definition>
        <argsstring></argsstring>
        <name>device_A_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="83" column="23" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcuCSCMatrix_1a557ee14549f06dd815e9a85c0f4066a3" prot="protected" static="no" mutable="no">
        <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> **</type>
        <definition>LongIndexType** cuCSCMatrix&lt; DataType &gt;::device_A_index_pointer</definition>
        <argsstring></argsstring>
        <name>device_A_index_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="84" column="23" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcuCSCMatrix_1aced811a178bc569515579c819a9c1c73" prot="protected" static="no" mutable="no">
        <type>void **</type>
        <definition>void** cuCSCMatrix&lt; DataType &gt;::device_buffer</definition>
        <argsstring></argsstring>
        <name>device_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="85" column="14" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="classcuCSCMatrix_1a3052323bdb6799654448ece5e9889837" compoundref="cu__csc__matrix_8cu" startline="52" endline="84">cuCSCMatrix&lt; DataType &gt;::cuCSCMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcuCSCMatrix_1a6e98eb3b9cd36de0f7726708b6483707" prot="protected" static="no" mutable="no">
        <type>size_t *</type>
        <definition>size_t* cuCSCMatrix&lt; DataType &gt;::device_buffer_num_bytes</definition>
        <argsstring></argsstring>
        <name>device_buffer_num_bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="86" column="16" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="classcuCSCMatrix_1a3052323bdb6799654448ece5e9889837" compoundref="cu__csc__matrix_8cu" startline="52" endline="84">cuCSCMatrix&lt; DataType &gt;::cuCSCMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcuCSCMatrix_1a9c4f53e60845c1d68f36806f0973032e" prot="protected" static="no" mutable="no">
        <type>cusparseSpMatDescr_t *</type>
        <definition>cusparseSpMatDescr_t* cuCSCMatrix&lt; DataType &gt;::cusparse_matrix_A</definition>
        <argsstring></argsstring>
        <name>cusparse_matrix_A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="87" column="30" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcuCSCMatrix_1a8ab5a2478703d8d6af7a7f558241e3e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cuCSCMatrix&lt; DataType &gt;::cuCSCMatrix</definition>
        <argsstring>()</argsstring>
        <name>cuCSCMatrix</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="37" column="9" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classcuCSCMatrix_1a3052323bdb6799654448ece5e9889837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cuCSCMatrix&lt; DataType &gt;::cuCSCMatrix</definition>
        <argsstring>(const DataType *A_data_, const LongIndexType *A_indices_, const LongIndexType *A_index_pointer_, const LongIndexType num_rows_, const LongIndexType num_columns_, const int num_gpu_devices_)</argsstring>
        <name>cuCSCMatrix</name>
        <param>
          <type>const DataType *</type>
          <declname>A_data_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>A_indices_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>A_index_pointer_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_rows_</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_columns_</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>num_gpu_devices_</declname>
        </param>
        <briefdescription>
<para>Constructor with arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="39" column="9" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="52" bodyend="84"/>
        <references refid="classcuCSCMatrix_1ad56cd20e4a4603cf94fb54e65f22e3eb" compoundref="cu__csc__matrix_8cu" startline="169" endline="233">cuCSCMatrix&lt; DataType &gt;::copy_host_to_device</references>
        <references refid="classcuCSCMatrix_1aced811a178bc569515579c819a9c1c73" compoundref="cu__csc__matrix_8h" startline="85">cuCSCMatrix&lt; DataType &gt;::device_buffer</references>
        <references refid="classcuCSCMatrix_1a6e98eb3b9cd36de0f7726708b6483707" compoundref="cu__csc__matrix_8h" startline="86">cuCSCMatrix&lt; DataType &gt;::device_buffer_num_bytes</references>
        <references refid="classcuLinearOperator_1a118f2b8f1523da52441070340f7c43f9" compoundref="cu__linear__operator_8cu" startline="217" endline="238">cuLinearOperator&lt; DataType &gt;::initialize_cusparse_handle</references>
        <references refid="classcuLinearOperator_1a701c8a301638c78c66a3290b0848483e" compoundref="cu__linear__operator_8h" startline="63">cuLinearOperator&lt; DataType &gt;::num_gpu_devices</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSCMatrix_1afb187a61a6f4d735409a989524a85336" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>cuCSCMatrix&lt; DataType &gt;::~cuCSCMatrix</definition>
        <argsstring>()</argsstring>
        <name>~cuCSCMatrix</name>
        <briefdescription>
<para>Virtual desructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="47" column="17" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="95" bodyend="154"/>
        <references refid="classCudaInterface_1a427b7203f73cf821e35234e5f724064b" compoundref="cuda__interface_8cu" startline="166" endline="174">CudaInterface&lt; ArrayType &gt;::del</references>
        <references refid="namespacecusparse__interface_1a5ab766d1794cea863c5d79815e9b7537" compoundref="cusparse__interface_8cu" startline="141" endline="146">cusparse_interface::destroy_cusparse_matrix</references>
        <references refid="classCudaInterface_1aba5754e3b4c02d3b151fdee31fa0fd46" compoundref="cuda__interface_8cu" startline="188" endline="192">CudaInterface&lt; ArrayType &gt;::set_device</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSCMatrix_1a1eb47019eaa7abd083d644e37893fc3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSCMatrix&lt; DataType &gt;::dot</definition>
        <argsstring>(const DataType *device_vector, DataType *device_product)</argsstring>
        <name>dot</name>
        <reimplements refid="classcCSCMatrix_1a3780d212eb797641bf36772eeb864462">dot</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>device_vector</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="49" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="287" bodyend="329"/>
        <references refid="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048">cusparse_interface::create_cusparse_vector</references>
        <references refid="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420">cusparse_interface::cusparse_matvec</references>
        <references refid="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" compoundref="cusparse__interface_8cu" startline="156" endline="161">cusparse_interface::destroy_cusparse_vector</references>
        <references refid="classCudaInterface_1a29ab521266d2670951510179d719ead1" compoundref="cuda__interface_8cu" startline="206" endline="213">CudaInterface&lt; ArrayType &gt;::get_device</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSCMatrix_1ac4759c30ffb86521f4ae29eac739db42" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSCMatrix&lt; DataType &gt;::dot_plus</definition>
        <argsstring>(const DataType *device_vector, const DataType alpha, DataType *device_product)</argsstring>
        <name>dot_plus</name>
        <reimplements refid="classcCSCMatrix_1a9c016188ebff671e8df98a6cf96ce1c4">dot_plus</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>device_vector</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="53" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="337" bodyend="379"/>
        <references refid="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048">cusparse_interface::create_cusparse_vector</references>
        <references refid="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420">cusparse_interface::cusparse_matvec</references>
        <references refid="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" compoundref="cusparse__interface_8cu" startline="156" endline="161">cusparse_interface::destroy_cusparse_vector</references>
        <references refid="classCudaInterface_1a29ab521266d2670951510179d719ead1" compoundref="cuda__interface_8cu" startline="206" endline="213">CudaInterface&lt; ArrayType &gt;::get_device</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSCMatrix_1a0af6927d0301ce630c70a88c1d799300" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSCMatrix&lt; DataType &gt;::transpose_dot</definition>
        <argsstring>(const DataType *device_vector, DataType *device_product)</argsstring>
        <name>transpose_dot</name>
        <reimplements refid="classcCSCMatrix_1a3061588e0400fbceabad9d7f49736d86">transpose_dot</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>device_vector</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="58" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="387" bodyend="429"/>
        <references refid="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048">cusparse_interface::create_cusparse_vector</references>
        <references refid="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420">cusparse_interface::cusparse_matvec</references>
        <references refid="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" compoundref="cusparse__interface_8cu" startline="156" endline="161">cusparse_interface::destroy_cusparse_vector</references>
        <references refid="classCudaInterface_1a29ab521266d2670951510179d719ead1" compoundref="cuda__interface_8cu" startline="206" endline="213">CudaInterface&lt; ArrayType &gt;::get_device</references>
      </memberdef>
      <memberdef kind="function" id="classcuCSCMatrix_1a19f87522864944c7d622c1a3653bf883" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSCMatrix&lt; DataType &gt;::transpose_dot_plus</definition>
        <argsstring>(const DataType *device_vector, const DataType alpha, DataType *device_product)</argsstring>
        <name>transpose_dot_plus</name>
        <reimplements refid="classcCSCMatrix_1ada140e4a0a6d3a1d4efc88c234afd650">transpose_dot_plus</reimplements>
        <param>
          <type>const DataType *</type>
          <declname>device_vector</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="62" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="437" bodyend="479"/>
        <references refid="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048">cusparse_interface::create_cusparse_vector</references>
        <references refid="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420">cusparse_interface::cusparse_matvec</references>
        <references refid="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" compoundref="cusparse__interface_8cu" startline="156" endline="161">cusparse_interface::destroy_cusparse_vector</references>
        <references refid="classCudaInterface_1a29ab521266d2670951510179d719ead1" compoundref="cuda__interface_8cu" startline="206" endline="213">CudaInterface&lt; ArrayType &gt;::get_device</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcuCSCMatrix_1ad56cd20e4a4603cf94fb54e65f22e3eb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cuCSCMatrix&lt; DataType &gt;::copy_host_to_device</definition>
        <argsstring>()</argsstring>
        <name>copy_host_to_device</name>
        <reimplements refid="classcuMatrix_1a9bb6e16a29711add2cf81c69d91dc082">copy_host_to_device</reimplements>
        <briefdescription>
<para>Copies the member data from the host memory to the device memory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Despite the input matrix is a CSC matrix, we treat it as a CSR matrix, since cusparse&apos;s interface is only for CSR matrices. For this, we swap the number of columns and rows from the input matrix to the cusparse matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="70" column="22" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="169" bodyend="233"/>
        <references refid="classCudaInterface_1a65875bf1fdfe213562b31e3459f04b33" compoundref="cuda__interface_8cu" startline="36" endline="60">CudaInterface&lt; ArrayType &gt;::alloc</references>
        <references refid="classCudaInterface_1a95efada2ca34b3490f96ccfa97b4d6eb" compoundref="cuda__interface_8cu" startline="142" endline="151">CudaInterface&lt; ArrayType &gt;::copy_to_device</references>
        <references refid="namespacecusparse__interface_1a26d83ba6e0fe31cb088cd77f2b7d59cb">cusparse_interface::create_cusparse_matrix</references>
        <references refid="classCudaInterface_1aba5754e3b4c02d3b151fdee31fa0fd46" compoundref="cuda__interface_8cu" startline="188" endline="192">CudaInterface&lt; ArrayType &gt;::set_device</references>
        <referencedby refid="classcuCSCMatrix_1a3052323bdb6799654448ece5e9889837" compoundref="cu__csc__matrix_8cu" startline="52" endline="84">cuCSCMatrix&lt; DataType &gt;::cuCSCMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcuCSCMatrix_1af9b7af845f6f68d64b812709cd0f59ef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cuCSCMatrix&lt; DataType &gt;::allocate_buffer</definition>
        <argsstring>(const int device_id, cusparseOperation_t cusparse_operation, const DataType alpha, const DataType beta, cusparseDnVecDescr_t &amp;cusparse_input_vector, cusparseDnVecDescr_t &amp;cusparse_output_vector, cusparseSpMVAlg_t algorithm)</argsstring>
        <name>allocate_buffer</name>
        <param>
          <type>const int</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>cusparseOperation_t</type>
          <declname>cusparse_operation</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t &amp;</type>
          <declname>cusparse_input_vector</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t &amp;</type>
          <declname>cusparse_output_vector</declname>
        </param>
        <param>
          <type>cusparseSpMVAlg_t</type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>Allocates an external buffer for matrix-vector multiplication using <computeroutput>cusparseSpMV</computeroutput> function. </para>
        </briefdescription>
        <detaileddescription>
<para>If buffer size if not the same as required buffer size, allocate (or reallocate) memory. The allocation is always performed in the first call of this function since buffer size is initialized to zero in constructor. But for the next calls it might not be reallocated if the buffer size is the same. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="72" column="14" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu" bodystart="250" bodyend="279"/>
        <references refid="classCudaInterface_1a45411db9045668d1c0407e33d7b4e825" compoundref="cuda__interface_8cu" startline="115" endline="125">CudaInterface&lt; ArrayType &gt;::alloc_bytes</references>
        <references refid="namespacecusparse__interface_1aefebdbbc12a46732f32942498111a16c">cusparse_interface::cusparse_matrix_buffer_size</references>
        <references refid="classCudaInterface_1a427b7203f73cf821e35234e5f724064b" compoundref="cuda__interface_8cu" startline="166" endline="174">CudaInterface&lt; ArrayType &gt;::del</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>cMatrix&lt; DataType &gt;</label>
        <link refid="classcMatrix"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>cuLinearOperator&lt; DataType &gt;</label>
        <link refid="classcuLinearOperator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>cuCSCMatrix&lt; DataType &gt;</label>
        <link refid="classcuCSCMatrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cuMatrix&lt; DataType &gt;</label>
        <link refid="classcuMatrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
      <node id="5">
        <label>cCSCMatrix&lt; DataType &gt;</label>
        <link refid="classcCSCMatrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>cMatrix&lt; DataType &gt;</label>
        <link refid="classcMatrix"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>cuLinearOperator&lt; DataType &gt;</label>
        <link refid="classcuLinearOperator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>cuCSCMatrix&lt; DataType &gt;</label>
        <link refid="classcuCSCMatrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cuMatrix&lt; DataType &gt;</label>
        <link refid="classcuMatrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>cLinearOperator&lt; DataType &gt;</label>
        <link refid="classcLinearOperator"/>
      </node>
      <node id="5">
        <label>cCSCMatrix&lt; DataType &gt;</label>
        <link refid="classcCSCMatrix"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" line="30" column="1" bodyfile="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h" bodystart="33" bodyend="88"/>
    <listofallmembers>
      <member refid="classcCSCMatrix_1a6d66a176437c03989a756a6a294445e0" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>A_data</name></member>
      <member refid="classcCSCMatrix_1a9bbfccdbd98839daf89f6d938e511280" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>A_index_pointer</name></member>
      <member refid="classcCSCMatrix_1a93daf6e75d9b8a242ed20d29970a8311" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>A_indices</name></member>
      <member refid="classcuCSCMatrix_1af9b7af845f6f68d64b812709cd0f59ef" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>allocate_buffer</name></member>
      <member refid="classcCSCMatrix_1ac295de3fd670c38d5489c5d4168a4881" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cCSCMatrix</name></member>
      <member refid="classcCSCMatrix_1a5c56f3bc5e43a5d82b3553946c60b85e" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cCSCMatrix</name></member>
      <member refid="classcLinearOperator_1acb0880fed1d5599d721a9438c207ee5b" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cLinearOperator</name></member>
      <member refid="classcLinearOperator_1ac844c5dd7b83eb1e95f3c96181366629" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cLinearOperator</name></member>
      <member refid="classcMatrix_1a3e7134e2fe4ad377d33b730ac49ee4c5" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cMatrix</name></member>
      <member refid="classcuLinearOperator_1ac5b5c2becca5fd6368acd5c98de7bbe5" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>copied_host_to_device</name></member>
      <member refid="classcuCSCMatrix_1ad56cd20e4a4603cf94fb54e65f22e3eb" prot="protected" virt="virtual"><scope>cuCSCMatrix</scope><name>copy_host_to_device</name></member>
      <member refid="classcuLinearOperator_1a46558cb4eb689bf6131c2e2415efea0d" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cublas_handle</name></member>
      <member refid="classcuCSCMatrix_1a8ab5a2478703d8d6af7a7f558241e3e4" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cuCSCMatrix</name></member>
      <member refid="classcuCSCMatrix_1a3052323bdb6799654448ece5e9889837" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cuCSCMatrix</name></member>
      <member refid="classcuLinearOperator_1a003b67351f4a3cf2e574a1e8631e1b24" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cuLinearOperator</name></member>
      <member refid="classcuLinearOperator_1a8a27f677cbfb7c9c26d07904cdd0ee74" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cuLinearOperator</name></member>
      <member refid="classcuMatrix_1a8f1e4536906b1f57e05877bd64d5f47e" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cuMatrix</name></member>
      <member refid="classcuMatrix_1acd84126f06028a052ebeda858fa14798" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cuMatrix</name></member>
      <member refid="classcuLinearOperator_1ab097cf1372d598ceac08237e26bafc6d" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cusparse_handle</name></member>
      <member refid="classcuCSCMatrix_1a9c4f53e60845c1d68f36806f0973032e" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>cusparse_matrix_A</name></member>
      <member refid="classcuCSCMatrix_1ad152c35aff1a99991fec22e1522bdc7e" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>device_A_data</name></member>
      <member refid="classcuCSCMatrix_1a557ee14549f06dd815e9a85c0f4066a3" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>device_A_index_pointer</name></member>
      <member refid="classcuCSCMatrix_1af2ecb9fa43853ebf5bbf0b512dedbbd8" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>device_A_indices</name></member>
      <member refid="classcuCSCMatrix_1aced811a178bc569515579c819a9c1c73" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>device_buffer</name></member>
      <member refid="classcuCSCMatrix_1a6e98eb3b9cd36de0f7726708b6483707" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>device_buffer_num_bytes</name></member>
      <member refid="classcuCSCMatrix_1a1eb47019eaa7abd083d644e37893fc3a" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>dot</name></member>
      <member refid="classcuCSCMatrix_1ac4759c30ffb86521f4ae29eac739db42" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>dot_plus</name></member>
      <member refid="classcLinearOperator_1ac4c88c2dcdc8a4d33a77df3979789d42" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>eigenvalue_relation_known</name></member>
      <member refid="classcuLinearOperator_1aa0bf630097fc3820d7ec27ec4e1a2994" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>get_cublas_handle</name></member>
      <member refid="classcLinearOperator_1a0dd6306a434563e4a48a806b43f23d03" prot="public" virt="pure-virtual" ambiguityscope="cuMatrix::"><scope>cuCSCMatrix</scope><name>get_eigenvalue</name></member>
      <member refid="classcMatrix_1afb08422559c53336b4515a6627a9d990" prot="public" virt="virtual" ambiguityscope="cCSCMatrix::"><scope>cuCSCMatrix</scope><name>get_eigenvalue</name></member>
      <member refid="classcCSCMatrix_1a012110acfbc3dc645bb20036279df9f3" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>get_nnz</name></member>
      <member refid="classcLinearOperator_1a08a2eb3bd8ff1f47d1141dc164af1c61" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>get_num_columns</name></member>
      <member refid="classcLinearOperator_1af9be60b44a47eed5b2c98f077ff54987" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>get_num_parameters</name></member>
      <member refid="classcLinearOperator_1aecc5b62db1d8a41f5112b289c7031aaf" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>get_num_rows</name></member>
      <member refid="classcuLinearOperator_1ae2bec474007baff1b7e598a869e83e12" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>initialize_cublas_handle</name></member>
      <member refid="classcuLinearOperator_1a118f2b8f1523da52441070340f7c43f9" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>initialize_cusparse_handle</name></member>
      <member refid="classcLinearOperator_1af0c980ca87c2795e0dbfda1c84f74591" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>is_eigenvalue_relation_known</name></member>
      <member refid="classcCSCMatrix_1a79d28a5222adf5aa510c3e859285dd2c" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>is_identity_matrix</name></member>
      <member refid="classcLinearOperator_1acdafe59b033d5a73f5abe380f63f40a1" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>num_columns</name></member>
      <member refid="classcuLinearOperator_1a701c8a301638c78c66a3290b0848483e" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>num_gpu_devices</name></member>
      <member refid="classcLinearOperator_1aab9f0063e55c2a1a92a7e643f086348b" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>num_parameters</name></member>
      <member refid="classcLinearOperator_1a6786391614f08ef1575554f78717fbb0" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>num_rows</name></member>
      <member refid="classcLinearOperator_1a22683aa9286bfd651f1f2dbae3660545" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>parameters</name></member>
      <member refid="classcuLinearOperator_1a8dac55aff04e3f372468b21367a6dab8" prot="protected" virt="non-virtual"><scope>cuCSCMatrix</scope><name>query_gpu_devices</name></member>
      <member refid="classcLinearOperator_1ad7395bd04ec8014c9dd0e66c318ae125" prot="public" virt="non-virtual"><scope>cuCSCMatrix</scope><name>set_parameters</name></member>
      <member refid="classcuCSCMatrix_1a0af6927d0301ce630c70a88c1d799300" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>transpose_dot</name></member>
      <member refid="classcuCSCMatrix_1a19f87522864944c7d622c1a3653bf883" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>transpose_dot_plus</name></member>
      <member refid="classcCSCMatrix_1a33d71bf920e7622d5c8ff940f68f463e" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>~cCSCMatrix</name></member>
      <member refid="classcLinearOperator_1a53065884c6a1349054a96a9fb8838e65" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>~cLinearOperator</name></member>
      <member refid="classcMatrix_1a0b7276e140f160bdfbb5cdbd14f4265e" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>~cMatrix</name></member>
      <member refid="classcuCSCMatrix_1afb187a61a6f4d735409a989524a85336" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>~cuCSCMatrix</name></member>
      <member refid="classcuLinearOperator_1ad1d14172ed32afa599208af04ec4db0c" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>~cuLinearOperator</name></member>
      <member refid="classcuMatrix_1a9a764596132535491b6614e2637ab636" prot="public" virt="virtual"><scope>cuCSCMatrix</scope><name>~cuMatrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
