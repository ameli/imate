<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacecusparse__interface" kind="namespace" language="C++">
    <compoundname>cusparse_interface</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecusparse__interface_1aa18295200c2d433f8c646ef9fe7788cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::create_cusparse_matrix&lt; float &gt;</definition>
        <argsstring>(cusparseSpMatDescr_t &amp;cusparse_matrix, const LongIndexType num_rows, const LongIndexType num_columns, const LongIndexType nnz, float *device_A_data, LongIndexType *device_A_indices, LongIndexType *device_A_index_pointer)</argsstring>
        <name>create_cusparse_matrix&lt; float &gt;</name>
        <param>
          <type>cusparseSpMatDescr_t &amp;</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_rows</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_columns</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>nnz</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>device_A_data</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>device_A_indices</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>device_A_index_pointer</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cusparseSpMatDescr_t</computeroutput> for the <computeroutput>float</computeroutput> precision data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="40" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="40" bodyend="56"/>
        <references refid="cusparse__symbols_8cpp_1ac3d95efa8a28d3a8ab6f5fd5c7b6a2c2" compoundref="cusparse__symbols_8cpp" startline="140" endline="167">cusparseCreateCsr</references>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a299874ed85d8789ae48d3d7b9826c3fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::create_cusparse_matrix&lt; double &gt;</definition>
        <argsstring>(cusparseSpMatDescr_t &amp;cusparse_matrix, const LongIndexType num_rows, const LongIndexType num_columns, const LongIndexType nnz, double *device_A_data, LongIndexType *device_A_indices, LongIndexType *device_A_index_pointer)</argsstring>
        <name>create_cusparse_matrix&lt; double &gt;</name>
        <param>
          <type>cusparseSpMatDescr_t &amp;</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_rows</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_columns</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>nnz</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>device_A_data</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>device_A_indices</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>device_A_index_pointer</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cusparseSpMatDescr_t</computeroutput> for the <computeroutput>double</computeroutput> precision data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="67" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="67" bodyend="83"/>
        <references refid="cusparse__symbols_8cpp_1ac3d95efa8a28d3a8ab6f5fd5c7b6a2c2" compoundref="cusparse__symbols_8cpp" startline="140" endline="167">cusparseCreateCsr</references>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a9b5ea1b0435f889dd218d36e892ad529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::create_cusparse_vector&lt; float &gt;</definition>
        <argsstring>(cusparseDnVecDescr_t &amp;cusparse_vector, const LongIndexType vector_size, float *device_vector)</argsstring>
        <name>create_cusparse_vector&lt; float &gt;</name>
        <param>
          <type>cusparseDnVecDescr_t &amp;</type>
          <declname>cusparse_vector</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>vector_size</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>device_vector</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cusparseDnVecDescr_t</computeroutput> for the <computeroutput>float</computeroutput> precision data. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that according to the cusparse documentation for the function <computeroutput>cusparseCreateDnVec</computeroutput>, it is safe to use <computeroutput>const_cast</computeroutput> to cast the input vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="98" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="98" bodyend="107"/>
        <references refid="cusparse__symbols_8cpp_1aabd5c006f736178638163674432f654c" compoundref="cusparse__symbols_8cpp" startline="177" endline="196">cusparseCreateDnVec</references>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a3d268461daf7d42e2a41d13ea8f3b762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::create_cusparse_vector&lt; double &gt;</definition>
        <argsstring>(cusparseDnVecDescr_t &amp;cusparse_vector, const LongIndexType vector_size, double *device_vector)</argsstring>
        <name>create_cusparse_vector&lt; double &gt;</name>
        <param>
          <type>cusparseDnVecDescr_t &amp;</type>
          <declname>cusparse_vector</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>vector_size</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>device_vector</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cusparseDnVecDescr_t</computeroutput> for the <computeroutput>double</computeroutput> precision data. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that according to the cusparse documentation for the function <computeroutput>cusparseCreateDnVec</computeroutput>, it is safe to use <computeroutput>const_cast</computeroutput> to cast the input vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="122" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="122" bodyend="131"/>
        <references refid="cusparse__symbols_8cpp_1aabd5c006f736178638163674432f654c" compoundref="cusparse__symbols_8cpp" startline="177" endline="196">cusparseCreateDnVec</references>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a5ab766d1794cea863c5d79815e9b7537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cusparse_interface::destroy_cusparse_matrix</definition>
        <argsstring>(cusparseSpMatDescr_t &amp;cusparse_matrix)</argsstring>
        <name>destroy_cusparse_matrix</name>
        <param>
          <type>cusparseSpMatDescr_t &amp;</type>
          <declname>cusparse_matrix</declname>
        </param>
        <briefdescription>
<para>Destroys cusparse matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="141" column="10" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="141" bodyend="146" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" declline="58" declcolumn="10"/>
        <references refid="cusparse__symbols_8cpp_1a153b1bb75420d84c916c15b38471f44e" compoundref="cusparse__symbols_8cpp" startline="206" endline="221">cusparseDestroySpMat</references>
        <referencedby refid="classcuCSCMatrix_1afb187a61a6f4d735409a989524a85336" compoundref="cu__csc__matrix_8cu" startline="95" endline="154">cuCSCMatrix&lt; DataType &gt;::~cuCSCMatrix</referencedby>
        <referencedby refid="classcuCSRMatrix_1a5040e7af906ebb5e7b4ec1f5af701263" compoundref="cu__csr__matrix_8cu" startline="95" endline="154">cuCSRMatrix&lt; DataType &gt;::~cuCSRMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a5bde38e93d3b432f9342e83682db4f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cusparse_interface::destroy_cusparse_vector</definition>
        <argsstring>(cusparseDnVecDescr_t &amp;cusparse_vector)</argsstring>
        <name>destroy_cusparse_vector</name>
        <param>
          <type>cusparseDnVecDescr_t &amp;</type>
          <declname>cusparse_vector</declname>
        </param>
        <briefdescription>
<para>Destroys cusparse vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="156" column="10" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="156" bodyend="161" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" declline="62" declcolumn="10"/>
        <references refid="cusparse__symbols_8cpp_1a60b7ee5f6dbd7a6b7a7e3cd2ac34d69f" compoundref="cusparse__symbols_8cpp" startline="231" endline="246">cusparseDestroyDnVec</references>
        <referencedby refid="classcuCSCMatrix_1a1eb47019eaa7abd083d644e37893fc3a" compoundref="cu__csc__matrix_8cu" startline="287" endline="329">cuCSCMatrix&lt; DataType &gt;::dot</referencedby>
        <referencedby refid="classcuCSRMatrix_1ac7153e0293610828cf3455d01ffe8c30" compoundref="cu__csr__matrix_8cu" startline="278" endline="318">cuCSRMatrix&lt; DataType &gt;::dot</referencedby>
        <referencedby refid="classcuCSCMatrix_1ac4759c30ffb86521f4ae29eac739db42" compoundref="cu__csc__matrix_8cu" startline="337" endline="379">cuCSCMatrix&lt; DataType &gt;::dot_plus</referencedby>
        <referencedby refid="classcuCSRMatrix_1a96db9711b26e1be6b67da4d73f77cf70" compoundref="cu__csr__matrix_8cu" startline="326" endline="366">cuCSRMatrix&lt; DataType &gt;::dot_plus</referencedby>
        <referencedby refid="classcuCSCMatrix_1a0af6927d0301ce630c70a88c1d799300" compoundref="cu__csc__matrix_8cu" startline="387" endline="429">cuCSCMatrix&lt; DataType &gt;::transpose_dot</referencedby>
        <referencedby refid="classcuCSRMatrix_1a533fef9f3fd9de1f3c984dae663b0ba7" compoundref="cu__csr__matrix_8cu" startline="374" endline="414">cuCSRMatrix&lt; DataType &gt;::transpose_dot</referencedby>
        <referencedby refid="classcuCSCMatrix_1a19f87522864944c7d622c1a3653bf883" compoundref="cu__csc__matrix_8cu" startline="437" endline="479">cuCSCMatrix&lt; DataType &gt;::transpose_dot_plus</referencedby>
        <referencedby refid="classcuCSRMatrix_1ae43cfdb290779cd143389a2fa4ed5b3f" compoundref="cu__csr__matrix_8cu" startline="422" endline="462">cuCSRMatrix&lt; DataType &gt;::transpose_dot_plus</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a17f62676b78dd01c7da2659917a336e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::cusparse_matrix_buffer_size&lt; float &gt;</definition>
        <argsstring>(cusparseHandle_t cusparse_handle, cusparseOperation_t cusparse_operation, const float alpha, cusparseSpMatDescr_t cusparse_matrix, cusparseDnVecDescr_t cusparse_input_vector, const float beta, cusparseDnVecDescr_t cusparse_output_vector, cusparseSpMVAlg_t algorithm, size_t *buffer_size)</argsstring>
        <name>cusparse_matrix_buffer_size&lt; float &gt;</name>
        <param>
          <type>cusparseHandle_t</type>
          <declname>cusparse_handle</declname>
        </param>
        <param>
          <type>cusparseOperation_t</type>
          <declname>cusparse_operation</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>cusparseSpMatDescr_t</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_input_vector</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_output_vector</declname>
        </param>
        <param>
          <type>cusparseSpMVAlg_t</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cusparseSpMat_buffersize</computeroutput> for <computeroutput>float</computeroutput> precision data. This function determines the buffer size needed for matrix-vector multiplication using <computeroutput>cusparseSpMV</computeroutput>. The output is <computeroutput>buffer_size</computeroutput> variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="174" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="174" bodyend="191"/>
        <references refid="cusparse__symbols_8cpp_1a8c1212ef2229f15e7f3ae4877a5cb3b0" compoundref="cusparse__symbols_8cpp" startline="256" endline="282">cusparseSpMV_bufferSize</references>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1ac67669d75f177e0954adb194b94628fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::cusparse_matrix_buffer_size&lt; double &gt;</definition>
        <argsstring>(cusparseHandle_t cusparse_handle, cusparseOperation_t cusparse_operation, const double alpha, cusparseSpMatDescr_t cusparse_matrix, cusparseDnVecDescr_t cusparse_input_vector, const double beta, cusparseDnVecDescr_t cusparse_output_vector, cusparseSpMVAlg_t algorithm, size_t *buffer_size)</argsstring>
        <name>cusparse_matrix_buffer_size&lt; double &gt;</name>
        <param>
          <type>cusparseHandle_t</type>
          <declname>cusparse_handle</declname>
        </param>
        <param>
          <type>cusparseOperation_t</type>
          <declname>cusparse_operation</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>cusparseSpMatDescr_t</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_input_vector</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_output_vector</declname>
        </param>
        <param>
          <type>cusparseSpMVAlg_t</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
<para>A template wrapper for <computeroutput>cusparseSpMat_buffersize</computeroutput> for <computeroutput>double</computeroutput> precision data. This function determines the buffer size needed for matrix-vector multiplication using <computeroutput>cusparseSpMV</computeroutput>. The output is <computeroutput>buffer_size</computeroutput> variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="204" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="204" bodyend="221"/>
        <references refid="cusparse__symbols_8cpp_1a8c1212ef2229f15e7f3ae4877a5cb3b0" compoundref="cusparse__symbols_8cpp" startline="256" endline="282">cusparseSpMV_bufferSize</references>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a8520433c9993b4745611c2a647a8d943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::cusparse_matvec&lt; float &gt;</definition>
        <argsstring>(cusparseHandle_t cusparse_handle, cusparseOperation_t cusparse_operation, const float alpha, cusparseSpMatDescr_t cusparse_matrix, cusparseDnVecDescr_t cusparse_input_vector, const float beta, cusparseDnVecDescr_t cusparse_output_vector, cusparseSpMVAlg_t algorithm, void *external_buffer)</argsstring>
        <name>cusparse_matvec&lt; float &gt;</name>
        <param>
          <type>cusparseHandle_t</type>
          <declname>cusparse_handle</declname>
        </param>
        <param>
          <type>cusparseOperation_t</type>
          <declname>cusparse_operation</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>cusparseSpMatDescr_t</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_input_vector</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_output_vector</declname>
        </param>
        <param>
          <type>cusparseSpMVAlg_t</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>external_buffer</declname>
        </param>
        <briefdescription>
<para>A wrapper for <computeroutput>cusparseSpMV</computeroutput> to perform sparse matrix-vector multiplication uasing <computeroutput>float</computeroutput> precision data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="232" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="232" bodyend="252"/>
        <references refid="cusparse__symbols_8cpp_1ac9a022042118670f89825676deb60d91" compoundref="cusparse__symbols_8cpp" startline="292" endline="318">cusparseSpMV</references>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a0da64dcd32e3cf5c84476e8bc2d46bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::cusparse_matvec&lt; double &gt;</definition>
        <argsstring>(cusparseHandle_t cusparse_handle, cusparseOperation_t cusparse_operation, const double alpha, cusparseSpMatDescr_t cusparse_matrix, cusparseDnVecDescr_t cusparse_input_vector, const double beta, cusparseDnVecDescr_t cusparse_output_vector, cusparseSpMVAlg_t algorithm, void *external_buffer)</argsstring>
        <name>cusparse_matvec&lt; double &gt;</name>
        <param>
          <type>cusparseHandle_t</type>
          <declname>cusparse_handle</declname>
        </param>
        <param>
          <type>cusparseOperation_t</type>
          <declname>cusparse_operation</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>cusparseSpMatDescr_t</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_input_vector</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_output_vector</declname>
        </param>
        <param>
          <type>cusparseSpMVAlg_t</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>external_buffer</declname>
        </param>
        <briefdescription>
<para>A wrapper for <computeroutput>cusparseSpMV</computeroutput> to perform sparse matrix-vector multiplication uasing <computeroutput>double</computeroutput> precision data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="263" column="5" bodyfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" bodystart="263" bodyend="283"/>
        <references refid="cusparse__symbols_8cpp_1ac9a022042118670f89825676deb60d91" compoundref="cusparse__symbols_8cpp" startline="292" endline="318">cusparseSpMV</references>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a26d83ba6e0fe31cb088cd77f2b7d59cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::create_cusparse_matrix</definition>
        <argsstring>(cusparseSpMatDescr_t &amp;cusparse_matrix, const LongIndexType num_rows, const LongIndexType num_columns, const LongIndexType nnz, DataType *device_A_data, LongIndexType *device_A_indices, LongIndexType *device_A_index_pointer)</argsstring>
        <name>create_cusparse_matrix</name>
        <param>
          <type>cusparseSpMatDescr_t &amp;</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_rows</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>num_columns</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>nnz</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_A_data</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>device_A_indices</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref> *</type>
          <declname>device_A_index_pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" line="41" column="10" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" declline="41" declcolumn="10"/>
        <referencedby refid="classcuCSCMatrix_1ad56cd20e4a4603cf94fb54e65f22e3eb" compoundref="cu__csc__matrix_8cu" startline="169" endline="233">cuCSCMatrix&lt; DataType &gt;::copy_host_to_device</referencedby>
        <referencedby refid="classcuCSRMatrix_1af1c70b75225b3c39e9e8beab3255d897" compoundref="cu__csr__matrix_8cu" startline="165" endline="224">cuCSRMatrix&lt; DataType &gt;::copy_host_to_device</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1aaadf25fbb7e80c24cd6ee6ca171aa048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::create_cusparse_vector</definition>
        <argsstring>(cusparseDnVecDescr_t &amp;cusparse_vector, const LongIndexType vector_size, DataType *device_vector)</argsstring>
        <name>create_cusparse_vector</name>
        <param>
          <type>cusparseDnVecDescr_t &amp;</type>
          <declname>cusparse_vector</declname>
        </param>
        <param>
          <type>const <ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref></type>
          <declname>vector_size</declname>
        </param>
        <param>
          <type>DataType *</type>
          <declname>device_vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" line="52" column="10" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" declline="52" declcolumn="10"/>
        <referencedby refid="classcuCSCMatrix_1a1eb47019eaa7abd083d644e37893fc3a" compoundref="cu__csc__matrix_8cu" startline="287" endline="329">cuCSCMatrix&lt; DataType &gt;::dot</referencedby>
        <referencedby refid="classcuCSRMatrix_1ac7153e0293610828cf3455d01ffe8c30" compoundref="cu__csr__matrix_8cu" startline="278" endline="318">cuCSRMatrix&lt; DataType &gt;::dot</referencedby>
        <referencedby refid="classcuCSCMatrix_1ac4759c30ffb86521f4ae29eac739db42" compoundref="cu__csc__matrix_8cu" startline="337" endline="379">cuCSCMatrix&lt; DataType &gt;::dot_plus</referencedby>
        <referencedby refid="classcuCSRMatrix_1a96db9711b26e1be6b67da4d73f77cf70" compoundref="cu__csr__matrix_8cu" startline="326" endline="366">cuCSRMatrix&lt; DataType &gt;::dot_plus</referencedby>
        <referencedby refid="classcuCSCMatrix_1a0af6927d0301ce630c70a88c1d799300" compoundref="cu__csc__matrix_8cu" startline="387" endline="429">cuCSCMatrix&lt; DataType &gt;::transpose_dot</referencedby>
        <referencedby refid="classcuCSRMatrix_1a533fef9f3fd9de1f3c984dae663b0ba7" compoundref="cu__csr__matrix_8cu" startline="374" endline="414">cuCSRMatrix&lt; DataType &gt;::transpose_dot</referencedby>
        <referencedby refid="classcuCSCMatrix_1a19f87522864944c7d622c1a3653bf883" compoundref="cu__csc__matrix_8cu" startline="437" endline="479">cuCSCMatrix&lt; DataType &gt;::transpose_dot_plus</referencedby>
        <referencedby refid="classcuCSRMatrix_1ae43cfdb290779cd143389a2fa4ed5b3f" compoundref="cu__csr__matrix_8cu" startline="422" endline="462">cuCSRMatrix&lt; DataType &gt;::transpose_dot_plus</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1aefebdbbc12a46732f32942498111a16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::cusparse_matrix_buffer_size</definition>
        <argsstring>(cusparseHandle_t cusparse_handle, cusparseOperation_t cusparse_operation, const DataType alpha, cusparseSpMatDescr_t cusparse_matrix, cusparseDnVecDescr_t cusparse_input_vector, const DataType beta, cusparseDnVecDescr_t cusparse_output_vector, cusparseSpMVAlg_t algorithm, size_t *buffer_size)</argsstring>
        <name>cusparse_matrix_buffer_size</name>
        <param>
          <type>cusparseHandle_t</type>
          <declname>cusparse_handle</declname>
        </param>
        <param>
          <type>cusparseOperation_t</type>
          <declname>cusparse_operation</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>cusparseSpMatDescr_t</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_input_vector</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_output_vector</declname>
        </param>
        <param>
          <type>cusparseSpMVAlg_t</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" line="67" column="10" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" declline="67" declcolumn="10"/>
        <referencedby refid="classcuCSCMatrix_1af9b7af845f6f68d64b812709cd0f59ef" compoundref="cu__csc__matrix_8cu" startline="250" endline="279">cuCSCMatrix&lt; DataType &gt;::allocate_buffer</referencedby>
        <referencedby refid="classcuCSRMatrix_1ae629d237f7336a31473b637b9aeb2741" compoundref="cu__csr__matrix_8cu" startline="241" endline="270">cuCSRMatrix&lt; DataType &gt;::allocate_buffer</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecusparse__interface_1a6d9c1654a089e5732deb2e1306b21420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void cusparse_interface::cusparse_matvec</definition>
        <argsstring>(cusparseHandle_t cusparse_handle, cusparseOperation_t cusparse_operation, const DataType alpha, cusparseSpMatDescr_t cusparse_matrix, cusparseDnVecDescr_t cusparse_input_vector, const DataType beta, cusparseDnVecDescr_t cusparse_output_vector, cusparseSpMVAlg_t algorithm, void *external_buffer)</argsstring>
        <name>cusparse_matvec</name>
        <param>
          <type>cusparseHandle_t</type>
          <declname>cusparse_handle</declname>
        </param>
        <param>
          <type>cusparseOperation_t</type>
          <declname>cusparse_operation</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>cusparseSpMatDescr_t</type>
          <declname>cusparse_matrix</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_input_vector</declname>
        </param>
        <param>
          <type>const DataType</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>cusparseDnVecDescr_t</type>
          <declname>cusparse_output_vector</declname>
        </param>
        <param>
          <type>cusparseSpMVAlg_t</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>external_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" line="80" column="10" declfile="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h" declline="80" declcolumn="10"/>
        <referencedby refid="classcuCSCMatrix_1a1eb47019eaa7abd083d644e37893fc3a" compoundref="cu__csc__matrix_8cu" startline="287" endline="329">cuCSCMatrix&lt; DataType &gt;::dot</referencedby>
        <referencedby refid="classcuCSRMatrix_1ac7153e0293610828cf3455d01ffe8c30" compoundref="cu__csr__matrix_8cu" startline="278" endline="318">cuCSRMatrix&lt; DataType &gt;::dot</referencedby>
        <referencedby refid="classcuCSCMatrix_1ac4759c30ffb86521f4ae29eac739db42" compoundref="cu__csc__matrix_8cu" startline="337" endline="379">cuCSCMatrix&lt; DataType &gt;::dot_plus</referencedby>
        <referencedby refid="classcuCSRMatrix_1a96db9711b26e1be6b67da4d73f77cf70" compoundref="cu__csr__matrix_8cu" startline="326" endline="366">cuCSRMatrix&lt; DataType &gt;::dot_plus</referencedby>
        <referencedby refid="classcuCSCMatrix_1a0af6927d0301ce630c70a88c1d799300" compoundref="cu__csc__matrix_8cu" startline="387" endline="429">cuCSCMatrix&lt; DataType &gt;::transpose_dot</referencedby>
        <referencedby refid="classcuCSRMatrix_1a533fef9f3fd9de1f3c984dae663b0ba7" compoundref="cu__csr__matrix_8cu" startline="374" endline="414">cuCSRMatrix&lt; DataType &gt;::transpose_dot</referencedby>
        <referencedby refid="classcuCSCMatrix_1a19f87522864944c7d622c1a3653bf883" compoundref="cu__csc__matrix_8cu" startline="437" endline="479">cuCSCMatrix&lt; DataType &gt;::transpose_dot_plus</referencedby>
        <referencedby refid="classcuCSRMatrix_1ae43cfdb290779cd143389a2fa4ed5b3f" compoundref="cu__csr__matrix_8cu" startline="422" endline="462">cuCSRMatrix&lt; DataType &gt;::transpose_dot_plus</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A collection of templates to wrapper cusparse functions. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>The implementation in the <computeroutput>cu</computeroutput> file is wrapped inside the namepsace clause. This is not necessary in general, however, it is needed to avoid the old gcc compiler error (this is a gcc bug) which complains &quot;no instance of function template matches
           the argument list const float&quot;. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu" line="29" column="1"/>
  </compounddef>
</doxygen>
