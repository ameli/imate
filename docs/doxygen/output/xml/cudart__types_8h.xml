<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cudart__types_8h" kind="file" language="C++">
    <compoundname>cudart_types.h</compoundname>
    <includes local="no">cuda_runtime_api.h</includes>
    <includedby refid="cudart__symbols_8h" local="yes">/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_symbols.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h</label>
        <link refid="cudart__types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cuda_runtime_api.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h</label>
        <link refid="cudart__types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_symbols.h</label>
        <link refid="cudart__symbols_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_symbols.cpp</label>
        <link refid="cudart__symbols_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cudart__types_8h_1ae67b19a0c3dd4de67545a965fdaf6fbd" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaEventCreate_type) (cudaEvent_t *event)</definition>
        <argsstring>)(cudaEvent_t *event)</argsstring>
        <name>cudaEventCreate_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="28" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1aa998a0924819a1885cbce23dcca1b05a" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaEventDestroy_type) (cudaEvent_t event)</definition>
        <argsstring>)(cudaEvent_t event)</argsstring>
        <name>cudaEventDestroy_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="29" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1af2c9857c395f8f52313a93c66d4ac90b" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaEventElapsedTime_type) (float *ms, cudaEvent_t start, cudaEvent_t end)</definition>
        <argsstring>)(float *ms, cudaEvent_t start, cudaEvent_t end)</argsstring>
        <name>cudaEventElapsedTime_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="30" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a6f3f9b5a42dfbf3224fe4278cef7c33a" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaEventRecord_type) (cudaEvent_t event, cudaStream_t stream)</definition>
        <argsstring>)(cudaEvent_t event, cudaStream_t stream)</argsstring>
        <name>cudaEventRecord_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="32" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a277fda2f633fa19df7c8e24a4770def0" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaEventSynchronize_type) (cudaEvent_t event)</definition>
        <argsstring>)(cudaEvent_t event)</argsstring>
        <name>cudaEventSynchronize_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="34" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a4da08a0bdcb1e8e61e344293bd00647c" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaGetDevice_type) (int *device)</definition>
        <argsstring>)(int *device)</argsstring>
        <name>cudaGetDevice_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="35" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a1f035047da4c53f62a2bd22389fb4380" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaGetDeviceCount_type) (int *count)</definition>
        <argsstring>)(int *count)</argsstring>
        <name>cudaGetDeviceCount_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="36" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a7ad36acdde862c42a4bae561302e537a" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaGetDeviceProperties_type) (cudaDeviceProp *prop, int device)</definition>
        <argsstring>)(cudaDeviceProp *prop, int device)</argsstring>
        <name>cudaGetDeviceProperties_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="37" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a704d7fafc4657a3857353ff1b9a56390" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaFree_type) (void *devPtr)</definition>
        <argsstring>)(void *devPtr)</argsstring>
        <name>cudaFree_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="39" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1af0dd7c7f0d4b25b5eae4079fc65b2813" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaMalloc_type) (void **devPtr, size_t size)</definition>
        <argsstring>)(void **devPtr, size_t size)</argsstring>
        <name>cudaMalloc_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="40" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1aef37ae8e24a1058e8206c6ca51bb4a43" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaMemcpy_type) (void *dst, const void *src, size_t count, cudaMemcpyKind kind)</definition>
        <argsstring>)(void *dst, const void *src, size_t count, cudaMemcpyKind kind)</argsstring>
        <name>cudaMemcpy_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="41" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a662dccf3888cee88365e7d83d370e556" prot="public" static="no">
        <type>cudaError_t(*</type>
        <definition>typedef cudaError_t(* cudaSetDevice_type) (int device)</definition>
        <argsstring>)(int device)</argsstring>
        <name>cudaSetDevice_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="43" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a8ba77889f2397fe1b41a5828d433283d" prot="public" static="no">
        <type>void **(*</type>
        <definition>typedef void**(* __cudaRegisterFatBinary_type) (void *fatCubin)</definition>
        <argsstring>)(void *fatCubin)</argsstring>
        <name>__cudaRegisterFatBinary_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="44" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1a1e4ee21179992633deaa0ea9f9da6e9b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* __cudaRegisterFatBinaryEnd_type) (void **fatCubinHandle)</definition>
        <argsstring>)(void **fatCubinHandle)</argsstring>
        <name>__cudaRegisterFatBinaryEnd_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="45" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cudart__types_8h_1aa137d2c7b09b0ffd11404fde378a9fda" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* __cudaUnregisterFatBinary_type) (void **fatCubinHandle)</definition>
        <argsstring>)(void **fatCubinHandle)</argsstring>
        <name>__cudaUnregisterFatBinary_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" line="46" column="9" bodyfile="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileType:<sp/>SOURCE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_CUDA_DYNAMIC_LOADING_CUDART_TYPES_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CUDA_DYNAMIC_LOADING_CUDART_TYPES_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda_runtime_api.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cudaError_t,<sp/>cudaEvent_t,<sp/>cudaStream_t,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cudaDeviceProp,<sp/>cudaMemcpyKind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="cudart__types_8h_1ae67b19a0c3dd4de67545a965fdaf6fbd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1ae67b19a0c3dd4de67545a965fdaf6fbd" kindref="member">cudaEventCreate_type</ref>)(cudaEvent_t*<sp/>event);</highlight></codeline>
<codeline lineno="29" refid="cudart__types_8h_1aa998a0924819a1885cbce23dcca1b05a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1aa998a0924819a1885cbce23dcca1b05a" kindref="member">cudaEventDestroy_type</ref>)(cudaEvent_t<sp/>event);</highlight></codeline>
<codeline lineno="30" refid="cudart__types_8h_1af2c9857c395f8f52313a93c66d4ac90b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1af2c9857c395f8f52313a93c66d4ac90b" kindref="member">cudaEventElapsedTime_type</ref>)(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>ms,<sp/>cudaEvent_t<sp/>start,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaEvent_t<sp/>end);</highlight></codeline>
<codeline lineno="32" refid="cudart__types_8h_1a6f3f9b5a42dfbf3224fe4278cef7c33a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1a6f3f9b5a42dfbf3224fe4278cef7c33a" kindref="member">cudaEventRecord_type</ref>)(cudaEvent_t<sp/>event,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream);</highlight></codeline>
<codeline lineno="34" refid="cudart__types_8h_1a277fda2f633fa19df7c8e24a4770def0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1a277fda2f633fa19df7c8e24a4770def0" kindref="member">cudaEventSynchronize_type</ref>)(cudaEvent_t<sp/>event);</highlight></codeline>
<codeline lineno="35" refid="cudart__types_8h_1a4da08a0bdcb1e8e61e344293bd00647c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1a4da08a0bdcb1e8e61e344293bd00647c" kindref="member">cudaGetDevice_type</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>device);</highlight></codeline>
<codeline lineno="36" refid="cudart__types_8h_1a1f035047da4c53f62a2bd22389fb4380" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1a1f035047da4c53f62a2bd22389fb4380" kindref="member">cudaGetDeviceCount_type</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>count);</highlight></codeline>
<codeline lineno="37" refid="cudart__types_8h_1a7ad36acdde862c42a4bae561302e537a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1a7ad36acdde862c42a4bae561302e537a" kindref="member">cudaGetDeviceProperties_type</ref>)(cudaDeviceProp*<sp/>prop,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device);</highlight></codeline>
<codeline lineno="39" refid="cudart__types_8h_1a704d7fafc4657a3857353ff1b9a56390" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1a704d7fafc4657a3857353ff1b9a56390" kindref="member">cudaFree_type</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>devPtr);</highlight></codeline>
<codeline lineno="40" refid="cudart__types_8h_1af0dd7c7f0d4b25b5eae4079fc65b2813" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1af0dd7c7f0d4b25b5eae4079fc65b2813" kindref="member">cudaMalloc_type</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>devPtr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="41" refid="cudart__types_8h_1aef37ae8e24a1058e8206c6ca51bb4a43" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1aef37ae8e24a1058e8206c6ca51bb4a43" kindref="member">cudaMemcpy_type</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/>cudaMemcpyKind<sp/>kind);</highlight></codeline>
<codeline lineno="43" refid="cudart__types_8h_1a662dccf3888cee88365e7d83d370e556" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cudaError_t<sp/>(*<ref refid="cudart__types_8h_1a662dccf3888cee88365e7d83d370e556" kindref="member">cudaSetDevice_type</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>device);</highlight></codeline>
<codeline lineno="44" refid="cudart__types_8h_1a8ba77889f2397fe1b41a5828d433283d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>(*__cudaRegisterFatBinary_type)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*fatCubin);</highlight></codeline>
<codeline lineno="45" refid="cudart__types_8h_1a1e4ee21179992633deaa0ea9f9da6e9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="cudart__types_8h_1a1e4ee21179992633deaa0ea9f9da6e9b" kindref="member">__cudaRegisterFatBinaryEnd_type</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**fatCubinHandle);</highlight></codeline>
<codeline lineno="46" refid="cudart__types_8h_1aa137d2c7b09b0ffd11404fde378a9fda" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="cudart__types_8h_1aa137d2c7b09b0ffd11404fde378a9fda" kindref="member">__cudaUnregisterFatBinary_type</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**fatCubinHandle);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_CUDA_DYNAMIC_LOADING_CUDART_TYPES_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_cuda_dynamic_loading/cudart_types.h"/>
  </compounddef>
</doxygen>
