<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="highres__time__stamp_8h" kind="file" language="C++">
    <compoundname>highres_time_stamp.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includedby refid="highres__time__stamp_8cpp" local="yes">/home/sia/work/github/imate/imate/_random_generator/highres_time_stamp.cpp</includedby>
    <includedby refid="split__mix__64_8cpp" local="yes">/home/sia/work/github/imate/imate/_random_generator/split_mix_64.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_random_generator/highres_time_stamp.h</label>
        <link refid="highres__time__stamp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_random_generator/highres_time_stamp.h</label>
        <link refid="highres__time__stamp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/sia/work/github/imate/imate/_random_generator/highres_time_stamp.cpp</label>
        <link refid="highres__time__stamp_8cpp"/>
      </node>
      <node id="3">
        <label>/home/sia/work/github/imate/imate/_random_generator/split_mix_64.cpp</label>
        <link refid="split__mix__64_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="highres__time__stamp_8h_1ae3b2a58414a260c6343fda0ebf00d81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t get_highres_time_stamp</definition>
        <argsstring>(void)</argsstring>
        <name>get_highres_time_stamp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function returns a high-resolution clock counter to be used to seed a random generating function (see <ref refid="split__mix__64_8cpp" kindref="compound">split_mix_64.cpp</ref>). The purpose of high-resolution counter is that if the random-generating function is called subsequently in very short intervals (about nano-second), the seed value should be distinct.</para>
<para>In UNIX, such distinct seed values can be generated by <computeroutput>std::clock()</computeroutput> function which gives the processor counter. This function has enough resolution to generate distinct values if called subsequently. In MacOS, this function is available only after version 10.12.</para>
<para>In Windows, however, <computeroutput>std::clock()</computeroutput> is not a process counter, rather, it measures the wall clock with resoluton of one second! Thus, this function is not suitable at all on Windows. Instead, the QueryPerformanceCounter is used.</para>
<para>In Case if machine is neither POSIX compilant nor Windows, this function falls back to std::time and std::clock.</para>
<para>Note that this function works without C++11.</para>
<para>An alternative approach is to use <computeroutput>rdtsc()</computeroutput>, but its use is discouraged, since it is far less portable and many processors (like ARM64 archetecture) do not support it. Unlike rdtsc, this function works on both X86_64 and ARM64. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_random_generator/highres_time_stamp.h" line="28" column="10" bodyfile="/home/sia/work/github/imate/imate/_random_generator/highres_time_stamp.cpp" bodystart="88" bodyend="134" declfile="/home/sia/work/github/imate/imate/_random_generator/highres_time_stamp.h" declline="28" declcolumn="10"/>
        <referencedby refid="classSplitMix64_1a818c16ba0ce65c40a4b5f8eb0f8006d2" compoundref="split__mix__64_8cpp" startline="28" endline="47">SplitMix64::SplitMix64</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileType:<sp/>SOURCE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_RANDOM_GENERATOR_HIGHRES_TIME_STAMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_RANDOM_GENERATOR_HIGHRES_TIME_STAMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>HighRes<sp/>Time<sp/>Stamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">uint64_t<sp/><ref refid="highres__time__stamp_8h_1ae3b2a58414a260c6343fda0ebf00d81d" kindref="member">get_highres_time_stamp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_RANDOM_GENERATOR_HIGHRES_TIME_STAMP_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/github/imate/imate/_random_generator/highres_time_stamp.h"/>
  </compounddef>
</doxygen>
