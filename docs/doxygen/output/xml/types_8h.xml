<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="types_8h" kind="file" language="C++">
    <compoundname>types.h</compoundname>
    <includes refid="definitions_8h" local="yes">./definitions.h</includes>
    <includedby refid="c__matrix__operations_8h" local="yes">/home/sia/work/github/imate/imate/_c_basic_algebra/c_matrix_operations.h</includedby>
    <includedby refid="c__vector__operations_8h" local="yes">/home/sia/work/github/imate/imate/_c_basic_algebra/c_vector_operations.h</includedby>
    <includedby refid="c__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_affine_matrix_function.h</includedby>
    <includedby refid="c__csc__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_affine_matrix_function.h</includedby>
    <includedby refid="c__csc__matrix_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_matrix.h</includedby>
    <includedby refid="c__csr__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_affine_matrix_function.h</includedby>
    <includedby refid="c__csr__matrix_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_matrix.h</includedby>
    <includedby refid="c__dense__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h</includedby>
    <includedby refid="c__dense__matrix_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_matrix.h</includedby>
    <includedby refid="c__linear__operator_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_linear_operator.h</includedby>
    <includedby refid="c__matrix_8h" local="yes">/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h</includedby>
    <includedby refid="c__golub__kahn__bidiagonalization_8h" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/c_golub_kahn_bidiagonalization.h</includedby>
    <includedby refid="c__lanczos__tridiagonalization_8h" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/c_lanczos_tridiagonalization.h</includedby>
    <includedby refid="c__orthogonalization_8h" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/c_orthogonalization.h</includedby>
    <includedby refid="c__trace__estimator_8h" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/c_trace_estimator.h</includedby>
    <includedby refid="convergence__tools_8h" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.h</includedby>
    <includedby refid="diagonalization_8h" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/diagonalization.h</includedby>
    <includedby refid="cu__matrix__operations_8h" local="yes">/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_matrix_operations.h</includedby>
    <includedby refid="cu__vector__operations_8h" local="yes">/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_vector_operations.h</includedby>
    <includedby refid="cusparse__interface_8h" local="yes">/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h</includedby>
    <includedby refid="cu__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.h</includedby>
    <includedby refid="cu__csc__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_affine_matrix_function.h</includedby>
    <includedby refid="cu__csc__matrix_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h</includedby>
    <includedby refid="cu__csr__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_affine_matrix_function.h</includedby>
    <includedby refid="cu__csr__matrix_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h</includedby>
    <includedby refid="cu__dense__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_affine_matrix_function.h</includedby>
    <includedby refid="cu__dense__matrix_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_matrix.h</includedby>
    <includedby refid="cu__linear__operator_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_linear_operator.h</includedby>
    <includedby refid="cu__matrix_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_matrix.h</includedby>
    <includedby refid="cu__golub__kahn__bidiagonalization_8h" local="yes">/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_golub_kahn_bidiagonalization.h</includedby>
    <includedby refid="cu__lanczos__tridiagonalization_8h" local="yes">/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_lanczos_tridiagonalization.h</includedby>
    <includedby refid="cu__orthogonalization_8h" local="yes">/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_orthogonalization.h</includedby>
    <includedby refid="cu__trace__estimator_8h" local="yes">/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_trace_estimator.h</includedby>
    <includedby refid="cuda__interface_8h" local="yes">/home/sia/work/github/imate/imate/_cuda_utilities/cuda_interface.h</includedby>
    <includedby refid="random__array__generator_8h" local="yes">/home/sia/work/github/imate/imate/_random_generator/random_array_generator.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>./definitions.h</label>
        <link refid="definitions_8h"/>
      </node>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_definitions/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="66">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.h</label>
        <link refid="cusparse__interface_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_linear_operator.h</label>
        <link refid="c__linear__operator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_matrix.h</label>
        <link refid="c__csc__matrix_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_linear_operator.h</label>
        <link refid="cu__linear__operator_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/c_vector_operations.cpp</label>
        <link refid="c__vector__operations_8cpp"/>
      </node>
      <node id="7">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/c_vector_operations.h</label>
        <link refid="c__vector__operations_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.h</label>
        <link refid="convergence__tools_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_affine_matrix_function.cu</label>
        <link refid="cu__dense__affine__matrix__function_8cu"/>
      </node>
      <node id="53">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_lanczos_tridiagonalization.h</label>
        <link refid="cu__lanczos__tridiagonalization_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_matrix.h</label>
        <link refid="c__dense__matrix_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.cpp</label>
        <link refid="c__matrix_8cpp"/>
      </node>
      <node id="41">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_trace_estimator.cpp</label>
        <link refid="c__trace__estimator_8cpp"/>
      </node>
      <node id="11">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_lanczos_tridiagonalization.cpp</label>
        <link refid="c__lanczos__tridiagonalization_8cpp"/>
      </node>
      <node id="25">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.cu</label>
        <link refid="cu__csc__matrix_8cu"/>
      </node>
      <node id="29">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_affine_matrix_function.cu</label>
        <link refid="cu__csr__affine__matrix__function_8cu"/>
      </node>
      <node id="27">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.h</label>
        <link refid="cu__csr__matrix_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cusparse_interface.cu</label>
        <link refid="cusparse__interface_8cu"/>
      </node>
      <node id="9">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_affine_matrix_function.cpp</label>
        <link refid="c__affine__matrix__function_8cpp"/>
      </node>
      <node id="20">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.cpp</label>
        <link refid="c__dense__affine__matrix__function_8cpp"/>
      </node>
      <node id="18">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_affine_matrix_function.cpp</label>
        <link refid="c__csr__affine__matrix__function_8cpp"/>
      </node>
      <node id="22">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_matrix.h</label>
        <link refid="cu__csc__matrix_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_linear_operator.cpp</label>
        <link refid="c__linear__operator_8cpp"/>
      </node>
      <node id="63">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_vector_operations.h</label>
        <link refid="cu__vector__operations_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_matrix.cu</label>
        <link refid="cu__matrix_8cu"/>
      </node>
      <node id="60">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/diagonalization.cpp</label>
        <link refid="diagonalization_8cpp"/>
      </node>
      <node id="17">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_affine_matrix_function.h</label>
        <link refid="c__csr__affine__matrix__function_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/convergence_tools.cpp</label>
        <link refid="convergence__tools_8cpp"/>
      </node>
      <node id="6">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_matrix.cpp</label>
        <link refid="c__dense__matrix_8cpp"/>
      </node>
      <node id="51">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_golub_kahn_bidiagonalization.cu</label>
        <link refid="cu__golub__kahn__bidiagonalization_8cu"/>
      </node>
      <node id="64">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_vector_operations.cu</label>
        <link refid="cu__vector__operations_8cu"/>
      </node>
      <node id="71">
        <label>/home/sia/work/github/imate/imate/_random_generator/random_array_generator.h</label>
        <link refid="random__array__generator_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_matrix.cpp</label>
        <link refid="c__csc__matrix_8cpp"/>
      </node>
      <node id="33">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_affine_matrix_function.h</label>
        <link refid="cu__dense__affine__matrix__function_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_affine_matrix_function.cpp</label>
        <link refid="c__csc__affine__matrix__function_8cpp"/>
      </node>
      <node id="38">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_matrix.h</label>
        <link refid="c__matrix_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.cu</label>
        <link refid="cu__affine__matrix__function_8cu"/>
      </node>
      <node id="42">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_lanczos_tridiagonalization.h</label>
        <link refid="c__lanczos__tridiagonalization_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_matrix.cu</label>
        <link refid="cu__dense__matrix_8cu"/>
      </node>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_definitions/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_matrix_operations.h</label>
        <link refid="cu__matrix__operations_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_trace_estimator.h</label>
        <link refid="c__trace__estimator_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_orthogonalization.h</label>
        <link refid="cu__orthogonalization_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_trace_estimator.h</label>
        <link refid="cu__trace__estimator_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/c_matrix_operations.h</label>
        <link refid="c__matrix__operations_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_golub_kahn_bidiagonalization.h</label>
        <link refid="c__golub__kahn__bidiagonalization_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csc_affine_matrix_function.h</label>
        <link refid="c__csc__affine__matrix__function_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>/home/sia/work/github/imate/imate/_cuda_utilities/cuda_interface.cu</label>
        <link refid="cuda__interface_8cu"/>
      </node>
      <node id="30">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_matrix.cu</label>
        <link refid="cu__csr__matrix_8cu"/>
      </node>
      <node id="14">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_affine_matrix_function.h</label>
        <link refid="c__affine__matrix__function_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/sia/work/github/imate/imate/_c_basic_algebra/c_matrix_operations.cpp</label>
        <link refid="c__matrix__operations_8cpp"/>
      </node>
      <node id="12">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_orthogonalization.cpp</label>
        <link refid="c__orthogonalization_8cpp"/>
      </node>
      <node id="28">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_affine_matrix_function.h</label>
        <link refid="cu__csr__affine__matrix__function_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_affine_matrix_function.cu</label>
        <link refid="cu__csc__affine__matrix__function_8cu"/>
      </node>
      <node id="10">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_golub_kahn_bidiagonalization.cpp</label>
        <link refid="c__golub__kahn__bidiagonalization_8cpp"/>
      </node>
      <node id="65">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_orthogonalization.cu</label>
        <link refid="cu__orthogonalization_8cu"/>
      </node>
      <node id="26">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_matrix.h</label>
        <link refid="c__csr__matrix_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.h</label>
        <link refid="cu__affine__matrix__function_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_linear_operator.cu</label>
        <link refid="cu__linear__operator_8cu"/>
      </node>
      <node id="5">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_csr_matrix.cpp</label>
        <link refid="c__csr__matrix_8cpp"/>
      </node>
      <node id="13">
        <label>/home/sia/work/github/imate/imate/_random_generator/random_array_generator.cpp</label>
        <link refid="random__array__generator_8cpp"/>
      </node>
      <node id="52">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_trace_estimator.cu</label>
        <link refid="cu__trace__estimator_8cu"/>
      </node>
      <node id="19">
        <label>/home/sia/work/github/imate/imate/_c_linear_operator/c_dense_affine_matrix_function.h</label>
        <link refid="c__dense__affine__matrix__function_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/diagonalization.h</label>
        <link refid="diagonalization_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_affine_matrix_function.h</label>
        <link refid="cu__csc__affine__matrix__function_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>/home/sia/work/github/imate/imate/_cu_basic_algebra/cu_matrix_operations.cu</label>
        <link refid="cu__matrix__operations_8cu"/>
      </node>
      <node id="69">
        <label>/home/sia/work/github/imate/imate/_cuda_utilities/cuda_interface.h</label>
        <link refid="cuda__interface_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_lanczos_tridiagonalization.cu</label>
        <link refid="cu__lanczos__tridiagonalization_8cu"/>
      </node>
      <node id="48">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_matrix.h</label>
        <link refid="cu__matrix_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_golub_kahn_bidiagonalization.h</label>
        <link refid="cu__golub__kahn__bidiagonalization_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_orthogonalization.h</label>
        <link refid="c__orthogonalization_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_matrix.h</label>
        <link refid="cu__dense__matrix_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="types_8h_1a4918759cb64dcead17269b3613b27d25" prot="public" static="no">
        <type>int</type>
        <definition>typedef int LongIndexType</definition>
        <argsstring></argsstring>
        <name>LongIndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use <computeroutput>LongIndexType</computeroutput> type for long indices where parallelization could be important. This could include, for instance, indices of long columns of matrices, but not short rows.</para>
<para>This type is intended to be set as <computeroutput>long</computeroutput>. However, because the indices of <computeroutput>scipy.sparse</computeroutput> matrices are stored as <computeroutput>int</computeroutput> (and not <computeroutput>long</computeroutput>) here, a fused type is used to accommodate both <computeroutput>int</computeroutput> and <computeroutput>long</computeroutput>.</para>
<para>The type of indices of sparse arrays can be cast, for instance by: <verbatim>// In this file:
ctypedef long IndexType

// In linear_operator.pyx:LinearOperator:__cinit__()
// Add .astype(&apos;uint64&apos;) to these variables:
self.A_indices = A.indices.astype(&apos;uint64&apos;)
self.B_indices = A.indices.astype(&apos;uint64&apos;)
self.A_index_pointer = A.indptr.astype(&apos;uint64&apos;)
self.B_index_pointer = B.indptr.astype(&apos;uint64&apos;)
</verbatim> In the above, <computeroutput>uint64</computeroutput> is equivalent to <computeroutput>long</computeroutput>. Note, this will <emphasis>copy</emphasis> the data, since scipy&apos;s sparse indices should be casted from <computeroutput>uint32</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_definitions/types.h" line="60" column="21" bodyfile="/home/sia/work/github/imate/imate/_definitions/types.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1ab1b7173c76e5040d0161e695a129dafe" prot="public" static="no">
        <type>int</type>
        <definition>typedef int IndexType</definition>
        <argsstring></argsstring>
        <name>IndexType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_definitions/types.h" line="65" column="13" bodyfile="/home/sia/work/github/imate/imate/_definitions/types.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" prot="public" static="no">
        <type>int</type>
        <definition>typedef int FlagType</definition>
        <argsstring></argsstring>
        <name>FlagType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/_definitions/types.h" line="68" column="13" bodyfile="/home/sia/work/github/imate/imate/_definitions/types.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileType:<sp/>SOURCE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_DEFINITIONS_TYPES_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DEFINITIONS_TYPES_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="definitions_8h" kindref="compound">./definitions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(LONG_INT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(UNSIGNED_LONG_INT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(UNSIGNED_LONG_INT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="types_8h_1a4918759cb64dcead17269b3613b27d25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>indices<sp/>of<sp/>short<sp/>row<sp/>of<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="types_8h_1ab1b7173c76e5040d0161e695a129dafe" kindref="member">IndexType</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>both<sp/>flags<sp/>and<sp/>integers,<sp/>including<sp/>negative<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a67de833a333e9264ce27ee3d6e4b2732" kindref="member">FlagType</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_DEFINITIONS_TYPES_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/github/imate/imate/_definitions/types.h"/>
  </compounddef>
</doxygen>
