<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="functions_8h" kind="file" language="C++">
    <compoundname>functions.h</compoundname>
    <includedby refid="c__trace__estimator_8h" local="yes">/home/sia/work/github/imate/imate/_c_trace_estimator/c_trace_estimator.h</includedby>
    <includedby refid="cu__trace__estimator_8h" local="yes">/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_trace_estimator.h</includedby>
    <includedby refid="exponential_8h" local="yes">/home/sia/work/github/imate/imate/functions/exponential.h</includedby>
    <includedby refid="functions_8cpp" local="yes">/home/sia/work/github/imate/imate/functions/functions.cpp</includedby>
    <includedby refid="gaussian_8h" local="yes">/home/sia/work/github/imate/imate/functions/gaussian.h</includedby>
    <includedby refid="homographic_8h" local="yes">/home/sia/work/github/imate/imate/functions/homographic.h</includedby>
    <includedby refid="identity_8h" local="yes">/home/sia/work/github/imate/imate/functions/identity.h</includedby>
    <includedby refid="indicator_8h" local="yes">/home/sia/work/github/imate/imate/functions/indicator.h</includedby>
    <includedby refid="inverse_8h" local="yes">/home/sia/work/github/imate/imate/functions/inverse.h</includedby>
    <includedby refid="logarithm_8h" local="yes">/home/sia/work/github/imate/imate/functions/logarithm.h</includedby>
    <includedby refid="power_8h" local="yes">/home/sia/work/github/imate/imate/functions/power.h</includedby>
    <includedby refid="smoothstep_8h" local="yes">/home/sia/work/github/imate/imate/functions/smoothstep.h</includedby>
    <invincdepgraph>
      <node id="8">
        <label>/home/sia/work/github/imate/imate/functions/functions.cpp</label>
        <link refid="functions_8cpp"/>
      </node>
      <node id="3">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_trace_estimator.cpp</label>
        <link refid="c__trace__estimator_8cpp"/>
      </node>
      <node id="14">
        <label>/home/sia/work/github/imate/imate/functions/identity.cpp</label>
        <link refid="identity_8cpp"/>
      </node>
      <node id="7">
        <label>/home/sia/work/github/imate/imate/functions/exponential.cpp</label>
        <link refid="exponential_8cpp"/>
      </node>
      <node id="16">
        <label>/home/sia/work/github/imate/imate/functions/indicator.cpp</label>
        <link refid="indicator_8cpp"/>
      </node>
      <node id="24">
        <label>/home/sia/work/github/imate/imate/functions/smoothstep.cpp</label>
        <link refid="smoothstep_8cpp"/>
      </node>
      <node id="19">
        <label>/home/sia/work/github/imate/imate/functions/logarithm.h</label>
        <link refid="logarithm_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/functions/functions.h</label>
        <link refid="functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/sia/work/github/imate/imate/functions/homographic.cpp</label>
        <link refid="homographic_8cpp"/>
      </node>
      <node id="13">
        <label>/home/sia/work/github/imate/imate/functions/identity.h</label>
        <link refid="identity_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/sia/work/github/imate/imate/_c_trace_estimator/c_trace_estimator.h</label>
        <link refid="c__trace__estimator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/sia/work/github/imate/imate/functions/smoothstep.h</label>
        <link refid="smoothstep_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_trace_estimator.h</label>
        <link refid="cu__trace__estimator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/sia/work/github/imate/imate/functions/power.h</label>
        <link refid="power_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/sia/work/github/imate/imate/functions/indicator.h</label>
        <link refid="indicator_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/sia/work/github/imate/imate/functions/logarithm.cpp</label>
        <link refid="logarithm_8cpp"/>
      </node>
      <node id="22">
        <label>/home/sia/work/github/imate/imate/functions/power.cpp</label>
        <link refid="power_8cpp"/>
      </node>
      <node id="5">
        <label>/home/sia/work/github/imate/imate/_cu_trace_estimator/cu_trace_estimator.cu</label>
        <link refid="cu__trace__estimator_8cu"/>
      </node>
      <node id="9">
        <label>/home/sia/work/github/imate/imate/functions/gaussian.h</label>
        <link refid="gaussian_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/sia/work/github/imate/imate/functions/exponential.h</label>
        <link refid="exponential_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/sia/work/github/imate/imate/functions/inverse.h</label>
        <link refid="inverse_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/sia/work/github/imate/imate/functions/inverse.cpp</label>
        <link refid="inverse_8cpp"/>
      </node>
      <node id="11">
        <label>/home/sia/work/github/imate/imate/functions/homographic.h</label>
        <link refid="homographic_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/sia/work/github/imate/imate/functions/gaussian.cpp</label>
        <link refid="gaussian_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classFunction" prot="public">Function</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileType:<sp/>SOURCE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FUNCTIONS_FUNCTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUNCTIONS_FUNCTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classFunction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFunction" kindref="compound">Function</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classFunction_1a3b03f7cf0b75d16edebdda1dee1db6fd" kindref="member">~Function</ref>();</highlight></codeline>
<codeline lineno="41" refid="classFunction_1a603a10dedebd89b477a23a5f8f705935" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lambda_)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42" refid="classFunction_1abb983ee238adf9b49ed7f1a7442e3019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda_)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43" refid="classFunction_1a1e83c965a17529850d96015fb2d91968" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda_)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>FUNCTIONS_FUNCTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/github/imate/imate/functions/functions.h"/>
  </compounddef>
</doxygen>
