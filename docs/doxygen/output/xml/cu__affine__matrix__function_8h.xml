<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cu__affine__matrix__function_8h" kind="file" language="C++">
    <compoundname>cu_affine_matrix_function.h</compoundname>
    <includes refid="types_8h" local="yes">../_definitions/types.h</includes>
    <includes refid="cu__linear__operator_8h" local="yes">./cu_linear_operator.h</includes>
    <includedby refid="cu__affine__matrix__function_8cu" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.cu</includedby>
    <includedby refid="cu__csc__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_affine_matrix_function.h</includedby>
    <includedby refid="cu__csr__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_affine_matrix_function.h</includedby>
    <includedby refid="cu__dense__affine__matrix__function_8h" local="yes">/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_affine_matrix_function.h</includedby>
    <incdepgraph>
      <node id="7">
        <label>../_c_linear_operator/c_linear_operator.h</label>
        <link refid="c__linear__operator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>./cu_linear_operator.h</label>
        <link refid="cu__linear__operator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cublas_v2.h</label>
      </node>
      <node id="3">
        <label>./definitions.h</label>
        <link refid="definitions_8h"/>
      </node>
      <node id="2">
        <label>../_definitions/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.h</label>
        <link refid="cu__affine__matrix__function_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cusparse.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_affine_matrix_function.cu</label>
        <link refid="cu__dense__affine__matrix__function_8cu"/>
      </node>
      <node id="6">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_affine_matrix_function.cu</label>
        <link refid="cu__csr__affine__matrix__function_8cu"/>
      </node>
      <node id="7">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_dense_affine_matrix_function.h</label>
        <link refid="cu__dense__affine__matrix__function_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.cu</label>
        <link refid="cu__affine__matrix__function_8cu"/>
      </node>
      <node id="5">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csr_affine_matrix_function.h</label>
        <link refid="cu__csr__affine__matrix__function_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_affine_matrix_function.cu</label>
        <link refid="cu__csc__affine__matrix__function_8cu"/>
      </node>
      <node id="1">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.h</label>
        <link refid="cu__affine__matrix__function_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/sia/work/github/imate/imate/_cu_linear_operator/cu_csc_affine_matrix_function.h</label>
        <link refid="cu__csc__affine__matrix__function_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classcuAffineMatrixFunction" prot="public">cuAffineMatrixFunction</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-FileType:<sp/>SOURCE</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_CU_LINEAR_OPERATOR_CU_AFFINE_MATRIX_FUNCTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CU_LINEAR_OPERATOR_CU_AFFINE_MATRIX_FUNCTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../_definitions/types.h&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LongIndexType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cu__linear__operator_8h" kindref="compound">./cu_linear_operator.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cuLinearOperator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cu<sp/>Affine<sp/>Matrix<sp/>Function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="40" refid="classcuAffineMatrixFunction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcuAffineMatrixFunction" kindref="compound">cuAffineMatrixFunction</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcuLinearOperator" kindref="compound">cuLinearOperator</ref>&lt;DataType&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Member<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcuAffineMatrixFunction_1a577ffadfc3b5d791b152d7c03d257dda" kindref="member">cuAffineMatrixFunction</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcuAffineMatrixFunction_1a253fbd0015b06edbd80b62d6f791486c" kindref="member">~cuAffineMatrixFunction</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classcuAffineMatrixFunction_1a61f06f563a69f9c5a1580814786a4e20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcuAffineMatrixFunction_1a61f06f563a69f9c5a1580814786a4e20" kindref="member">set_parameters</ref>(DataType*<sp/>t);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/><ref refid="classcuAffineMatrixFunction_1acdf545a2c27a4cb6988548d808474c42" kindref="member">get_eigenvalue</ref>(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType*<sp/>known_parameters,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>known_eigenvalue,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType*<sp/>inquiry_parameters)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Member<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcuAffineMatrixFunction_1af0a51e03280f6700f6534a94874436c1" kindref="member">_add_scaled_vector</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType*<sp/>input_vector,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a4918759cb64dcead17269b3613b27d25" kindref="member">LongIndexType</ref><sp/>vector_size,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataType<sp/>scale,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType*<sp/>output_vector)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Member<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classcuAffineMatrixFunction_1ae7d34c20db47d0ebaa06ec6276fe2577" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcuAffineMatrixFunction_1ae7d34c20db47d0ebaa06ec6276fe2577" kindref="member">B_is_identity</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>_CU_LINEAR_OPERATOR_CU_AFFINE_MATRIX_FUNCTION_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/github/imate/imate/_cu_linear_operator/cu_affine_matrix_function.h"/>
  </compounddef>
</doxygen>
