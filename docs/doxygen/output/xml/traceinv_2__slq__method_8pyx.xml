<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="traceinv_2__slq__method_8pyx" kind="file" language="Python">
    <compoundname>_slq_method.pyx</compoundname>
    <innernamespace refid="namespaceimate_1_1traceinv_1_1__slq__method">imate::traceinv::_slq_method</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceimate_1_1traceinv_1_1__slq__method" refkind="compound"><highlight class="comment">#<sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-FileType:<sp/>SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.._trace_estimator<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>trace_estimator</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.._trace_estimator<sp/>cimport<sp/>trace_estimator</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..functions<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pyFunction</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>..functions<sp/>cimport<sp/>pyFunction,<sp/>Function,<sp/>Inverse</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>slq<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="namespaceimate_1_1traceinv_1_1__slq__method_1a6da6903653c735832df67ea6a4e06bbf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceimate_1_1traceinv_1_1__slq__method_1a6da6903653c735832df67ea6a4e06bbf" kindref="member">slq_method</ref>(</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gram=False,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p=1.0,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_info=False,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters=None,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_num_samples=10,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_num_samples=50,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_atol=None,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_rtol=1e-2,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confidence_level=0.95,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlier_significance_level=0.001,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lanczos_degree=20,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lanczos_tol=None,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orthogonalize=0,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_threads=0,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_gpu_devices=0,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose=False,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plot=False,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpu=False):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Trace<sp/>of<sp/>inverse<sp/>of<sp/>matrix<sp/>or<sp/>linear<sp/>operator<sp/>using<sp/>stochastic<sp/>Lanczos</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>quadrature<sp/>method.</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Given<sp/>the<sp/>matrix<sp/>or<sp/>the<sp/>linear<sp/>operator<sp/>:math:`\\mathbf{A}`<sp/>and<sp/>the<sp/>real</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>non-negative<sp/>exponent<sp/>:math:`p<sp/>\\geq<sp/>0`,<sp/>the<sp/>following<sp/>is<sp/>computed:</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathrm{trace}<sp/>\\left(\\mathbf{A}^p<sp/>\\right).</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>``gram``<sp/>is<sp/>`True`,<sp/>then<sp/>:math:`\\mathbf{A}`<sp/>in<sp/>the<sp/>above<sp/>is<sp/>replaced<sp/>by</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>Gramian<sp/>matrix<sp/>:math:`\\mathbf{A}^{\\intercal}<sp/>\\mathbf{A}`,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>following<sp/>is<sp/>instead<sp/>computed:</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathrm{trace}<sp/>\\left((\\mathbf{A}^{\\intercal}\\mathbf{A})^p</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\right).</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>:math:`\\mathbf{A}<sp/>=<sp/>\\mathbf{A}(t)`<sp/>is<sp/>a<sp/>linear<sp/>operator<sp/>of<sp/>the<sp/>class</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:class:`imate.AffineMatrixFunction`<sp/>with<sp/>the<sp/>parameter<sp/>:math:`t`,<sp/>then<sp/>for</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>an<sp/>input<sp/><sp/>tuple<sp/>:math:`t<sp/>=<sp/>(t_1,<sp/>\\dots,<sp/>t_q)`,<sp/>an<sp/>array<sp/>output<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>size<sp/>:math:`q`<sp/>is<sp/>returned,<sp/>namely:</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathrm{trace}<sp/>\\left((\\mathbf{A}(t_i))^p<sp/>\\right),</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\quad<sp/>i=1,<sp/>\\dots,<sp/>q.</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>:<sp/>numpy.ndarray,<sp/>scipy.sparse,<sp/>:class:`imate.Matrix`,<sp/>or<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:class:`imate.AffineMatrixFunction`</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>sparse<sp/>or<sp/>dense<sp/>matrix<sp/>or<sp/>linear<sp/>operator.<sp/>If<sp/>``gram``<sp/>is<sp/>`False`,</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>`A`<sp/>should<sp/>be<sp/>symmetric.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>warning::</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>symmetry<sp/>of<sp/>`A`<sp/>is<sp/>not<sp/>pre-checked<sp/>by<sp/>this<sp/>function.<sp/>If</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``gram``<sp/>is<sp/>`False`,<sp/>make<sp/>sure<sp/>`A`<sp/>is<sp/>symmetric.</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>gram<sp/>:<sp/>bool,<sp/>default=False</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>`True`,<sp/>the<sp/>trace<sp/>of<sp/>the<sp/>Gramian<sp/>matrix,</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`(\\mathbf{A}^{\\intercal}\\mathbf{A})^{-p}`,<sp/>is<sp/>computed.<sp/>The</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gramian<sp/>matrix<sp/>itself<sp/>is<sp/>not<sp/>directly<sp/>computed.<sp/>If<sp/>`False`,<sp/>the</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace<sp/>of<sp/>:math:`\\mathbf{A}^{-p}`<sp/>is<sp/>computed.</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>p<sp/>:<sp/>float,<sp/>default=1.0</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>non-negative<sp/>real<sp/>exponent<sp/>:math:`p`<sp/>in<sp/>:math:`\\mathbf{A}^{-p}`.</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return_info<sp/>:<sp/>bool,<sp/>default=False</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>`True`,<sp/>this<sp/>function<sp/>also<sp/>returns<sp/>a<sp/>dictionary<sp/>containing</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information<sp/>about<sp/>the<sp/>inner<sp/>computation,<sp/>such<sp/>as<sp/>process<sp/>time,</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm<sp/>settings,<sp/>etc.</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>parameters<sp/>:<sp/>array_like<sp/>[`float`],<sp/>default=one</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>argument<sp/>is<sp/>relevant<sp/>if<sp/>`A`<sp/>is<sp/>a<sp/>type<sp/>of</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:class:`AffineMatrixFunction`.<sp/>By<sp/>this<sp/>argument,<sp/>multiple<sp/>inquiries,</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`(t_1,<sp/>\\dots,<sp/>t_q)`,<sp/>can<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>parameter<sp/>:math:`t`<sp/>of</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>linear<sp/>operator<sp/>:math:`\\mathbf{A}(t)`.<sp/>The<sp/>output<sp/>of<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>becomes<sp/>an<sp/>array<sp/>of<sp/>the<sp/>size<sp/>:math:`q`<sp/>corresponding<sp/>to<sp/>each<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>matrices<sp/>:math:`\\mathbf{A}(t_i)`.</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>min_num_samples<sp/>:<sp/>int,<sp/>default=10</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>minimum<sp/>number<sp/>of<sp/>Monte-Carlo<sp/>samples.<sp/>If<sp/>the<sp/>convergence<sp/>criterion</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>reached<sp/>before<sp/>finishing<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>iterations,<sp/>the</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>are<sp/>forced<sp/>to<sp/>continue<sp/>till<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>iterations</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>finished.<sp/>This<sp/>value<sp/>should<sp/>be<sp/>smaller<sp/>than</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``maximum_num_samples``.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>max_num_samples<sp/>:<sp/>int,<sp/>default=50</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>Monte-Carlo<sp/>samples.<sp/>If<sp/>the<sp/>convergence<sp/>criterion</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>not<sp/>reached<sp/>by<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>iterations,<sp/>the<sp/>iterations<sp/>are</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forced<sp/>to<sp/>stop.<sp/>This<sp/>value<sp/>should<sp/>be<sp/>larger<sp/>than</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``minimum_num_samples``.</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>error_atol<sp/>:<sp/>float,<sp/>default=None</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tolerance<sp/>of<sp/>the<sp/>absolute<sp/>error<sp/>of<sp/>convergence<sp/>of<sp/>the<sp/>output.<sp/>Once<sp/>the</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>of<sp/>convergence<sp/>reaches<sp/>``error_atol<sp/>+<sp/>error_rtol<sp/>*<sp/>output``,<sp/>the</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iteration<sp/>is<sp/>terminated.<sp/>If<sp/>the<sp/>convergence<sp/>criterion<sp/>is<sp/>not<sp/>met<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance,<sp/>then<sp/>the<sp/>iterations<sp/>continue<sp/>till<sp/>reaching</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``max_num_samples``<sp/>iterations.<sp/>If<sp/>`None`,<sp/>the<sp/>termination<sp/>criterion</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>does<sp/>not<sp/>depend<sp/>on<sp/>this<sp/>parameter.</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>error_rtol<sp/>:<sp/>float,<sp/>default=None</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tolerance<sp/>of<sp/>the<sp/>relative<sp/>error<sp/>of<sp/>convergence<sp/>of<sp/>the<sp/>output.<sp/>Once<sp/>the</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>of<sp/>convergence<sp/>reaches<sp/>``error_atol<sp/>+<sp/>error_rtol<sp/>*<sp/>output``,<sp/>the</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iteration<sp/>is<sp/>terminated.<sp/>If<sp/>the<sp/>convergence<sp/>criterion<sp/>is<sp/>not<sp/>met<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance,<sp/>then<sp/>the<sp/>iterations<sp/>continue<sp/>till<sp/>reaching</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``max_num_samples``<sp/>iterations.<sp/>If<sp/>`None`,<sp/>the<sp/>termination<sp/>criterion</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>does<sp/>not<sp/>depend<sp/>on<sp/>this<sp/>parameter.</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>confidence_level<sp/>:<sp/>float,<sp/>default=0.95</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Confidence<sp/>level<sp/>of<sp/>error,<sp/>which<sp/>is<sp/>a<sp/>number<sp/>between<sp/>`0`<sp/>and<sp/>`1`.<sp/>The</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>of<sp/>convergence<sp/>of<sp/>the<sp/>population<sp/>of<sp/>samples<sp/>is<sp/>defined<sp/>by<sp/>their</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standard<sp/>deviation<sp/>times<sp/>the<sp/>Z-score,<sp/>which<sp/>depends<sp/>on<sp/>the<sp/>confidence</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level.<sp/>See<sp/>notes<sp/>below<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>outlier_significance_level<sp/>:<sp/>float,<sp/>default=0.001</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>One<sp/>minus<sp/>the<sp/>confidence<sp/>level<sp/>of<sp/>the<sp/>uncertainty<sp/>of<sp/>the<sp/>outliers<sp/>of</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>output<sp/>samples.<sp/>This<sp/>is<sp/>a<sp/>number<sp/>between<sp/>`0`<sp/>and<sp/>`1`.</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>lanczos_degree<sp/>:<sp/>int,<sp/>default=20</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>Lanczos<sp/>recursive<sp/>iterations.<sp/>The<sp/>larger<sp/>Lanczos<sp/>degree</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leads<sp/>to<sp/>better<sp/>estimation.<sp/>The<sp/>computational<sp/>cost<sp/>quadratically</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increases<sp/>with<sp/>the<sp/>Lanczos<sp/>degree.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>lanczos_tol<sp/>:<sp/>float,<sp/>default=None</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>tolerance<sp/>to<sp/>stop<sp/>the<sp/>Lanczos<sp/>recursive<sp/>iterations<sp/>before</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>end<sp/>of<sp/>iterations<sp/>reached.<sp/>If<sp/>the<sp/>tolerance<sp/>is<sp/>not<sp/>met,<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>(total<sp/>of<sp/>``lanczos_degree``<sp/>iterations)<sp/>continue<sp/>till<sp/>the</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end.<sp/>If<sp/>set<sp/>to<sp/>`None`<sp/>(default<sp/>value),<sp/>the<sp/>machine&apos;<sp/>epsilon<sp/>precision</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>used.<sp/>The<sp/>machine&apos;s<sp/>epsilon<sp/>precision<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>32-bit,<sp/>machine<sp/>precision<sp/>is</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`2^{-23}<sp/>=<sp/>1.1920929<sp/>\\times<sp/>10^{-7}`.</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>64-bit,<sp/>machine<sp/>precision<sp/>is</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`2^{-52}<sp/>=<sp/>2.220446049250313<sp/>\\times<sp/>10^{-16}`,</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>128-bit,<sp/>machine<sp/>precision<sp/>is</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`2^{-63}<sp/>=<sp/>-1.084202172485504434<sp/>\\times<sp/>10^{-19}`.</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>orthogonalize<sp/>:<sp/>int,<sp/>default=0</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>to<sp/>re-orthogonalize<sp/>the<sp/>eigenvectors<sp/>during<sp/>Lanczos</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recursive<sp/>iterations.</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>set<sp/>to<sp/>`0`,<sp/>no<sp/>orthogonalization<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>set<sp/>to<sp/>a<sp/>negative<sp/>integer<sp/>or<sp/>an<sp/>integer<sp/>larger<sp/>than</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``lanczos_degree``,<sp/>a<sp/>newly<sp/>computed<sp/>eigenvector<sp/>is<sp/>orthogonalized</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>against<sp/>all<sp/>the<sp/>previous<sp/>eigenvectors<sp/>(also<sp/>known<sp/>as</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`full<sp/>reorthogonalization`).</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>set<sp/>to<sp/>a<sp/>positive<sp/>integer,<sp/>say<sp/>`q`,<sp/>but<sp/>less<sp/>than</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``lanczos_degree``,<sp/>the<sp/>newly<sp/>computed<sp/>eigenvector<sp/>is</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orthogonalized<sp/>against<sp/>a<sp/>window<sp/>of<sp/>last<sp/>`q`<sp/>previous<sp/>eigenvectors</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(known<sp/>as<sp/>`partial<sp/>reorthogonalization`).</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>num_threads<sp/>:<sp/>int,<sp/>default=0</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>processor<sp/>threads<sp/>to<sp/>employ<sp/>for<sp/>parallel<sp/>computation<sp/>on<sp/>CPU.</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>set<sp/>to<sp/>`0`<sp/>or<sp/>a<sp/>number<sp/>larger<sp/>than<sp/>the<sp/>available<sp/>number<sp/>of<sp/>threads,</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>threads<sp/>of<sp/>the<sp/>processor<sp/>are<sp/>used.<sp/>The<sp/>parallelization<sp/>is<sp/>performed</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>over<sp/>the<sp/>Monte-Carlo<sp/>iterations.</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>num_gpu_devices<sp/>:<sp/>int<sp/>default=0</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>GPU<sp/>devices<sp/>(if<sp/>available)<sp/>to<sp/>use<sp/>for<sp/>parallel<sp/>multi-GPU</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing.<sp/>If<sp/>set<sp/>to<sp/>`0`,<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>available<sp/>GPU<sp/>devices</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>used.<sp/>This<sp/>parameter<sp/>is<sp/>relevant<sp/>if<sp/>``gpu``<sp/>is<sp/>`True`.</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>gpu<sp/>:<sp/>bool,<sp/>default=False</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>`True`,<sp/>the<sp/>computations<sp/>are<sp/>performed<sp/>on<sp/>GPU<sp/>devices<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>devices<sp/>can<sp/>be<sp/>set<sp/>by<sp/>``num_gpu_devices``.<sp/>If<sp/>no<sp/>GPU<sp/>device</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>found,<sp/>it<sp/>raises<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>performing<sp/>`repetitive`<sp/>computation<sp/>on<sp/>the<sp/>same<sp/>matrix<sp/>on<sp/>GPU,</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>is<sp/>recommended<sp/>to<sp/>input<sp/>`A`<sp/>as<sp/>an<sp/>instance<sp/>of</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:class:`imate.Matrix`<sp/>class<sp/>instead<sp/>of<sp/>`numpy`<sp/>or<sp/>`scipy`<sp/>matrices.</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>examples<sp/>below<sp/>for<sp/>clarification.</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>verbose<sp/>:<sp/>bool,<sp/>default=False</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prints<sp/>extra<sp/>information<sp/>about<sp/>the<sp/>computations.</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>plot<sp/>:<sp/>bool,<sp/>default=False</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plots<sp/>convergence<sp/>of<sp/>samples.<sp/>For<sp/>this,<sp/>the<sp/>packages<sp/>`matplotlib`<sp/>and</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`seaborn`<sp/>should<sp/>be<sp/>installed.<sp/>If<sp/>no<sp/>display<sp/>is<sp/>available<sp/>(such<sp/>as</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>running<sp/>this<sp/>code<sp/>on<sp/>remote<sp/>machines),<sp/>the<sp/>plots<sp/>are<sp/>saved<sp/>as<sp/>an<sp/>`SVG`</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>in<sp/>the<sp/>current<sp/>directory.</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>traceinv<sp/>:<sp/>float<sp/>or<sp/>numpy.array</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Trace<sp/>of<sp/>inverse<sp/>of<sp/>matrix.<sp/>If<sp/>`A`<sp/>is<sp/>of<sp/>type</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:class:`imate.AffineMatrixFunction`<sp/>with<sp/>an<sp/>array<sp/>of<sp/>``parameters``,</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>the<sp/>output<sp/>is<sp/>an<sp/>array.</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>info<sp/>:<sp/>dict</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Only<sp/>if<sp/>``return_info``<sp/>is<sp/>`True`)<sp/>A<sp/>dictionary<sp/>of<sp/>information<sp/>with</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>following.</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``matrix``:</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``data_type``:<sp/>`str`,<sp/>{`float32`,<sp/>`float64`,<sp/>`float128`}.<sp/>Type<sp/>of</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>matrix<sp/>data.</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``gram``:<sp/>`bool`,<sp/>whether<sp/>the<sp/>matrix<sp/>`A`<sp/>or<sp/>its<sp/>Gramian<sp/>is</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>considered.</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``exponent``:<sp/>`float`,<sp/>the<sp/>exponent<sp/>`p`<sp/>in</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`\\mathbf{A}^{-p}`.</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``size``:<sp/>(int)<sp/>The<sp/>size<sp/>of<sp/>matrix<sp/>`A`.</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``sparse``:<sp/>`bool`,<sp/>whether<sp/>the<sp/>matrix<sp/>`A`<sp/>is<sp/>sparse<sp/>or<sp/>dense.</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``nnz``:<sp/>`int`,<sp/>if<sp/>`A`<sp/>is<sp/>sparse,<sp/>the<sp/>number<sp/>of<sp/>non-zero<sp/>elements</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>`A`.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``density``:<sp/>`float`,<sp/>if<sp/>`A`<sp/>is<sp/>sparse,<sp/>the<sp/>density<sp/>of<sp/>`A`,<sp/>which</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>the<sp/>`nnz`<sp/>divided<sp/>by<sp/>size<sp/>squared.</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``num_inquiries``:<sp/>`int`,<sp/>the<sp/>size<sp/>of<sp/>inquiries<sp/>of<sp/>each<sp/>parameter</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>linear<sp/>operator<sp/>`A`.<sp/>If<sp/>`A`<sp/>is<sp/>a<sp/>matrix,<sp/>this<sp/>is<sp/>always</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`1`.<sp/>If<sp/>`A`<sp/>is<sp/>a<sp/>type<sp/>of<sp/>:class:`AffineMatrixFunction`,<sp/>this</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>is<sp/>the<sp/>number<sp/>of<sp/>:math:`t_i`<sp/>parameters.</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``num_operator_parameters``:<sp/>`int`,<sp/>number<sp/>of<sp/>parameters<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>`A`.<sp/>If<sp/>`A`<sp/>a<sp/>type<sp/>of<sp/>:class:`AffineMatrixFunction`,</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>this<sp/>value<sp/>is<sp/>`1`<sp/>corresponding<sp/>to<sp/>one<sp/>parameter<sp/>:math:`t`</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>affine<sp/>function<sp/>`t<sp/>\\mapsto<sp/>\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{B}`.</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``parameters``:<sp/>`list`<sp/>[`float`],<sp/>the<sp/>parameters<sp/>of<sp/>the<sp/>linear</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>`A`.</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``convergence``:</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``all_converged``:<sp/>`bool`,<sp/>whether<sp/>the<sp/>Monte-Carlo<sp/>sampling</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converged<sp/>for<sp/>all<sp/>requested<sp/>parameters<sp/>:math:`t_i`.<sp/>If<sp/>all</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries<sp/>of<sp/>the<sp/>array<sp/>for<sp/>``converged``<sp/>is<sp/>`True``,<sp/>then<sp/>this</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>is<sp/>also<sp/>``True``.</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``converged``:<sp/>`array`<sp/>[`bool`],<sp/>whether<sp/>the<sp/>Monte-Carlo<sp/>sampling</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converged<sp/>for<sp/>each<sp/>of<sp/>the<sp/>requested<sp/>parameters<sp/>:math:`t_i`.</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Convergence<sp/>is<sp/>defined<sp/>based<sp/>on<sp/>a<sp/>termination<sp/>criterion,<sp/>such</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>absolute<sp/>or<sp/>relative<sp/>error.<sp/>If<sp/>the<sp/>iterations<sp/>terminated<sp/>due</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>reaching<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>samples,<sp/>this<sp/>value<sp/>is<sp/>`False`.</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``min_num_samples``:<sp/>`int`,<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>Monte-Carlo</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations.</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``max_num_samples``:<sp/>`int`,<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>Monte-Carlo</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations.</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``num_outliers``:<sp/>`int`,<sp/>number<sp/>of<sp/>outliers<sp/>found<sp/>during<sp/>search</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>outliers<sp/>among<sp/>the<sp/>array<sp/>of<sp/>output.</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``num_samples_used``:<sp/>`int`,<sp/>number<sp/>of<sp/>Monte-Carlo<sp/>samples<sp/>used</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>produce<sp/>the<sp/>output.<sp/>This<sp/>is<sp/>the<sp/>total<sp/>number<sp/>of<sp/>iterations</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minus<sp/>the<sp/>number<sp/>of<sp/>outliers.</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``samples``:<sp/>`array`<sp/>[`float`],<sp/>an<sp/>array<sp/>of<sp/>the<sp/>size</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`max_num_samples`.<sp/>The<sp/>first<sp/>few<sp/>entries<sp/>(`num_samples_used`)<sp/>of</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>array<sp/>are<sp/>the<sp/>output<sp/>results<sp/>of<sp/>the<sp/>Monte-Carlo<sp/>sampling.</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>average<sp/>of<sp/>these<sp/>samples<sp/>is<sp/>the<sp/>final<sp/>result.<sp/>The<sp/>rest<sp/>of</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>array<sp/>is<sp/>`nan`.</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``samples_mean``:<sp/>`float`,<sp/>mean<sp/>of<sp/>the<sp/>`samples`<sp/>array,<sp/>excluding</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>`nan`<sp/>values.</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``samples_processed_order``:<sp/>`array`<sp/>[`int`],<sp/>in<sp/>parallel</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing,<sp/>samples<sp/>are<sp/>processed<sp/>in<sp/>non-sequential<sp/>order.<sp/>This</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array,<sp/>which<sp/>has<sp/>the<sp/>same<sp/>size<sp/>as<sp/>`samples`,<sp/>keeps<sp/>track<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order<sp/>in<sp/>which<sp/>each<sp/>sample<sp/>is<sp/>processed.</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``error``:</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``absolute_error``:<sp/>`float`,<sp/>the<sp/>absolute<sp/>error<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergence<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``confidence_level``:<sp/>`float`,<sp/>the<sp/>confidence<sp/>level<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculate<sp/>the<sp/>error<sp/>from<sp/>standard<sp/>deviation<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``error_atol``:<sp/>`float`,<sp/>the<sp/>tolerance<sp/>of<sp/>absolute<sp/>error<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergence<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``error_rtol``:<sp/>`float`,<sp/>the<sp/>tolerance<sp/>of<sp/>relative<sp/>error<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergence<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``outlier_significance_level``:<sp/>`float`,<sp/>the<sp/>significance<sp/>level</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>to<sp/>determine<sp/>the<sp/>outliers<sp/>in<sp/>samples.</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``relative_error``:<sp/>`float`,<sp/>the<sp/>relative<sp/>error<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergence<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``device``:</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``num_cpu_threads``:<sp/>`int`,<sp/>number<sp/>of<sp/>CPU<sp/>threads<sp/>used<sp/>in<sp/>shared</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>parallel<sp/>processing.</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``num_gpu_devices``:<sp/>`int`,<sp/>number<sp/>of<sp/>GPU<sp/>devices<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi-GPU<sp/>(GPU<sp/>farm)<sp/>computation.</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``num_gpu_multiprocessors``:<sp/>`int`,<sp/>number<sp/>of<sp/>GPU</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi-processors.</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``num_gpu_threads_per_multiprocessor``:<sp/>`int`,<sp/>number<sp/>of<sp/>GPU</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threads<sp/>on<sp/>each<sp/>GPU<sp/>multi-processor.</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``time``:</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``tot_wall_time``:<sp/>`float`,<sp/>total<sp/>elapsed<sp/>time<sp/>of<sp/>computation.</highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``alg_wall_time``:<sp/>`float`,<sp/>elapsed<sp/>time<sp/>of<sp/>computation<sp/>during</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>the<sp/>algorithm<sp/>execution.</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``cpu_proc_time``:<sp/>`float`,<sp/>the<sp/>CPU<sp/>processing<sp/>time<sp/>of</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computation.</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``solver``:</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``version``:<sp/>`str`,<sp/>version<sp/>of<sp/>imate.</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``method``:<sp/>&apos;slq&apos;.</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``lanczos_degree``:<sp/>`bool`,<sp/>Lanczos<sp/>degree.</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``lanczos_tol``:<sp/>`float`,<sp/>Lanczos<sp/>tolerance.</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``orthogonalize``:<sp/>`int`,<sp/>orthogonalization<sp/>flag.</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>ImportError</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>package<sp/>has<sp/>not<sp/>been<sp/>compiled<sp/>with<sp/>GPU<sp/>support,<sp/>but<sp/>``gpu``<sp/>is</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>to<sp/>`True`.<sp/>To<sp/>resolve<sp/>the<sp/>issue,<sp/>set<sp/>``gpu``<sp/>to<sp/>`False`<sp/>to<sp/>be<sp/>able</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>use<sp/>the<sp/>existing<sp/>installation.<sp/>Alternatively,<sp/><sp/>export<sp/>the</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>environment<sp/>variable<sp/>``USE_CUDA=1``<sp/>and<sp/>recompile<sp/>the<sp/>source<sp/>code<sp/>of</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>package.</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>See<sp/>Also</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>imate.logdet</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>imate.trace</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>imate.schatten</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Computational<sp/>Complexity:**</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>method<sp/>uses<sp/>stochastic<sp/>Lanczos<sp/>quadrature<sp/>(SLQ),<sp/>which<sp/>is<sp/>a<sp/>randomized</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>algorithm.<sp/>The<sp/>computational<sp/>complexity<sp/>of<sp/>this<sp/>method<sp/>is</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathcal{O}((\\rho<sp/>n^2<sp/>+<sp/>n<sp/>l)<sp/>s<sp/>l),</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>where<sp/>:math:`n`<sp/>is<sp/>the<sp/>matrix<sp/>size,<sp/>:math:`\\rho`<sp/>is<sp/>the<sp/>density<sp/>of</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>sparse<sp/>matrix<sp/>(for<sp/>dense<sp/>matrix,<sp/>:math:`\\rho=1`),<sp/>:math:`l`<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Lanczos<sp/>degree<sp/>(set<sp/>with<sp/>``lanczos_degree``),<sp/>and<sp/>:math:`s`<sp/>is<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>samples<sp/>(set<sp/>with<sp/>``min_num_samples``<sp/>and<sp/>``max_num_samples``).</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>method<sp/>can<sp/>be<sp/>used<sp/>on<sp/>very<sp/>large<sp/>matrices<sp/>(:math:`n<sp/>&gt;<sp/>2^{12}`).<sp/>The</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>solution<sp/>is<sp/>an<sp/>approximation.</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Input<sp/>Matrix:**</highlight></codeline>
<codeline lineno="355"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>input<sp/>`A`<sp/>can<sp/>be<sp/>either<sp/>of:</highlight></codeline>
<codeline lineno="357"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>A<sp/>matrix,<sp/>such<sp/>as<sp/>`numpy.ndarray`,<sp/>or<sp/>`scipy.sparse`.</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>A<sp/>linear<sp/>operator<sp/>representing<sp/>a<sp/>matrix<sp/>using<sp/>:class:`imate.Matrix`.</highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>A<sp/>linear<sp/>operator<sp/>representing<sp/>a<sp/>one-parameter<sp/>family<sp/>of<sp/>an<sp/>affine<sp/>matrix</highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>:math:`t<sp/>\\mapsto<sp/>\\mathbf{A}<sp/>+<sp/>t\\mathbf{B}`<sp/>using</highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>:class:`imate.AffineMatrixFunction`.</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Output:**</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>output<sp/>is<sp/>a<sp/>scalar.<sp/>However,<sp/>if<sp/>`A`<sp/>is<sp/>the<sp/>linear<sp/>operator</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:math:`\\mathbf{A}(t)<sp/>=<sp/>\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{B}`<sp/>where<sp/>:math:`t`<sp/>is</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>given<sp/>as<sp/>the<sp/>tuple<sp/>:math:`t<sp/>=<sp/>(t_1,<sp/>\\dots,<sp/>t_q)`,<sp/>then<sp/>the<sp/>output<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>is<sp/>an<sp/>array<sp/>of<sp/>size<sp/>:math:`q`<sp/>corresponding<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>trace<sp/>of<sp/>each<sp/>:math:`\\mathbf{A}(t_i)`.</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>`A`<sp/>represents</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`\\mathbf{A}(t)<sp/>=<sp/>\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{I}`,<sp/>where</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`\\mathbf{I}`<sp/>is<sp/>the<sp/>identity<sp/>matrix,<sp/>and<sp/>:math:`t`<sp/>is<sp/>given<sp/>by</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>tuple<sp/>:math:`t<sp/>=<sp/>(t_1,<sp/>\\dots,<sp/>t_q)`,<sp/>the<sp/>computational<sp/>cost<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>output<sp/>of<sp/>size<sp/>`q`<sp/>is<sp/>the<sp/>same<sp/>as<sp/>computing<sp/>for<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:math:`t_i`.<sp/>Namely,<sp/>the<sp/>trace<sp/>of<sp/>only<sp/>:math:`\\mathbf{A}(t_1)`<sp/>is</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computed,<sp/>and<sp/>the<sp/>trace<sp/>of<sp/>the<sp/>rest<sp/>of<sp/>:math:`i=2,<sp/>\\dots,<sp/>q`<sp/>are</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obtained<sp/>from<sp/>the<sp/>result<sp/>of<sp/>:math:`t_1`<sp/>immediately.</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Algorithm:**</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>``gram``<sp/>is<sp/>`False`,<sp/>the<sp/>Lanczos<sp/>tri-diagonalization<sp/>method<sp/>is</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>used.<sp/>This<sp/>method<sp/>requires<sp/>only<sp/>matrix-vector<sp/>multiplication.<sp/>If</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``gram``<sp/>is<sp/>`True`,<sp/>the<sp/>Golub-Kahn<sp/>bi-diagonalization<sp/>method<sp/>is<sp/>used.<sp/>This</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>method<sp/>requires<sp/>both<sp/>matrix-vector<sp/>multiplication<sp/>and<sp/>transposed-matrix</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vector<sp/>multiplications.</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Convergence<sp/>criterion:**</highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Let<sp/>:math:`n_{\\min}`<sp/>and<sp/>:math:`n_{\\max}`<sp/>be<sp/>the<sp/>minimum<sp/>and<sp/>maximum</highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>number<sp/>of<sp/>iterations<sp/>respectively<sp/>defined<sp/>by<sp/>``min_num_samples``<sp/>and</highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``max_num_samples``.<sp/>The<sp/>iterations<sp/>terminate<sp/>at</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:math:`n_{\\min}<sp/>\\leq<sp/>i<sp/>\\leq<sp/>n_{\\max}`<sp/>where<sp/>:math:`i`<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>iteration<sp/>counter.<sp/>The<sp/>iterations<sp/>stop<sp/>earlier<sp/>at<sp/>:math:`i<sp/>&lt;<sp/>n_{\\max}`<sp/>if</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>convergence<sp/>error<sp/>of<sp/>the<sp/>mean<sp/>of<sp/>the<sp/>samples<sp/>is<sp/>satisfied,<sp/>as<sp/>follows.</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Suppose<sp/>:math:`s(j)`<sp/>and<sp/>:math:`\\sigma(i)`<sp/>are<sp/>respectively<sp/>the<sp/>mean<sp/>and</highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>standard<sp/>deviation<sp/>of<sp/>samples<sp/>after<sp/>:math:`j`<sp/>iterations.<sp/>The<sp/>error<sp/>of</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>convergence,<sp/>:math:`e(j)`,<sp/>is<sp/>defined<sp/>by</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e(j)<sp/>=<sp/>\\frac{\\sigma(j)}{\\sqrt{j}}<sp/>Z</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>where<sp/>:math:`Z`<sp/>is<sp/>the<sp/>Z-score<sp/>defined<sp/>by</highlight></codeline>
<codeline lineno="409"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="411"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="412"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z<sp/>=<sp/>\\sqrt{2}<sp/>\\mathrm{erf}^{-1}(\\phi).</highlight></codeline>
<codeline lineno="413"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="414"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>above,<sp/>:math:`\\phi`<sp/>is<sp/>the<sp/>confidence<sp/>level<sp/>and<sp/>set<sp/>by</highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``confidence_level``<sp/>argument,<sp/>and<sp/>:math:`\\mathrm{erf}^{-1}`<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inverse<sp/>error<sp/>function.<sp/>A<sp/>confidence<sp/>level<sp/>of<sp/>95%,<sp/>for<sp/>instance,<sp/>means<sp/>that</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>Z-score<sp/>is<sp/>1.96,<sp/>which<sp/>means<sp/>the<sp/>confidence<sp/>interval<sp/>is</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:math:`\\pm<sp/>1.96<sp/>\\sigma`.</highlight></codeline>
<codeline lineno="419"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>termination<sp/>criterion<sp/>is</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="422"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="423"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e(j)<sp/>&lt;<sp/>\\epsilon_a<sp/>+<sp/>s(j)<sp/>\\epsilon_r,</highlight></codeline>
<codeline lineno="425"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>where<sp/>:math:`\\epsilon_{a}`<sp/>and<sp/>:math:`\\epsilon_r`<sp/>are<sp/>the<sp/>absolute<sp/>and</highlight></codeline>
<codeline lineno="427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>relative<sp/>error<sp/>tolerances<sp/>respectively,<sp/>and<sp/>they<sp/>are<sp/>set<sp/>by<sp/>``error_atol``</highlight></codeline>
<codeline lineno="428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>``error_rtol``.</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Convergence<sp/>for<sp/>the<sp/>case<sp/>of<sp/>multiple<sp/>parameters:**</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="432"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>When<sp/>`A`<sp/>is<sp/>a<sp/>type<sp/>of<sp/>:class:`imate.AffineMatrixFunction`<sp/>representing<sp/>the</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>affine<sp/>matrix<sp/>function<sp/>:math:`\\mathbf{A}(t)<sp/>=<sp/>\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{B}`</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>if<sp/>multiple<sp/>parameters<sp/>:math:`t_i`,<sp/>:math:`i=1,\\dots,<sp/>q`<sp/>are<sp/>passed<sp/>to</highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this<sp/>function<sp/>through<sp/>``parameters``<sp/>argument,<sp/>the<sp/>convergence<sp/>criterion</highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>has<sp/>to<sp/>be<sp/>satisfied<sp/>for<sp/>each<sp/>of<sp/>:math:`\\mathbf{A}(t_i)`.<sp/>Specifically,<sp/>the</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>iterations<sp/>are<sp/>terminated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="438"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>If<sp/>:math:`\\mathbf{B}`<sp/>is<sp/>the<sp/>identity<sp/>matrix,<sp/>iterations<sp/>for<sp/>all</highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>:math:`\\mathbf{A}(t_i)`<sp/>continue<sp/>till<sp/>the<sp/>convergence<sp/>criterion<sp/>for</highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>*all*<sp/>:math:`t_i`<sp/>are<sp/>satisfied.<sp/>That<sp/>is,<sp/>even<sp/>if<sp/>:math:`t=t_i`<sp/>is</highlight></codeline>
<codeline lineno="442"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>converged<sp/>but<sp/>:math:`t=t_j`<sp/>has<sp/>not<sp/>converged<sp/>yet,<sp/>the<sp/>iterations<sp/>for</highlight></codeline>
<codeline lineno="443"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>:math:`t=t_i`<sp/>will<sp/>continue.</highlight></codeline>
<codeline lineno="444"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="445"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>If<sp/>:math:`\\mathbf{B}`<sp/>is<sp/>not<sp/>the<sp/>identity<sp/>matrix,<sp/>the<sp/>iterations<sp/>for</highlight></codeline>
<codeline lineno="446"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>of<sp/>:math:`t_i`<sp/>are<sp/>independent.<sp/>That<sp/>is,<sp/>if<sp/>:math:`t=t_i`<sp/>converges,</highlight></codeline>
<codeline lineno="447"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>iterations<sp/>for<sp/>that<sp/>parameter<sp/>will<sp/>stop<sp/>regardless<sp/>of<sp/>the<sp/>convergence</highlight></codeline>
<codeline lineno="448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>of<sp/>other<sp/>parameters.</highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Plotting:**</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>``plot``<sp/>is<sp/>set<sp/>to<sp/>`True`,<sp/>it<sp/>plots<sp/>the<sp/>convergence<sp/>of<sp/>samples<sp/>and<sp/>their</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>relative<sp/>error.</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>If<sp/>no<sp/>graphical<sp/>backend<sp/>exists<sp/>(such<sp/>as<sp/>running<sp/>the<sp/>code<sp/>on<sp/>a<sp/>remote</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>server<sp/>or<sp/>manually<sp/>disabling<sp/>the<sp/>X11<sp/>backend),<sp/>the<sp/>plot<sp/>will<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>shown,<sp/>rather,<sp/>it<sp/>will<sp/>be<sp/>saved<sp/>as<sp/>an<sp/>``svg``<sp/>file<sp/>in<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>directory.</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>executable<sp/>``latex``<sp/>is<sp/>available<sp/>on<sp/>``PATH``,<sp/>the<sp/>plot<sp/>is</highlight></codeline>
<codeline lineno="460"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>rendered<sp/>using<sp/>:math:`\\rm\\LaTeX`<sp/>and<sp/>it<sp/>may<sp/>take<sp/>slightly<sp/>longer<sp/>to</highlight></codeline>
<codeline lineno="461"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>produce<sp/>the<sp/>plot.</highlight></codeline>
<codeline lineno="462"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>If<sp/>:math:`\\rm\\LaTeX`<sp/>is<sp/>not<sp/>installed,<sp/>it<sp/>uses<sp/>any<sp/>available<sp/>San-Serif</highlight></codeline>
<codeline lineno="463"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>to<sp/>render<sp/>the<sp/>plot.</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>To<sp/>manually<sp/>disable<sp/>interactive<sp/>plot<sp/>display<sp/>and<sp/>save<sp/>the<sp/>plot<sp/>as</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``svg``<sp/>instead,<sp/>add<sp/>the<sp/>following<sp/>at<sp/>the<sp/>very<sp/>beginning<sp/>of<sp/>your<sp/>code</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>before<sp/>importing<sp/>:mod:`imate`:</highlight></codeline>
<codeline lineno="468"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="469"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="470"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="471"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>import<sp/>os</highlight></codeline>
<codeline lineno="472"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>os.environ[&apos;IMATE_NO_DISPLAY&apos;]<sp/>=<sp/>&apos;True&apos;</highlight></codeline>
<codeline lineno="473"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="474"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>References</highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="476"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>`Ubaru,<sp/>S.,<sp/>Chen,<sp/>J.,<sp/>and<sp/>Saad,<sp/>Y.<sp/>(2017)</highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;https://www-users.cs.umn.edu/~saad/PDF/ys-2016-04.pdf&gt;`_,</highlight></codeline>
<codeline lineno="479"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>Fast<sp/>Estimation<sp/>of<sp/>:math:`\\mathrm{tr}(F(A))`<sp/>Via<sp/>Stochastic<sp/>Lanczos</highlight></codeline>
<codeline lineno="480"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>Quadrature,<sp/>SIAM<sp/>J.<sp/>Matrix<sp/>Anal.<sp/>Appl.,<sp/>38(4),<sp/>1075-1099.</highlight></codeline>
<codeline lineno="481"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Examples</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Symmetric<sp/>Input<sp/>Matrix:**</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="487"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>`slq`<sp/>method<sp/>requires<sp/>the<sp/>input<sp/>matrix<sp/>of<sp/>:func:`imate.traceinv`</highlight></codeline>
<codeline lineno="488"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>to<sp/>be<sp/>symmetric<sp/>when<sp/>``gram``<sp/>is<sp/>`False`.<sp/>For<sp/>the<sp/>first<sp/>example,</highlight></codeline>
<codeline lineno="489"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>generate<sp/>a<sp/>symmetric<sp/>sample<sp/>matrix<sp/>using<sp/>:func:`imate.toeplitz`<sp/>function<sp/>as</highlight></codeline>
<codeline lineno="490"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>follows:</highlight></codeline>
<codeline lineno="491"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="492"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="493"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="494"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Import<sp/>packages</highlight></codeline>
<codeline lineno="495"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>imate<sp/>import<sp/>toeplitz</highlight></codeline>
<codeline lineno="496"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="497"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Generate<sp/>a<sp/>symmetric<sp/>matrix<sp/>by<sp/>setting<sp/>gram=True.</highlight></codeline>
<codeline lineno="498"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>A<sp/>=<sp/>toeplitz(2,<sp/>1,<sp/>size=100,<sp/>gram=True)</highlight></codeline>
<codeline lineno="499"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="500"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>above,<sp/>by<sp/>passing<sp/>``gram=True``<sp/>to<sp/>:func:`imate.toeplitz`<sp/>function,</highlight></codeline>
<codeline lineno="501"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>Gramian<sp/>of<sp/>the<sp/>Toeplitz<sp/>matrix<sp/>is<sp/>returned,<sp/>which<sp/>is<sp/>symmetric.<sp/>Compute</highlight></codeline>
<codeline lineno="502"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>trace<sp/>of<sp/>:math:`\\mathbf{A}^{-2.5}`:</highlight></codeline>
<codeline lineno="503"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="504"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="505"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="506"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Import<sp/>packages</highlight></codeline>
<codeline lineno="507"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>imate<sp/>import<sp/>traceinv</highlight></codeline>
<codeline lineno="508"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="509"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Compute<sp/>trace</highlight></codeline>
<codeline lineno="510"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>traceinv(A,<sp/>gram=False,<sp/>p=2.5,<sp/>method=&apos;slq&apos;)</highlight></codeline>
<codeline lineno="511"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18.527409020384308</highlight></codeline>
<codeline lineno="512"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="513"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>note:</highlight></codeline>
<codeline lineno="514"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Since<sp/>`slq`<sp/>is<sp/>a<sp/>stochastic<sp/>method,<sp/>the<sp/>above<sp/>result<sp/>slightly</highlight></codeline>
<codeline lineno="516"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>differs<sp/>after<sp/>each<sp/>run.</highlight></codeline>
<codeline lineno="517"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="518"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Gramian<sp/>Matrix:**</highlight></codeline>
<codeline lineno="519"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Passing<sp/>``gram=True``<sp/>to<sp/>:func:`imate.traceinv`<sp/>function<sp/>uses<sp/>the<sp/>Gramian</highlight></codeline>
<codeline lineno="521"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>input<sp/>matrix.<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>input<sp/>matrix<sp/>can<sp/>be<sp/>non-symmetric.</highlight></codeline>
<codeline lineno="522"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>next<sp/>example,<sp/>generate<sp/>a<sp/>non-symmetric<sp/>matrix,<sp/>:math:`\\mathbf{B}`,</highlight></codeline>
<codeline lineno="523"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>then<sp/>compute<sp/>the<sp/>trace<sp/>of</highlight></codeline>
<codeline lineno="524"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:math:`(\\mathbf{B}^{\\intercal}<sp/>\\mathbf{B})^{-2.5}`.</highlight></codeline>
<codeline lineno="525"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="526"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="527"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="528"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Generate<sp/>a<sp/>non-symmetric<sp/>matrix<sp/>by<sp/>setting<sp/>gram=False</highlight></codeline>
<codeline lineno="529"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>B<sp/>=<sp/>toeplitz(2,<sp/>1,<sp/>size=100,<sp/>gram=False)</highlight></codeline>
<codeline lineno="530"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="531"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Compute<sp/>the<sp/>trace<sp/>of<sp/>Gramian<sp/>by<sp/>passing<sp/>gram=True</highlight></codeline>
<codeline lineno="532"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>traceinv(B,<sp/>gram=True,<sp/>p=2.5,<sp/>method=&apos;slq&apos;)</highlight></codeline>
<codeline lineno="533"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18.26725627960205</highlight></codeline>
<codeline lineno="534"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="535"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>result<sp/>of<sp/>the<sp/>two<sp/>examples<sp/>in<sp/>the<sp/>above<sp/>are<sp/>the<sp/>similar<sp/>since</highlight></codeline>
<codeline lineno="536"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>input<sp/>matrix<sp/>:math:`\\mathbf{A}`<sp/>of<sp/>the<sp/>first<sp/>example<sp/>is<sp/>the<sp/>Gramian<sp/>of</highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>input<sp/>matrix<sp/>:math:`\\mathbf{B}`<sp/>in<sp/>the<sp/>second<sp/>example,<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:math:`\\mathbf{A}<sp/>=<sp/>\\mathbf{B}^{\\intercal}<sp/>\\mathbf{B}`.<sp/>Since<sp/>the</highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>second<sp/>example<sp/>uses<sp/>the<sp/>Gramian<sp/>of<sp/>the<sp/>input<sp/>matrix,<sp/>it<sp/>computes<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>quantity<sp/>as<sp/>the<sp/>first<sp/>example.</highlight></codeline>
<codeline lineno="541"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="542"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Verbose<sp/>output:**</highlight></codeline>
<codeline lineno="543"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="544"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>By<sp/>setting<sp/>``verbose``<sp/>to<sp/>`True`,<sp/>useful<sp/>info<sp/>about<sp/>the<sp/>process<sp/>is</highlight></codeline>
<codeline lineno="545"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>printed.</highlight></codeline>
<codeline lineno="546"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="547"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>literalinclude::<sp/>../_static/data/imate.traceinv.slq-verbose-1.txt</highlight></codeline>
<codeline lineno="548"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:language:<sp/>python</highlight></codeline>
<codeline lineno="549"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="550"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Output<sp/>information:**</highlight></codeline>
<codeline lineno="551"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="552"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Print<sp/>information<sp/>about<sp/>the<sp/>inner<sp/>computation:</highlight></codeline>
<codeline lineno="553"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="554"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="555"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="556"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>tr,<sp/>info<sp/>=<sp/>traceinv(A,<sp/>method=&apos;slq&apos;,<sp/>return_info=True)</highlight></codeline>
<codeline lineno="557"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>print(tr)</highlight></codeline>
<codeline lineno="558"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32.708445808330886</highlight></codeline>
<codeline lineno="559"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="560"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Print<sp/>dictionary<sp/>neatly<sp/>using<sp/>pprint</highlight></codeline>
<codeline lineno="561"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>pprint<sp/>import<sp/>pprint</highlight></codeline>
<codeline lineno="562"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>pprint(info)</highlight></codeline>
<codeline lineno="563"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;matrix&apos;:<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;data_type&apos;:<sp/>b&apos;float64&apos;,</highlight></codeline>
<codeline lineno="566"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;density&apos;:<sp/>0.0298,</highlight></codeline>
<codeline lineno="567"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;exponent&apos;:<sp/>1,</highlight></codeline>
<codeline lineno="568"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;gram&apos;:<sp/>False,</highlight></codeline>
<codeline lineno="569"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;nnz&apos;:<sp/>298,</highlight></codeline>
<codeline lineno="570"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;num_inquiries&apos;:<sp/>1,</highlight></codeline>
<codeline lineno="571"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;num_operator_parameters&apos;:<sp/>0,</highlight></codeline>
<codeline lineno="572"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;parameters&apos;:<sp/>None,</highlight></codeline>
<codeline lineno="573"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;size&apos;:<sp/>100,</highlight></codeline>
<codeline lineno="574"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;sparse&apos;:<sp/>True</highlight></codeline>
<codeline lineno="575"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="576"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;convergence&apos;:<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;all_converged&apos;:<sp/>False,</highlight></codeline>
<codeline lineno="578"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;converged&apos;:<sp/>False,</highlight></codeline>
<codeline lineno="579"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;max_num_samples&apos;:<sp/>50,</highlight></codeline>
<codeline lineno="580"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;min_num_samples&apos;:<sp/>10,</highlight></codeline>
<codeline lineno="581"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;num_outliers&apos;:<sp/>0,</highlight></codeline>
<codeline lineno="582"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;num_samples_used&apos;:<sp/>50,</highlight></codeline>
<codeline lineno="583"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;samples&apos;:<sp/>array([33.24133019,<sp/>...,<sp/>33.20591227]),</highlight></codeline>
<codeline lineno="584"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;samples_mean&apos;:<sp/>32.708445808330886,</highlight></codeline>
<codeline lineno="585"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;samples_processed_order&apos;:<sp/>array([<sp/>0,<sp/>...,<sp/>49])</highlight></codeline>
<codeline lineno="586"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="587"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;error&apos;:<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;absolute_error&apos;:<sp/>1.0957187950411644,</highlight></codeline>
<codeline lineno="589"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;confidence_level&apos;:<sp/>0.95,</highlight></codeline>
<codeline lineno="590"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;error_atol&apos;:<sp/>0.0,</highlight></codeline>
<codeline lineno="591"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;error_rtol&apos;:<sp/>0.01,</highlight></codeline>
<codeline lineno="592"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;outlier_significance_level&apos;:<sp/>0.001,</highlight></codeline>
<codeline lineno="593"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;relative_error&apos;:<sp/>0.03349956770988132</highlight></codeline>
<codeline lineno="594"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="595"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;solver&apos;:<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;lanczos_degree&apos;:<sp/>20,</highlight></codeline>
<codeline lineno="597"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;lanczos_tol&apos;:<sp/>2.220446049250313e-16,</highlight></codeline>
<codeline lineno="598"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;method&apos;:<sp/>&apos;slq&apos;,</highlight></codeline>
<codeline lineno="599"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;orthogonalize&apos;:<sp/>0,</highlight></codeline>
<codeline lineno="600"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;version&apos;:<sp/>&apos;0.15.0&apos;</highlight></codeline>
<codeline lineno="601"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="602"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;device&apos;:<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;num_cpu_threads&apos;:<sp/>8,</highlight></codeline>
<codeline lineno="604"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;num_gpu_devices&apos;:<sp/>0,</highlight></codeline>
<codeline lineno="605"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;num_gpu_multiprocessors&apos;:<sp/>0,</highlight></codeline>
<codeline lineno="606"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;num_gpu_threads_per_multiprocessor&apos;:<sp/>0</highlight></codeline>
<codeline lineno="607"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="608"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;time&apos;:<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;alg_wall_time&apos;:<sp/>0.005590200424194336,</highlight></codeline>
<codeline lineno="610"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;cpu_proc_time&apos;:<sp/>0.03228565200000011,</highlight></codeline>
<codeline lineno="611"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;tot_wall_time&apos;:<sp/>0.0057561639696359634</highlight></codeline>
<codeline lineno="612"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="615"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Large<sp/>matrix:**</highlight></codeline>
<codeline lineno="616"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Compute<sp/>the<sp/>trace<sp/>of<sp/>:math:`\\mathbf{A}^{-1}`<sp/>for<sp/>a<sp/>very<sp/>large<sp/>sparse</highlight></codeline>
<codeline lineno="618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>matrix<sp/>using<sp/>at<sp/>least<sp/>`100`<sp/>samples.<sp/>Note<sp/>that<sp/>the<sp/>matrix</highlight></codeline>
<codeline lineno="619"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:math:`\\mathbf{A}`<sp/>should<sp/>be<sp/>symmetric.</highlight></codeline>
<codeline lineno="620"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="621"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="622"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:emphasize-lines:<sp/>7,<sp/>8</highlight></codeline>
<codeline lineno="623"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="624"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Generate<sp/>a<sp/>matrix<sp/>of<sp/>size<sp/>one<sp/>million.<sp/>Set<sp/>gram=True<sp/>to<sp/>create</highlight></codeline>
<codeline lineno="625"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>a<sp/>symmetric<sp/>matrix<sp/>needed<sp/>for<sp/>slq<sp/>method.</highlight></codeline>
<codeline lineno="626"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>A<sp/>=<sp/>toeplitz(2,<sp/>1,<sp/>size=1000000,<sp/>gram=True)</highlight></codeline>
<codeline lineno="627"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="628"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Approximate<sp/>trace<sp/>using<sp/>stochastic<sp/>Lanczos<sp/>quadrature</highlight></codeline>
<codeline lineno="629"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>with<sp/>at<sp/>least<sp/>100<sp/>Monte-Carlo<sp/>sampling</highlight></codeline>
<codeline lineno="630"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>tr,<sp/>info<sp/>=<sp/>traceinv(A,<sp/>method=&apos;slq&apos;,<sp/>min_num_samples=100,</highlight></codeline>
<codeline lineno="631"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_num_samples=200,<sp/>return_info=True)</highlight></codeline>
<codeline lineno="632"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>print(tr)</highlight></codeline>
<codeline lineno="633"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>333273.2654698325</highlight></codeline>
<codeline lineno="634"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="635"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Find<sp/>the<sp/>time<sp/>it<sp/>took<sp/>to<sp/>compute<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="636"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>print(info[&apos;time&apos;])</highlight></codeline>
<codeline lineno="637"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;tot_wall_time&apos;:<sp/>15.991112960968167,</highlight></codeline>
<codeline lineno="639"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;alg_wall_time&apos;:<sp/>15.972427368164062,</highlight></codeline>
<codeline lineno="640"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;cpu_proc_time&apos;:<sp/>117.7014269</highlight></codeline>
<codeline lineno="641"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="643"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Compare<sp/>the<sp/>result<sp/>of<sp/>the<sp/>above<sp/>approximation<sp/>with<sp/>the<sp/>exact<sp/>solution<sp/>of</highlight></codeline>
<codeline lineno="644"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>trace<sp/>using<sp/>the<sp/>analytic<sp/>relation<sp/>for<sp/>Toeplitz<sp/>matrix.<sp/>See</highlight></codeline>
<codeline lineno="645"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:func:`imate.sample_matrices.toeplitz_traceinv`<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="646"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="647"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="648"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="649"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>imate.sample_matrices<sp/>import<sp/>toeplitz_traceinv</highlight></codeline>
<codeline lineno="650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>toeplitz_traceinv(2,<sp/>1,<sp/>size=1000000,<sp/>gram=True)</highlight></codeline>
<codeline lineno="651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>333333.2222222222</highlight></codeline>
<codeline lineno="652"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>It<sp/>can<sp/>be<sp/>seen<sp/>that<sp/>the<sp/>error<sp/>of<sp/>approximation<sp/>is<sp/>:math:`0.018<sp/>\\%`.<sp/>This</highlight></codeline>
<codeline lineno="654"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>accuracy<sp/>is<sp/>remarkable<sp/>considering<sp/>that<sp/>the<sp/>computation<sp/>on<sp/>such<sp/>a<sp/>large</highlight></codeline>
<codeline lineno="655"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>matrix<sp/>took<sp/>only<sp/>16<sp/>seconds.<sp/>Computing<sp/>the<sp/>trace<sp/>of<sp/>such<sp/>a<sp/>large<sp/>matrix</highlight></codeline>
<codeline lineno="656"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>using<sp/>any<sp/>of<sp/>the<sp/>exact<sp/>methods<sp/>(such<sp/>as<sp/>``exact``<sp/>or<sp/>``eigenvalue``)<sp/>is</highlight></codeline>
<codeline lineno="657"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>infeasible.</highlight></codeline>
<codeline lineno="658"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="659"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Plotting:**</highlight></codeline>
<codeline lineno="660"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="661"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>By<sp/>setting<sp/>``plot``<sp/>to<sp/>`True`,<sp/>plots<sp/>of<sp/>samples<sp/>during<sp/>Monte-Carlo</highlight></codeline>
<codeline lineno="662"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>iterations<sp/>and<sp/>the<sp/>convergence<sp/>of<sp/>their<sp/>mean<sp/>are<sp/>generated.</highlight></codeline>
<codeline lineno="663"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="664"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="665"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="666"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>A<sp/>=<sp/>toeplitz(2,<sp/>1,<sp/>size=1000000,<sp/>gram=True)</highlight></codeline>
<codeline lineno="667"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>traceinv(A,<sp/>method=&apos;slq&apos;,<sp/>min_num_samples=50,<sp/>max_num_samples=150,</highlight></codeline>
<codeline lineno="668"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_rtol=2e-4,<sp/>confidence_level=0.95,</highlight></codeline>
<codeline lineno="669"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlier_significance_level=0.001,<sp/>plot=True)</highlight></codeline>
<codeline lineno="670"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="671"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>image::<sp/>../_static/images/plots/traceinv_slq_convergence_1.png</highlight></codeline>
<codeline lineno="672"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:align:<sp/>center</highlight></codeline>
<codeline lineno="673"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:class:<sp/>custom-dark</highlight></codeline>
<codeline lineno="674"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="675"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>left<sp/>plot,<sp/>the<sp/>samples<sp/>are<sp/>shown<sp/>in<sp/>circles<sp/>and<sp/>the<sp/>cumulative<sp/>mean</highlight></codeline>
<codeline lineno="676"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>samples<sp/>is<sp/>shown<sp/>by<sp/>a<sp/>solid<sp/>black<sp/>curve.<sp/>The<sp/>shaded<sp/>area<sp/>corresponds</highlight></codeline>
<codeline lineno="677"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>95%<sp/>confidence<sp/>interval<sp/>:math:`\\pm<sp/>1.96<sp/>\\sigma`,<sp/>which<sp/>is<sp/>set<sp/>by</highlight></codeline>
<codeline lineno="678"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``confidence_level=0.95``.<sp/>The<sp/>samples<sp/>outside<sp/>the<sp/>interval<sp/>of<sp/>99.9%<sp/>are</highlight></codeline>
<codeline lineno="679"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>considered<sp/>outliers,<sp/>which<sp/>is<sp/>set<sp/>by<sp/>the<sp/>significance<sp/>level</highlight></codeline>
<codeline lineno="680"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``outlier_significance_level=0.001``.</highlight></codeline>
<codeline lineno="681"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="682"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>right<sp/>plot,<sp/>the<sp/>darker<sp/>shaded<sp/>area<sp/>in<sp/>the<sp/>interval<sp/>:math:`[0,<sp/>50]`</highlight></codeline>
<codeline lineno="683"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>shows<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>samples<sp/>and<sp/>is<sp/>set<sp/>by<sp/>``min_num_samples=50``.</highlight></codeline>
<codeline lineno="684"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>iterations<sp/>do<sp/>not<sp/>stop<sp/>till<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>iterations<sp/>is<sp/>passed.</highlight></codeline>
<codeline lineno="685"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>We<sp/>can<sp/>observe<sp/>that<sp/>sampling<sp/>is<sp/>terminated<sp/>after<sp/>120<sp/>iterations<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="686"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>relative<sp/>error<sp/>of<sp/>samples<sp/>reaches<sp/>0.02%<sp/>since<sp/>we<sp/>set<sp/>``error_rtol=2e-4``.</highlight></codeline>
<codeline lineno="687"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>lighter<sp/>shaded<sp/>area<sp/>in<sp/>the<sp/>interval<sp/>:math:`[120,<sp/>150]`<sp/>corresponds<sp/>to</highlight></codeline>
<codeline lineno="688"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>iterations<sp/>that<sp/>were<sp/>not<sp/>performed<sp/>to<sp/>reach<sp/>the<sp/>specified<sp/>maximum</highlight></codeline>
<codeline lineno="689"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>iterations<sp/>by<sp/>``max_num_samples=150``.</highlight></codeline>
<codeline lineno="690"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="691"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Matrix<sp/>operator:**</highlight></codeline>
<codeline lineno="692"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="693"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Use<sp/>an<sp/>object<sp/>of<sp/>:class:`imate.Matrix`<sp/>class<sp/>as<sp/>an<sp/>alternative<sp/>method<sp/>to</highlight></codeline>
<codeline lineno="694"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pass<sp/>the<sp/>matrix<sp/>`A`<sp/>to<sp/>the<sp/>`traceinv`<sp/>function.</highlight></codeline>
<codeline lineno="695"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="696"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="697"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:emphasize-lines:<sp/>8</highlight></codeline>
<codeline lineno="698"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="699"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Import<sp/>matrix<sp/>operator</highlight></codeline>
<codeline lineno="700"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>imate<sp/>import<sp/>toeplitz,<sp/>traceinv,<sp/>Matrix</highlight></codeline>
<codeline lineno="701"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="702"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Generate<sp/>a<sp/>sample<sp/>matrix<sp/>(a<sp/>toeplitz<sp/>matrix)</highlight></codeline>
<codeline lineno="703"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>A<sp/>=<sp/>toeplitz(2,<sp/>1,<sp/>size=100,<sp/>gram=True)</highlight></codeline>
<codeline lineno="704"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="705"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Create<sp/>a<sp/>matrix<sp/>operator<sp/>object<sp/>from<sp/>matrix<sp/>A</highlight></codeline>
<codeline lineno="706"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>Aop<sp/>=<sp/>Matrix(A)</highlight></codeline>
<codeline lineno="707"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="708"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Compute<sp/>the<sp/>trace<sp/>of<sp/>the<sp/>inverse<sp/>of<sp/>Aop</highlight></codeline>
<codeline lineno="709"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>traceinv(Aop,<sp/>method=&apos;slq&apos;)</highlight></codeline>
<codeline lineno="710"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>33.490062323020325</highlight></codeline>
<codeline lineno="711"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="712"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>An<sp/>advantage<sp/>of<sp/>passing<sp/>`Aop`<sp/>(instead<sp/>of<sp/>`A`)<sp/>to<sp/>the<sp/>`traceinv`<sp/>function</highlight></codeline>
<codeline lineno="713"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>will<sp/>be<sp/>clear<sp/>when<sp/>using<sp/>GPU.</highlight></codeline>
<codeline lineno="714"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="715"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Computation<sp/>on<sp/>GPU:**</highlight></codeline>
<codeline lineno="716"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="717"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>argument<sp/>``gpu=True``<sp/>performs<sp/>the<sp/>computations<sp/>on<sp/>GPU.<sp/>The<sp/>following</highlight></codeline>
<codeline lineno="718"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>example<sp/>uses<sp/>the<sp/>object<sp/>`Aop`<sp/>created<sp/>earlier.</highlight></codeline>
<codeline lineno="719"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="720"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="721"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="722"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Compute<sp/>thet<sp/>race<sp/>of<sp/>Aop</highlight></codeline>
<codeline lineno="723"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>traceinv(Aop,<sp/>method=&apos;slq&apos;,<sp/>gpu=True)</highlight></codeline>
<codeline lineno="724"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>33.490062323020325</highlight></codeline>
<codeline lineno="725"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="726"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>above<sp/>function<sp/>call<sp/>triggers<sp/>the<sp/>object<sp/>`Aop`<sp/>to<sp/>automatically<sp/>load<sp/>the</highlight></codeline>
<codeline lineno="727"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>matrix<sp/>data<sp/>on<sp/>the<sp/>GPU.</highlight></codeline>
<codeline lineno="728"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="729"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>One<sp/>could<sp/>have<sp/>used<sp/>`A`<sp/>instead<sp/>of<sp/>`Aop`<sp/>in<sp/>the<sp/>above.<sp/>However,<sp/>an</highlight></codeline>
<codeline lineno="730"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>advantage<sp/>of<sp/>using<sp/>`Aop`<sp/>(instead<sp/>of<sp/>the<sp/>matrix<sp/>`A`<sp/>directly)<sp/>is<sp/>that<sp/>by</highlight></codeline>
<codeline lineno="731"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>calling<sp/>the<sp/>above<sp/>`traceinv`<sp/>function<sp/>(or<sp/>another<sp/>function)<sp/>again<sp/>on<sp/>this</highlight></codeline>
<codeline lineno="732"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>matrix,<sp/>the<sp/>data<sp/>of<sp/>this<sp/>matrix<sp/>does<sp/>not<sp/>have<sp/>to<sp/>be<sp/>re-allocated<sp/>on<sp/>the<sp/>GPU</highlight></codeline>
<codeline lineno="733"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>device<sp/>again.<sp/>To<sp/>highlight<sp/>this<sp/>point,<sp/>call<sp/>the<sp/>above<sp/>function<sp/>again,<sp/>but</highlight></codeline>
<codeline lineno="734"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this<sp/>time,<sp/>set<sp/>``gram``<sp/>to<sp/>`True`<sp/>to<sp/>compute<sp/>something<sp/>different.</highlight></codeline>
<codeline lineno="735"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="736"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="737"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="738"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Compute<sp/>the<sp/>trace<sp/>of<sp/>the<sp/>inverse<sp/>of<sp/>Aop</highlight></codeline>
<codeline lineno="739"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>traceinv(Aop,<sp/>method=&apos;slq&apos;,<sp/>gpu=True,<sp/>gram=True)</highlight></codeline>
<codeline lineno="740"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>33.490062323020325</highlight></codeline>
<codeline lineno="741"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="742"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>above<sp/>example,<sp/>no<sp/>data<sp/>is<sp/>needed<sp/>to<sp/>be<sp/>transferred<sp/>from<sp/>CPU<sp/>host<sp/>to</highlight></codeline>
<codeline lineno="743"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>GPU<sp/>device<sp/>again.<sp/>However,<sp/>if<sp/>`A`<sp/>was<sp/>used<sp/>instead<sp/>of<sp/>`Aop`,<sp/>the<sp/>data<sp/>would</highlight></codeline>
<codeline lineno="744"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>have<sp/>been<sp/>transferred<sp/>from<sp/>CPU<sp/>to<sp/>GPU<sp/>again<sp/>for<sp/>the<sp/>second<sp/>time.<sp/>The<sp/>`Aop`</highlight></codeline>
<codeline lineno="745"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>object<sp/>holds<sp/>the<sp/>data<sp/>on<sp/>GPU<sp/>for<sp/>later<sp/>use<sp/>as<sp/>long<sp/>as<sp/>this<sp/>object<sp/>does<sp/>no</highlight></codeline>
<codeline lineno="746"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>go<sp/>out<sp/>of<sp/>the<sp/>scope<sp/>of<sp/>the<sp/>python<sp/>environment.<sp/>Once<sp/>the<sp/>variable<sp/>`Aop`<sp/>goes</highlight></codeline>
<codeline lineno="747"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>out<sp/>of<sp/>scope,<sp/>the<sp/>matrix<sp/>data<sp/>on<sp/>all<sp/>the<sp/>GPU<sp/>devices<sp/>will<sp/>be<sp/>cleaned</highlight></codeline>
<codeline lineno="748"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>automatically.</highlight></codeline>
<codeline lineno="749"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="750"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Affine<sp/>matrix<sp/>operator:**</highlight></codeline>
<codeline lineno="751"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="752"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Use<sp/>an<sp/>object<sp/>of<sp/>:class:`imate.AffineMatrixFunction`<sp/>to<sp/>create<sp/>the<sp/>linear</highlight></codeline>
<codeline lineno="753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>operator</highlight></codeline>
<codeline lineno="754"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="755"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="756"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="757"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathbf{A}(t)<sp/>=<sp/>\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{I}.</highlight></codeline>
<codeline lineno="758"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="759"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>object<sp/>:math:`\\mathbf{A}(t)`<sp/>can<sp/>be<sp/>passed<sp/>to<sp/>`traceinv`<sp/>function<sp/>with</highlight></codeline>
<codeline lineno="760"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>multiple<sp/>values<sp/>for<sp/>the<sp/>parameter<sp/>:math:`t`<sp/>to<sp/>compute<sp/>their<sp/>trace<sp/><sp/>all<sp/>at</highlight></codeline>
<codeline lineno="761"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>once,<sp/>as<sp/>follows.</highlight></codeline>
<codeline lineno="762"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="763"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="764"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:emphasize-lines:<sp/>8</highlight></codeline>
<codeline lineno="765"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Import<sp/>affine<sp/>matrix<sp/>function</highlight></codeline>
<codeline lineno="767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>imate<sp/>import<sp/>toeplitz,<sp/>traceinv,<sp/>AffineMatrixFunction</highlight></codeline>
<codeline lineno="768"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="769"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Generate<sp/>a<sp/>sample<sp/>matrix<sp/>(a<sp/>toeplitz<sp/>matrix)</highlight></codeline>
<codeline lineno="770"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>A<sp/>=<sp/>toeplitz(2,<sp/>1,<sp/>size=10000,<sp/>gram=True)</highlight></codeline>
<codeline lineno="771"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="772"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Create<sp/>a<sp/>matrix<sp/>operator<sp/>object<sp/>from<sp/>matrix<sp/>A</highlight></codeline>
<codeline lineno="773"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>Aop<sp/>=<sp/>AffineMatrixFunction(A)</highlight></codeline>
<codeline lineno="774"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="775"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>A<sp/>list<sp/>of<sp/>parameters<sp/>t<sp/>to<sp/>pass<sp/>to<sp/>Aop</highlight></codeline>
<codeline lineno="776"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>t<sp/>=<sp/>[0.5,<sp/>1.0,<sp/>1.5]</highlight></codeline>
<codeline lineno="777"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="778"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Compute<sp/>the<sp/>trace<sp/>the<sp/>inverse<sp/>of<sp/>Aop<sp/>for<sp/>all<sp/>parameters<sp/>t</highlight></codeline>
<codeline lineno="779"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>traceinv(Aop,<sp/>method=&apos;slq&apos;,<sp/>parameters=t,<sp/>min_num_samples=50,</highlight></codeline>
<codeline lineno="780"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_num_samples=150,<sp/>error_rtol=2e-3,</highlight></codeline>
<codeline lineno="781"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confidence_level=0.95,<sp/>outlier_significance_level=0.001,</highlight></codeline>
<codeline lineno="782"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plot=True,<sp/>verbose=True)</highlight></codeline>
<codeline lineno="783"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[2652.47318185<sp/>2238.5072489<sp/><sp/>1953.64615272]</highlight></codeline>
<codeline lineno="784"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="785"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>the<sp/>verbose<sp/>argument<sp/>is<sp/>shown<sp/>below.<sp/>In<sp/>the<sp/>results<sp/>section</highlight></codeline>
<codeline lineno="786"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>table<sp/>below,<sp/>each<sp/>row<sp/>`i`<sp/>under<sp/>the<sp/>`inquiry`<sp/>column<sp/>corresponds<sp/>to</highlight></codeline>
<codeline lineno="787"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>each<sp/>element<sp/>of<sp/>the<sp/>parameters<sp/>``t<sp/>=<sp/>[0.5,<sp/>1.0,<sp/>1.5]``<sp/>that<sp/>was<sp/>specified</highlight></codeline>
<codeline lineno="788"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>by<sp/>``parameters``<sp/>argument.</highlight></codeline>
<codeline lineno="789"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="790"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>literalinclude::<sp/>../_static/data/imate.traceinv.slq-verbose-2.txt</highlight></codeline>
<codeline lineno="791"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:language:<sp/>python</highlight></codeline>
<codeline lineno="792"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="793"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>the<sp/>plot<sp/>is<sp/>shown<sp/>below.<sp/>Each<sp/>colored<sp/>curve<sp/>corresponds<sp/>to</highlight></codeline>
<codeline lineno="794"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>parameter<sp/>in<sp/>``t<sp/>=<sp/>[0.5,<sp/>1.0,<sp/>1.5]``.</highlight></codeline>
<codeline lineno="795"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="796"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>image::<sp/>../_static/images/plots/traceinv_slq_convergence_2.png</highlight></codeline>
<codeline lineno="797"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:align:<sp/>center</highlight></codeline>
<codeline lineno="798"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:width:<sp/>80%</highlight></codeline>
<codeline lineno="799"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:class:<sp/>custom-dark</highlight></codeline>
<codeline lineno="800"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>inverse<sp/>matrix<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>cdef<sp/>Function*<sp/>matrix_function<sp/>=<sp/>new<sp/><ref refid="classInverse" kindref="compound">Inverse</ref>()</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>py_matrix_function<sp/>=<sp/>pyFunction()</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>py_matrix_function.set_function(matrix_function)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>trace,<sp/>info<sp/>=<sp/>trace_estimator(</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_matrix_function,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gram,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_num_samples,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_num_samples,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_atol,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_rtol,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confidence_level,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlier_significance_level,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lanczos_degree,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lanczos_tol,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orthogonalize,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_threads,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_gpu_devices,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plot,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpu)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>del<sp/>matrix_function</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>return_info:</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trace,<sp/>info</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trace</highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/traceinv/_slq_method.pyx"/>
  </compounddef>
</doxygen>
