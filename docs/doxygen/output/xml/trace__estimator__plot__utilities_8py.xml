<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="trace__estimator__plot__utilities_8py" kind="file" language="Python">
    <compoundname>trace_estimator_plot_utilities.py</compoundname>
    <innernamespace refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities">imate::_trace_estimator::trace_estimator_plot_utilities</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities" refkind="compound"><highlight class="comment">#<sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-FileType:<sp/>SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.special</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.._utilities.plot_utilities<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib,<sp/>plt</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.._utilities.plot_utilities<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_plot_settings,<sp/>save_plot</highlight></codeline>
<codeline lineno="20" refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1a5493bc208abc22214cc40ed200d4be3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>plot_modules_exist<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>plot_modules_exist<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1a980131643214ef893ac370c8923b67c6" refkind="member"><highlight class="normal">__all__<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;plot_convergence&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>===============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>remove<sp/>outliers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>===============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1a4856b82b9c4a9d17e5c2be1c505a010d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1a4856b82b9c4a9d17e5c2be1c505a010d" kindref="member">_remove_outliers</ref>(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_processed_order,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_used,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlier_confidence_level):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Flags<sp/>the<sp/>outlier<sp/>samples<sp/>and<sp/>sets<sp/>them<sp/>to<sp/>nan.<sp/>The<sp/>outlier<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>by<sp/>those<sp/>sample<sp/>points<sp/>that<sp/>are<sp/>outside<sp/>of<sp/>the<sp/>confidence<sp/>region</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>defined<sp/>by<sp/>a<sp/>confidence<sp/>level.</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>samples:<sp/>2D<sp/>array<sp/>of<sp/>size<sp/>``(max_num_samples,<sp/>num_inquiry)``.<sp/>Each</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column<sp/>is<sp/>the<sp/>set<sp/>of<sp/>all<sp/>samples<sp/>for<sp/>an<sp/>inquiry.<sp/>Some<sp/>of<sp/>these<sp/>samples</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>might<sp/>be<sp/>nan,<sp/>because,<sp/>often,<sp/>the<sp/>convergence<sp/>is<sp/>achieved<sp/>sooner<sp/>than</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``max_num_samples``,<sp/>hence,<sp/>with<sp/>the<sp/>fewer<sp/>number<sp/>of<sp/>processed<sp/>rows,</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>remaining<sp/>elements<sp/>in<sp/>a<sp/>row<sp/>remain<sp/>nan.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>samples_processed_order:<sp/>Due<sp/>to<sp/>parallel<sp/>processing,<sp/>the<sp/>rows<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``samples``<sp/>array<sp/>are<sp/>not<sp/>processed<sp/>sequentially.<sp/>This<sp/>1D<sp/>array<sp/>of<sp/>size</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``max_num_samples``<sp/>keeps<sp/>the<sp/>record<sp/>of<sp/>the<sp/>process<sp/>order<sp/>of<sp/>the<sp/>rows</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>``samples``.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>samples_process_order:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>num_samples_used:<sp/>1D<sp/>array<sp/>of<sp/>size<sp/>``num_inquiry``.<sp/>The<sp/>j-th</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>is<sp/>the<sp/>number<sp/>of<sp/>valid<sp/>(non-nan)<sp/>rows<sp/>of<sp/>the<sp/>j-th<sp/>column<sp/>of</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``samples``.<sp/>Thus,<sp/>it<sp/>indicates<sp/>how<sp/>many<sp/>samples<sp/>exists<sp/>for<sp/>the<sp/>j-th</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inquiry<sp/>out<sp/>of<sp/>the<sp/>max<sp/>number<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>num_samples_used:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>outlier_confidence_level:<sp/>The<sp/>confidence<sp/>level<sp/>of<sp/>the<sp/>outlier,<sp/>which</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>between<sp/>``0``<sp/>and<sp/>``1``.<sp/>For<sp/>example,<sp/>the<sp/>confidence<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``0.001``<sp/>means<sp/>that<sp/>the<sp/>outliers<sp/>are<sp/>in<sp/>the<sp/>1%<sp/>area<sp/>of<sp/>the<sp/>both<sp/>ends</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>tails<sp/>of<sp/>the<sp/>normal<sp/>distribution.<sp/>When<sp/>this<sp/>value<sp/>is<sp/>zero,<sp/>no</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlier<sp/>will<sp/>be<sp/>detected<sp/>and<sp/>removed.<sp/>A<sp/>larger<sp/>level<sp/>will<sp/>flag<sp/>more</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>as<sp/>outlier.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>confidence_level:<sp/>float</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>Returns<sp/>two<sp/>arrays:</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``cleaned_smaples``:<sp/>an<sp/>array<sp/>copied<sp/>from<sp/>``samples``,<sp/>but<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outliers<sp/>are<sp/>converted<sp/>to<sp/>``numpy.nan``.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>``outlier_indices``:<sp/>a<sp/>boolean<sp/>array<sp/>of<sp/>the<sp/>same<sp/>shape<sp/>as<sp/>``samples``</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>the<sp/>flagged<sp/>outliers<sp/>are<sp/>set<sp/>to<sp/>True.</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:<sp/>rtype:<sp/>tuple<sp/>(numpy.ndarray)</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>num_inquiries<sp/>=<sp/>samples.shape[1]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>outlier_indices<sp/>=<sp/>numpy.zeros(samples.shape,<sp/>dtype=bool)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>cleaned_samples<sp/>=<sp/>numpy.copy(samples)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Quantile<sp/>of<sp/>the<sp/>region<sp/>that<sp/>is<sp/>&quot;not&quot;<sp/>considered<sp/>as<sp/>outlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>non_outlier_confidence_level<sp/>=<sp/>1.0<sp/>-<sp/>outlier_confidence_level</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>outlier_quantile<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numpy.sqrt(2)<sp/>*<sp/>scipy.special.erfinv(non_outlier_confidence_level)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_inquiries):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_indices<sp/>=<sp/>samples_processed_order[:num_samples_used[j]]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_samples<sp/>=<sp/>samples[sample_indices,<sp/>j]</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Mean<sp/>and<sp/>std<sp/>of<sp/>the<sp/>j-th<sp/>column<sp/>of<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>=<sp/>numpy.nanmean(valid_samples)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std<sp/>=<sp/>numpy.nanstd(valid_samples)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>those<sp/>samples<sp/>outside<sp/>of<sp/>the<sp/>confidence<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference<sp/>=<sp/>numpy.abs(samples[:,<sp/>j]<sp/>-<sp/>mean)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlier_indices[:,<sp/>j]<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(difference<sp/>&gt;<sp/>outlier_quantile<sp/>*<sp/>std).astype(bool)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Remove<sp/>outliers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleaned_samples[outlier_indices[:,<sp/>j],<sp/>j]<sp/>=<sp/>numpy.nan</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cleaned_samples,<sp/>outlier_indices</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">#<sp/>compute<sp/>cumulative<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ab9d29de8d95a73fda97ac3868aadddfc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ab9d29de8d95a73fda97ac3868aadddfc" kindref="member">_compute_cumulative_statistics</ref>(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_processed_order,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_used,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confidence_level):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>mean<sp/>and<sp/>error<sp/>as<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>progresses.<sp/>The<sp/>output</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>are<sp/>the<sp/>means,<sp/>absolute<sp/>and<sp/>relative<sp/>errors<sp/>of<sp/>the<sp/>samples.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>cumulative<sp/>here<sp/>refers<sp/>to<sp/>the<sp/>progressive<sp/>mean<sp/>or<sp/>error<sp/>of<sp/>the<sp/>samples</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>from<sp/>the<sp/>first<sp/>to<sp/>the<sp/>current<sp/>row<sp/>as<sp/>the<sp/>row<sp/>progresses<sp/>by<sp/>introducing<sp/>more</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>rows<sp/>to<sp/>the<sp/>samples<sp/>data.<sp/>For<sp/>example,<sp/>the<sp/>i-th<sp/>row<sp/>and<sp/>j-th<sp/>column<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>cumulative<sp/>mean<sp/>is<sp/>the<sp/>mean<sp/>of<sp/>rows<sp/>0:i-1<sp/>and<sp/>j-th<sp/>column<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>samples:<sp/>2D<sp/>array<sp/>of<sp/>size<sp/>``(max_num_samples,<sp/>num_inquiry)``.<sp/>Each</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column<sp/>is<sp/>the<sp/>set<sp/>of<sp/>all<sp/>samples<sp/>for<sp/>an<sp/>inquiry.<sp/>Some<sp/>of<sp/>these<sp/>samples</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>might<sp/>be<sp/>nan,<sp/>because,<sp/>often,<sp/>the<sp/>convergence<sp/>is<sp/>achieved<sp/>sooner<sp/>than</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``max_num_samples``,<sp/>hence,<sp/>with<sp/>the<sp/>fewer<sp/>number<sp/>of<sp/>processed<sp/>rows,</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>remaining<sp/>elements<sp/>in<sp/>a<sp/>row<sp/>remain<sp/>nan.</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>samples_processed_order:<sp/>Due<sp/>to<sp/>parallel<sp/>processing,<sp/>the<sp/>rows<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``samples``<sp/>array<sp/>are<sp/>not<sp/>processed<sp/>sequentially.<sp/>This<sp/>1D<sp/>array<sp/>of<sp/>size</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``max_num_samples``<sp/>keeps<sp/>the<sp/>record<sp/>of<sp/>the<sp/>process<sp/>order<sp/>of<sp/>the<sp/>rows</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>``samples``.</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>samples_process_order:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>num_samples_used:<sp/>1D<sp/>array<sp/>of<sp/>size<sp/>``num_inquiry``.<sp/>The<sp/>j-th</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>is<sp/>the<sp/>number<sp/>of<sp/>valid<sp/>(non-nan)<sp/>rows<sp/>of<sp/>the<sp/>j-th<sp/>column<sp/>of</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``samples``.<sp/>Thus,<sp/>it<sp/>indicates<sp/>how<sp/>many<sp/>samples<sp/>exists<sp/>for<sp/>the<sp/>j-th</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inquiry<sp/>out<sp/>of<sp/>the<sp/>max<sp/>number<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>num_samples_used:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>confidence_level:<sp/>The<sp/>confidence<sp/>level<sp/>of<sp/>the<sp/>error,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>between<sp/>``0``<sp/>and<sp/>``1``.<sp/>For<sp/>example,<sp/>the<sp/>confidence<sp/>level<sp/>of<sp/>``0.95``</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>means<sp/>that<sp/>the<sp/>confidence<sp/>region<sp/>consists<sp/>of<sp/>95%<sp/>of<sp/>the<sp/>area<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal<sp/>distribution<sp/>of<sp/>the<sp/>samples.</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>confidence_level:<sp/>float</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>A<sp/>list<sp/>of<sp/>cumulative<sp/>mean,<sp/>absolute<sp/>error,<sp/>and<sp/>relative<sp/>error.</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Each<sp/>of<sp/>these<sp/>three<sp/>arrays<sp/>have<sp/>the<sp/>same<sp/>shape<sp/>as<sp/>``samples``.</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:rtype:<sp/>list</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Allocate<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>cumulative_mean<sp/>=<sp/>numpy.empty_like(samples)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>cumulative_abs_error<sp/>=<sp/>numpy.empty_like(samples)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>cumulative_rel_error<sp/>=<sp/>numpy.empty_like(samples)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>arrays<sp/>to<sp/>nan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>cumulative_mean[:,<sp/>:]<sp/>=<sp/>numpy.nan</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>cumulative_abs_error[:,<sp/>:]<sp/>=<sp/>numpy.nan</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>cumulative_rel_error[:,<sp/>:]<sp/>=<sp/>numpy.nan</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Quantile<sp/>based<sp/>on<sp/>the<sp/>confidence<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>quantile<sp/>=<sp/>numpy.sqrt(2)<sp/>*<sp/>scipy.special.erfinv(confidence_level)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>num_inquiries<sp/>=<sp/>samples.shape[1]</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_inquiries):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_samples_used[j]):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>the<sp/>non-nan<sp/>elements<sp/>of<sp/>the<sp/>j-th<sp/>column<sp/>of<sp/>samples<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>first<sp/>to<sp/>the<sp/>i-th<sp/>processed<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_indices<sp/>=<sp/>samples_processed_order[:i+1]</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_valid<sp/>=<sp/>samples[sample_indices,<sp/>j]</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_valid<sp/>=<sp/>samples_valid[~numpy.isnan(samples_valid)]</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>samples_valid.size<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>might<sp/>happen<sp/>on<sp/>the<sp/>first<sp/>processed<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_mean[i,<sp/>j]<sp/>=<sp/>numpy.nan</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_abs_error[i,<sp/>j]<sp/>=<sp/>numpy.nan</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_rel_error[i,<sp/>j]<sp/>=<sp/>numpy.nan</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>mean<sp/>and<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_mean[i,<sp/>j]<sp/>=<sp/>numpy.nanmean(samples_valid)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standard_deviation<sp/>=<sp/>numpy.nanstd(samples_valid)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_abs_error[i,<sp/>j]<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantile<sp/>*<sp/>standard_deviation<sp/>/<sp/>numpy.sqrt(i+1)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_rel_error[i,<sp/>j]<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_abs_error[i,<sp/>j]<sp/>/<sp/>cumulative_mean[i,<sp/>j]</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cumulative_mean,<sp/>cumulative_abs_error,<sp/>cumulative_rel_error</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">#<sp/>============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">#<sp/>plot<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">#<sp/>============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ad7047cd3e950939f55c0351853e756e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ad7047cd3e950939f55c0351853e756e1" kindref="member">_plot_samples</ref>(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_processed_order,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_used,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confidence_level,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_mean,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_abs_error):</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>When<sp/>``num_inquiries``<sp/>is<sp/>``1``,<sp/>this<sp/>function<sp/>is<sp/>called<sp/>to<sp/>plot<sp/>the</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>samples<sp/>and<sp/>their<sp/>cumulative<sp/>mean.<sp/>When<sp/>``num_inquiries``<sp/>is<sp/>more<sp/>than<sp/>one,</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>samples<sp/>of<sp/>different<sp/>inquiries<sp/>cannot<sp/>be<sp/>plotted<sp/>in<sp/>the<sp/>same<sp/>axes<sp/>since</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>value<sp/>of<sp/>trace<sp/>might<sp/>be<sp/>very<sp/>difference<sp/>for<sp/>each<sp/>case.</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>ax:<sp/>axes<sp/>object</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>ax:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>samples:<sp/>2D<sp/>array<sp/>of<sp/>size<sp/>``(max_num_samples,<sp/>num_inquiry)``.<sp/>Each</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column<sp/>is<sp/>the<sp/>set<sp/>of<sp/>all<sp/>samples<sp/>for<sp/>an<sp/>inquiry.<sp/>Some<sp/>of<sp/>these<sp/>samples</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>might<sp/>be<sp/>nan,<sp/>because,<sp/>often,<sp/>the<sp/>convergence<sp/>is<sp/>achieved<sp/>sooner<sp/>than</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``max_num_samples``,<sp/>hence,<sp/>with<sp/>the<sp/>fewer<sp/>number<sp/>of<sp/>processed<sp/>rows,</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>remaining<sp/>elements<sp/>in<sp/>a<sp/>row<sp/>remain<sp/>nan.</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>samples_processed_order:<sp/>Due<sp/>to<sp/>parallel<sp/>processing,<sp/>the<sp/>rows<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``samples``<sp/>array<sp/>are<sp/>not<sp/>processed<sp/>sequentially.<sp/>This<sp/>1D<sp/>array<sp/>of<sp/>size</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``max_num_samples``<sp/>keeps<sp/>the<sp/>record<sp/>of<sp/>the<sp/>process<sp/>order<sp/>of<sp/>the<sp/>rows</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>``samples``.</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>samples_process_order:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>num_samples_used:<sp/>1D<sp/>array<sp/>of<sp/>size<sp/>``num_inquiry``.<sp/>The<sp/>j-th</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>is<sp/>the<sp/>number<sp/>of<sp/>valid<sp/>(non-nan)<sp/>rows<sp/>of<sp/>the<sp/>j-th<sp/>column<sp/>of</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``samples``.<sp/>Thus,<sp/>it<sp/>indicates<sp/>how<sp/>many<sp/>samples<sp/>exists<sp/>for<sp/>the<sp/>j-th</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inquiry<sp/>out<sp/>of<sp/>the<sp/>max<sp/>number<sp/>of<sp/>samples.<sp/>Note<sp/>that<sp/>this<sp/>is<sp/>different</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>than<sp/>``num_samples_processed``,<sp/>because<sp/>the<sp/>j-th<sp/>column<sp/>might<sp/>converge</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sooner<sp/>than<sp/>others<sp/>and<sp/>thus,<sp/>less<sp/>number<sp/>of<sp/>samples<sp/>were<sp/>used<sp/>for<sp/>it.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>num_samples_used:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>confidence_level:<sp/>The<sp/>confidence<sp/>level<sp/>of<sp/>the<sp/>error,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>between<sp/>``0``<sp/>and<sp/>``1``.<sp/>For<sp/>example,<sp/>the<sp/>confidence<sp/>level<sp/>of<sp/>``0.95``</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>means<sp/>that<sp/>the<sp/>confidence<sp/>region<sp/>consists<sp/>of<sp/>95%<sp/>of<sp/>the<sp/>area<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal<sp/>distribution<sp/>of<sp/>the<sp/>samples.</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>confidence_level:<sp/>float</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>cumulative_mean:<sp/>2D<sp/>array<sp/>of<sp/>size<sp/>``(max_num_samples,<sp/>num_inqiries).</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>cumulative_mean:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>cumulative_abs_error:<sp/>2D<sp/>array<sp/>of<sp/>size<sp/>``(max_num_samples,</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_inqiries).</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>cumulative_abs_error:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>plot_modules_exist:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ImportError(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>import<sp/>modules<sp/>for<sp/>plotting.<sp/>Either<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;install<sp/>&quot;matplotlib&quot;<sp/>and<sp/>&quot;seaborn&quot;<sp/>packages,<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;or<sp/>set<sp/>&quot;plot=False&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>plot<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceimate_1_1__utilities_1_1plot__utilities_1ac5be3859295616ee4d82fdcaab5faedd" kindref="member">load_plot_settings</ref>()</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ImportError(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>import<sp/>modules<sp/>for<sp/>plotting.<sp/>Either<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;install<sp/>&quot;matplotlib&quot;<sp/>and<sp/>&quot;seaborn&quot;<sp/>packages,<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;or<sp/>set<sp/>&quot;plot=False&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>samples<sp/>has<sp/>multiple<sp/>columns,<sp/>only<sp/>the<sp/>first<sp/>column<sp/>(inquiry)<sp/>plotted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>inquiry<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>abscissa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>1<sp/>+<sp/>numpy.arange(num_samples_used[inquiry])</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reorder<sp/>rows<sp/>of<sp/>samples<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>they<sp/>were<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>rows_order<sp/>=<sp/>samples_processed_order[:num_samples_used[inquiry]]</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>_samples<sp/>=<sp/>samples[rows_order,<sp/>inquiry]</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>need<sp/>to<sp/>reorder<sp/>the<sp/>rows<sp/>of<sp/>cumulative<sp/>mean<sp/>and<sp/>error,<sp/>since,<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>they<sp/>were<sp/>computed<sp/>in<sp/>:func:`compute_cumulative_statistics`<sp/>function,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>they<sp/>were<sp/>reordered<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>_mean<sp/>=<sp/>cumulative_mean[:num_samples_used[inquiry],<sp/>inquiry]</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>_abs_error<sp/>=<sp/>cumulative_abs_error[:num_samples_used[inquiry],<sp/>inquiry]</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>samples<sp/>as<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.plot(x,<sp/>_samples,<sp/><sp/></highlight><highlight class="stringliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/>markersize=4,<sp/>color=</highlight><highlight class="stringliteral">&apos;grey&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;estimates&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>cumulative<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.plot(x,<sp/>_mean,<sp/>color=</highlight><highlight class="stringliteral">&apos;black&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;mean&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>confidence<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.fill_between(x,<sp/>_mean<sp/>-<sp/>_abs_error,<sp/>_mean<sp/>+<sp/>_abs_error,<sp/>color=</highlight><highlight class="stringliteral">&apos;black&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha=0.25,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label=(str(100.0*confidence_level).strip(</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">).strip(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&apos;$\%$<sp/>confidence<sp/>region&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_xlabel(</highlight><highlight class="stringliteral">&apos;sample<sp/>index&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_ylabel(</highlight><highlight class="stringliteral">&apos;trace<sp/>estimates&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_title(</highlight><highlight class="stringliteral">&apos;Stochastic<sp/>Estimates<sp/>and<sp/>Mean<sp/>of<sp/>Samples&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_xlim([x[0],<sp/>x[-1]])</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.legend()</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ensure<sp/>x<sp/>ticks<sp/>are<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.xaxis.set_major_locator(matplotlib.ticker.MaxNLocator(integer=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">#<sp/>plot<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ac297a0e6e32b51a8fc6308b93c724869" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ac297a0e6e32b51a8fc6308b93c724869" kindref="member">_plot_error</ref>(</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_used,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_num_samples,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_num_samples,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_atol,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_rtol,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converged,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_abs_error,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_rel_error):</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Plots<sp/>cumulative<sp/>errors.<sp/>When<sp/>``num_inquiries``<sp/>is<sp/>``1``,<sp/>it<sp/>plots<sp/>both</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>absolute<sp/>and<sp/>relative<sp/>errors<sp/>(on<sp/>left<sp/>and<sp/>right<sp/>y<sp/>axes)<sp/>on<sp/>the<sp/>same<sp/>axes.</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>However,<sp/>when<sp/>``num_inquiries``<sp/>is<sp/>more<sp/>than<sp/>one,<sp/>it<sp/>only<sp/>plots<sp/>the</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>relative<sp/>error.<sp/>This<sp/>is<sp/>because,<sp/>with<sp/>the<sp/>multiple<sp/>number<sp/>of<sp/>inquiries,<sp/>the</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>absolute<sp/>error<sp/>of<sp/>each<sp/>can<sp/>be<sp/>on<sp/>different<sp/>plot<sp/>scales<sp/>and<sp/>they<sp/>cannot<sp/>be</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>contained<sp/>in<sp/>the<sp/>same<sp/>scale<sp/>of<sp/>the<sp/>plot.</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>ax:<sp/>axes<sp/>object</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>ax:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>num_samples_used:<sp/>1D<sp/>array<sp/>of<sp/>size<sp/>``num_inquiry``.<sp/>The<sp/>j-th</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>is<sp/>the<sp/>number<sp/>of<sp/>valid<sp/>(non-nan)<sp/>rows<sp/>of<sp/>the<sp/>j-th<sp/>column<sp/>of</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``samples``.<sp/>Thus,<sp/>it<sp/>indicates<sp/>how<sp/>many<sp/>samples<sp/>exists<sp/>for<sp/>the<sp/>j-th</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inquiry<sp/>out<sp/>of<sp/>the<sp/>max<sp/>number<sp/>of<sp/>samples.<sp/>Note<sp/>that<sp/>this<sp/>is<sp/>different</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>than<sp/>``num_samples_processed``,<sp/>because<sp/>the<sp/>j-th<sp/>column<sp/>might<sp/>converge</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sooner<sp/>than<sp/>others<sp/>and<sp/>thus,<sp/>less<sp/>number<sp/>of<sp/>samples<sp/>were<sp/>used<sp/>for<sp/>it.</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>num_samples_used:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>min_num_samples:<sp/>Minimum<sp/>number<sp/>of<sp/>samples.<sp/>In<sp/>the<sp/>iterations<sp/>below</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>number,<sp/>the<sp/>convergence<sp/>is<sp/>now<sp/>checked.</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>min_num_samples:<sp/>int</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>max_num_samples:<sp/>Maximum<sp/>number<sp/>of<sp/>samples.<sp/>This<sp/>is<sp/>also<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>row<sp/>of<sp/>``samples``<sp/>array.</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>max_num_samples:<sp/>int</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>error_atol:<sp/>Absolute<sp/>error<sp/>tolerance</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>error_atol:<sp/>float</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>error_rtol:<sp/>Relative<sp/>error<sp/>tolerance</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>error_rtol:<sp/>float</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>converged:<sp/>1D<sp/>boolean<sp/>array<sp/>of<sp/>size<sp/>``num_inquiries``<sp/>and<sp/>indicates</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>of<sp/>the<sp/>inquiries<sp/>are<sp/>converged<sp/>at<sp/>their<sp/>final<sp/>state.</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>converged:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>cumulative_abs_error:<sp/>2D<sp/>array<sp/>of<sp/>size<sp/>``(max_num_samples,</highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_inqiries).</highlight></codeline>
<codeline lineno="355"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>cumulative_abs_error:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>cumulative_rel_error:<sp/>2D<sp/>array<sp/>of<sp/>size<sp/>``(max_num_samples,</highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_inqiries).</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>cumulative_rel_error:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>plot_modules_exist:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ImportError(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>import<sp/>modules<sp/>for<sp/>plotting.<sp/>Either<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;install<sp/>&quot;matplotlib&quot;<sp/>and<sp/>&quot;seaborn&quot;<sp/>packages,<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;or<sp/>set<sp/>&quot;plot=False&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>plot<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceimate_1_1__utilities_1_1plot__utilities_1ac5be3859295616ee4d82fdcaab5faedd" kindref="member">load_plot_settings</ref>()</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ImportError(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>import<sp/>modules<sp/>for<sp/>plotting.<sp/>Either<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;install<sp/>&quot;matplotlib&quot;<sp/>and<sp/>&quot;seaborn&quot;<sp/>packages,<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;or<sp/>set<sp/>&quot;plot=False&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>relative_color<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;black&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>absolute_color<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;darkgrey&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>num_inquiries<sp/>=<sp/>cumulative_abs_error.shape[1]</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_inquiries<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax2<sp/>=<sp/>ax.twinx()</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Scale<sp/>the<sp/>twin<sp/>y<sp/>axis<sp/>(for<sp/>absolute<sp/>error)<sp/>so<sp/>that<sp/>the<sp/>final<sp/>value<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>relative<sp/>and<sp/>absolute<sp/>plots<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>max_rel_error<sp/>=<sp/>numpy.nanmax(numpy.nanmax(cumulative_rel_error))<sp/>*<sp/>100.0</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>final_abs_error<sp/>=<sp/>cumulative_abs_error[num_samples_used[0]-1,<sp/>0]</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>final_rel_error<sp/>=<sp/>cumulative_rel_error[num_samples_used[0]-1,<sp/>0]<sp/>*<sp/>100.0</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Match<sp/>the<sp/>high<sp/>of<sp/>the<sp/>final<sp/>value<sp/>of<sp/>the<sp/>absolute<sp/>error<sp/>with<sp/>relative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>ylim_abs_plot<sp/>=<sp/>final_abs_error<sp/>*<sp/>max_rel_error<sp/>/<sp/>final_rel_error</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extra<sp/>space<sp/>for<sp/>the<sp/>y<sp/>axis<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>ylim_scale<sp/>=<sp/>1.1</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>x_min<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>x_max<sp/>=<sp/>numpy.max(num_samples_used)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Colormaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_inquiries<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Concatenate<sp/>two<sp/>colormaps,<sp/>in<sp/>total,<sp/>18<sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors1<sp/>=<sp/>matplotlib.cm.tab10.colors</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors2<sp/>=<sp/>matplotlib.cm.Dark2.colors</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors<sp/>=<sp/>numpy.r_[colors1,<sp/>colors2]</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;black&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>inquiry<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_inquiries):</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Abscissa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>1<sp/>+<sp/>numpy.arange(num_samples_used[inquiry])</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>relative<sp/>and<sp/>absolute<sp/>errors<sp/>for<sp/>each<sp/>inquiry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_num_samples_used<sp/>=<sp/>num_samples_used[inquiry]</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rel_error<sp/>=<sp/>cumulative_rel_error[:_num_samples_used,<sp/>inquiry]<sp/>*<sp/>100.0</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_abs_error<sp/>=<sp/>cumulative_abs_error[:_num_samples_used,<sp/>inquiry]</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>With<sp/>more<sp/>than<sp/>one<sp/>inquiry,<sp/>do<sp/>not<sp/>plot<sp/>absolute<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_inquiries<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax2.plot(x,<sp/>_abs_error,<sp/>color=absolute_color,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label=</highlight><highlight class="stringliteral">&apos;absolute<sp/>error&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.plot(x,<sp/>_rel_error,<sp/>color=relative_color,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label=</highlight><highlight class="stringliteral">&apos;relative<sp/>error&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.plot(x,<sp/>_rel_error,<sp/>color=colors[inquiry],</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label=</highlight><highlight class="stringliteral">&apos;inquiry:<sp/>%d&apos;</highlight><highlight class="normal"><sp/>%<sp/>(inquiry+1))</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Relative<sp/>error<sp/>tolerance<sp/>limit<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.plot([x_min,<sp/>max_num_samples],<sp/>[error_rtol,<sp/>error_rtol],</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--&apos;</highlight><highlight class="normal">,<sp/>color=relative_color,<sp/>label=</highlight><highlight class="stringliteral">&apos;relative<sp/>error<sp/>tol&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_inquiries<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Absolute<sp/>error<sp/>tolerance<sp/>limit<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax2.plot([x_min,<sp/>max_num_samples],<sp/>[error_atol,<sp/>error_atol],</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;--&apos;</highlight><highlight class="normal">,<sp/>color=absolute_color,<sp/>label=</highlight><highlight class="stringliteral">&apos;absolute<sp/>error<sp/>tol&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Vertical<sp/>dotted<sp/>line<sp/>showing<sp/>where<sp/>the<sp/>min_num_samples<sp/>starts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.plot([min_num_samples,<sp/>min_num_samples],<sp/>[0.,<sp/>max_rel_error*ylim_scale],</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">,<sp/>color=</highlight><highlight class="stringliteral">&apos;grey&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;min<sp/>num<sp/>samples&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>a<sp/>dot<sp/>at<sp/>each<sp/>converged<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>dot_label_inserted<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>inquiry<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_inquiries):</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>1<sp/>+<sp/>numpy.arange(num_samples_used[inquiry])</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_num_samples_used<sp/>=<sp/>num_samples_used[inquiry]</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rel_error<sp/>=<sp/>cumulative_rel_error[:_num_samples_used,<sp/>inquiry]<sp/>*<sp/>100.0</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_abs_error<sp/>=<sp/>cumulative_abs_error[:_num_samples_used,<sp/>inquiry]</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>converged[inquiry]:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Insert<sp/>a<sp/>label<sp/>for<sp/>dot<sp/>only<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>dot_label_inserted:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dot_label_inserted<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.plot(x[-1],<sp/>_rel_error[-1],<sp/></highlight><highlight class="stringliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/>color=colors[inquiry],</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zorder=20,<sp/>markersize=4,<sp/>label=</highlight><highlight class="stringliteral">&apos;convergence<sp/>reached&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.plot(x[-1],<sp/>_rel_error[-1],<sp/></highlight><highlight class="stringliteral">&apos;o&apos;</highlight><highlight class="normal">,<sp/>color=colors[inquiry],</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zorder=20,<sp/>markersize=4)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Before<sp/>min_num_samples<sp/>and<sp/>after<sp/>max_num_samples,<sp/>shade<sp/>plot<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.axvspan(x_min,<sp/>min_num_samples,<sp/>color=</highlight><highlight class="stringliteral">&apos;grey&apos;</highlight><highlight class="normal">,<sp/>alpha=0.2,<sp/>lw=0,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label=</highlight><highlight class="stringliteral">&apos;convergence<sp/>skipped&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.axvspan(x_max,<sp/>max_num_samples,<sp/>color=</highlight><highlight class="stringliteral">&apos;grey&apos;</highlight><highlight class="normal">,<sp/>alpha=0.07,<sp/>lw=0)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_xlabel(</highlight><highlight class="stringliteral">&apos;sample<sp/>index&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_ylabel(</highlight><highlight class="stringliteral">&apos;relative<sp/>error&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_title(</highlight><highlight class="stringliteral">&apos;Convergence<sp/>of<sp/>Errors&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_xlim([x_min,<sp/>max_num_samples])</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_ylim([0,<sp/>max_rel_error*ylim_scale])</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Display<sp/>yticks<sp/>as<sp/>percent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.yaxis.set_major_formatter(matplotlib.ticker.PercentFormatter())</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ensure<sp/>x<sp/>ticks<sp/>are<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.xaxis.set_major_locator(matplotlib.ticker.MaxNLocator(integer=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_inquiries<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax2.set_ylabel(</highlight><highlight class="stringliteral">&apos;absolute<sp/>error&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax2.set_ylim([0,<sp/>ylim_abs_plot*ylim_scale])</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Legend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>lines,<sp/>labels<sp/>=<sp/>ax.get_legend_handles_labels()</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_inquiries<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>With<sp/>one<sp/>inquiry,<sp/>legend<sp/>contains<sp/>both<sp/>relative<sp/>and<sp/>absolute<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>where<sp/>each<sp/>correspond<sp/>to<sp/>the<sp/>left<sp/>and<sp/>right<sp/>(twin)<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines2,<sp/>labels2<sp/>=<sp/>ax2.get_legend_handles_labels()</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_lines<sp/>=<sp/>lines<sp/>+<sp/>lines2</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_labels<sp/>=<sp/>labels<sp/>+<sp/>labels2</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.legend(all_lines,<sp/>all_labels)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>num_inquiries<sp/>&lt;<sp/>11:</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>With<sp/>less<sp/>than<sp/>11<sp/>inquiries,<sp/>use<sp/>single<sp/>column<sp/>legend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.legend(lines,<sp/>labels,<sp/>bbox_to_anchor=(1.01,<sp/>1.022),</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc=</highlight><highlight class="stringliteral">&apos;upper<sp/>left&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>With<sp/>equal<sp/>or<sp/>more<sp/>than<sp/>11<sp/>inquiries,<sp/>use<sp/>two<sp/>column<sp/>legend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.legend(lines,<sp/>labels,<sp/>bbox_to_anchor=(1.01,<sp/>1.022),</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc=</highlight><highlight class="stringliteral">&apos;upper<sp/>left&apos;</highlight><highlight class="normal">,<sp/>ncol=2)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Bring<sp/>the<sp/>plots<sp/>of<sp/>the<sp/>original<sp/>axis<sp/>above<sp/>the<sp/>plots<sp/>of<sp/>the<sp/>twin<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_zorder(1)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.patch.set_visible(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">#<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">#<sp/>plot<sp/>convergence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">#<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1a5b5b11b077873546cc4bd81e9d38c991" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1a5b5b11b077873546cc4bd81e9d38c991" kindref="member">plot_convergence</ref>(info):</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="514"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Plots<sp/>samples,<sp/>cumulative<sp/>mean,<sp/>absolute<sp/>and<sp/>relative<sp/>error.</highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="516"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>info:<sp/>A<sp/>dictionary<sp/>of<sp/>all<sp/>output<sp/>info.</highlight></codeline>
<codeline lineno="517"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type:<sp/>dict</highlight></codeline>
<codeline lineno="518"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>plot_modules_exist:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ImportError(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>import<sp/>modules<sp/>for<sp/>plotting.<sp/>Either<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;install<sp/>&quot;matplotlib&quot;<sp/>and<sp/>&quot;seaborn&quot;<sp/>packages,<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;or<sp/>set<sp/>&quot;plot=False&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>plot<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceimate_1_1__utilities_1_1plot__utilities_1ac5be3859295616ee4d82fdcaab5faedd" kindref="member">load_plot_settings</ref>()</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ImportError(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>import<sp/>modules<sp/>for<sp/>plotting.<sp/>Either<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;install<sp/>&quot;matplotlib&quot;<sp/>and<sp/>&quot;seaborn&quot;<sp/>packages,<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;or<sp/>set<sp/>&quot;plot=False&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>variables<sp/>from<sp/>info<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>num_inquiries<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;matrix&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;num_inquiries&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>error_atol<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;error&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;error_atol&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>error_rtol<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;error&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;error_rtol&apos;</highlight><highlight class="normal">]<sp/>*<sp/>100.0</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>confidence_level<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;error&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;confidence_level&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>num_samples_used<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;convergence&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;num_samples_used&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>min_num_samples<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;convergence&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;min_num_samples&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>max_num_samples<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;convergence&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;max_num_samples&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>converged<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;convergence&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;converged&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>samples<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;convergence&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;samples&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>samples_processed_order<sp/>=<sp/>info[</highlight><highlight class="stringliteral">&apos;convergence&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;samples_processed_order&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>scalars<sp/>to<sp/>arrays<sp/>for<sp/>easier<sp/>indexing.<sp/>When<sp/>num_inquiries<sp/>is<sp/>1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>all<sp/>variables<sp/>below<sp/>are<sp/>scalars.<sp/>These<sp/>are<sp/>converted<sp/>to<sp/>arrays<sp/>of<sp/>size<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>numpy.isscalar(num_samples_used):</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_used<sp/>=<sp/>numpy.array([num_samples_used])</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>numpy.isscalar(converged):</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converged<sp/>=<sp/>numpy.array([converged])</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>samples.ndim<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples<sp/>=<sp/>numpy.array([samples]).T</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>numpy.isscalar(converged):</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converged<sp/>=<sp/>numpy.array([converged])</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Remove<sp/>outliers<sp/>from<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>outlier_confidence_level<sp/>=<sp/>0.001</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>cleaned_samples,<sp/>outlier_indices<sp/>=<sp/><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1a4856b82b9c4a9d17e5c2be1c505a010d" kindref="member">_remove_outliers</ref>(</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_processed_order,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_used,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlier_confidence_level)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>cumulative<sp/>mean<sp/>and<sp/>errors<sp/>(as<sp/>sample<sp/>indices<sp/>progress)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>cumulative_mean,<sp/>cumulative_abs_error,<sp/>cumulative_rel_error<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ab9d29de8d95a73fda97ac3868aadddfc" kindref="member">_compute_cumulative_statistics</ref>(</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleaned_samples,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_processed_order,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_used,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confidence_level)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Different<sp/>plots<sp/>depending<sp/>on<sp/>number<sp/>of<sp/>inquiries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_inquiries<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>both<sp/>samples<sp/>(on<sp/>left<sp/>axis)<sp/>and<sp/>relative<sp/>error<sp/>(on<sp/>right<sp/>axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig,<sp/>ax<sp/>=<sp/>plt.subplots(ncols=2,<sp/>figsize=(11,<sp/>5))</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ad7047cd3e950939f55c0351853e756e1" kindref="member">_plot_samples</ref>(ax[0],<sp/>cleaned_samples,<sp/>samples_processed_order,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_used,<sp/>confidence_level,<sp/>cumulative_mean,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_abs_error)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ac297a0e6e32b51a8fc6308b93c724869" kindref="member">_plot_error</ref>(ax[1],<sp/>num_samples_used,<sp/>min_num_samples,<sp/>max_num_samples,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_atol,<sp/>error_rtol,<sp/>converged,<sp/>cumulative_abs_error,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_rel_error)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>only<sp/>relative<sp/>error<sp/>(one<sp/>axis)<sp/>but<sp/>for<sp/>all<sp/>inquiries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig,<sp/>ax<sp/>=<sp/>plt.subplots(ncols=1,<sp/>figsize=(8.3,<sp/>5))</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceimate_1_1__trace__estimator_1_1trace__estimator__plot__utilities_1ac297a0e6e32b51a8fc6308b93c724869" kindref="member">_plot_error</ref>(ax,<sp/>num_samples_used,<sp/>min_num_samples,<sp/>max_num_samples,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_atol,<sp/>error_rtol,<sp/>converged,<sp/>cumulative_abs_error,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative_rel_error)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.tight_layout()</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>graphical<sp/>backend<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>matplotlib.get_backend()<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;agg&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>write<sp/>the<sp/>plot<sp/>as<sp/>SVG<sp/>file<sp/>in<sp/>the<sp/>current<sp/>working<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceimate_1_1__utilities_1_1plot__utilities_1a16effb74c6816ea6e0efbd6cbd19a494" kindref="member">save_plot</ref>(plt,<sp/></highlight><highlight class="stringliteral">&apos;Convergence&apos;</highlight><highlight class="normal">,<sp/>transparent_background=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/_trace_estimator/trace_estimator_plot_utilities.py"/>
  </compounddef>
</doxygen>
