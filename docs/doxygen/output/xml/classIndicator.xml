<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classIndicator" kind="class" language="C++" prot="public">
    <compoundname>Indicator</compoundname>
    <basecompoundref refid="classFunction" prot="public" virt="non-virtual">Function</basecompoundref>
    <includes refid="indicator_8h" local="no">indicator.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classIndicator_1a8d450e257642fc51645f848cb5a5451f" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Indicator::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/indicator.h" line="48" column="16" bodyfile="/home/sia/work/github/imate/imate/functions/indicator.h" bodystart="48" bodyend="-1"/>
        <referencedby refid="classIndicator_1a808a21e63c2b7449a16ddcbfc440bb08" compoundref="indicator_8cpp" startline="41" endline="51">function</referencedby>
        <referencedby refid="classIndicator_1a1411d2e28c0694c1a2624f1b0ec8c7a3" compoundref="indicator_8cpp" startline="26" endline="30">Indicator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classIndicator_1ada3620d0c382c18d25c98c276e3fd4eb" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Indicator::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/indicator.h" line="49" column="16" bodyfile="/home/sia/work/github/imate/imate/functions/indicator.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="classIndicator_1a808a21e63c2b7449a16ddcbfc440bb08" compoundref="indicator_8cpp" startline="41" endline="51">function</referencedby>
        <referencedby refid="classIndicator_1a1411d2e28c0694c1a2624f1b0ec8c7a3" compoundref="indicator_8cpp" startline="26" endline="30">Indicator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classIndicator_1a1411d2e28c0694c1a2624f1b0ec8c7a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Indicator::Indicator</definition>
        <argsstring>(double a_, double b_)</argsstring>
        <name>Indicator</name>
        <param>
          <type>double</type>
          <declname>a_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b_</declname>
        </param>
        <briefdescription>
<para>Sets the default parameters <computeroutput>a</computeroutput> and <bold>c</bold>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/indicator.h" line="44" column="9" bodyfile="/home/sia/work/github/imate/imate/functions/indicator.cpp" bodystart="26" bodyend="30"/>
        <references refid="classIndicator_1a8d450e257642fc51645f848cb5a5451f" compoundref="indicator_8h" startline="48">a</references>
        <references refid="classIndicator_1ada3620d0c382c18d25c98c276e3fd4eb" compoundref="indicator_8h" startline="49">b</references>
      </memberdef>
      <memberdef kind="function" id="classIndicator_1a808a21e63c2b7449a16ddcbfc440bb08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float Indicator::function</definition>
        <argsstring>(const float lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1a603a10dedebd89b477a23a5f8f705935">function</reimplements>
        <param>
          <type>const float</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/indicator.h" line="45" column="23" bodyfile="/home/sia/work/github/imate/imate/functions/indicator.cpp" bodystart="41" bodyend="51"/>
        <references refid="classIndicator_1a8d450e257642fc51645f848cb5a5451f" compoundref="indicator_8h" startline="48">a</references>
        <references refid="classIndicator_1ada3620d0c382c18d25c98c276e3fd4eb" compoundref="indicator_8h" startline="49">b</references>
      </memberdef>
      <memberdef kind="function" id="classIndicator_1ab68d7d45a8119a18a7f79cb202ea66e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Indicator::function</definition>
        <argsstring>(const double lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1abb983ee238adf9b49ed7f1a7442e3019">function</reimplements>
        <param>
          <type>const double</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/indicator.h" line="46" column="24" bodyfile="/home/sia/work/github/imate/imate/functions/indicator.cpp" bodystart="62" bodyend="72"/>
        <references refid="classIndicator_1a8d450e257642fc51645f848cb5a5451f" compoundref="indicator_8h" startline="48">a</references>
        <references refid="classIndicator_1ada3620d0c382c18d25c98c276e3fd4eb" compoundref="indicator_8h" startline="49">b</references>
      </memberdef>
      <memberdef kind="function" id="classIndicator_1a6f68ee56a8dab67c7192789f47e5fdda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long double</type>
        <definition>long double Indicator::function</definition>
        <argsstring>(const long double lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1a1e83c965a17529850d96015fb2d91968">function</reimplements>
        <param>
          <type>const long double</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/indicator.h" line="47" column="29" bodyfile="/home/sia/work/github/imate/imate/functions/indicator.cpp" bodystart="83" bodyend="93"/>
        <references refid="classIndicator_1a8d450e257642fc51645f848cb5a5451f" compoundref="indicator_8h" startline="48">a</references>
        <references refid="classIndicator_1ada3620d0c382c18d25c98c276e3fd4eb" compoundref="indicator_8h" startline="49">b</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the function <formula id="47">$ f: \lambda \mapsto H(\lambda - a) - H(\lambda - b) $</formula> where <formula id="48">$ H $</formula> is the Heaviside step function. </para>
    </briefdescription>
    <detaileddescription>
<para>The matrix function <formula id="39">$ f: \mathbb{R}^{n \times n} \to \mathbb{R}^{n \times n} $</formula> is used in</para>
<para><formula id="40">\[ \mathrm{trace} \left( f(\mathbf{A}) \right). \]</formula></para>
<para>However, instead of a matrix function, the equivalent scalar function <formula id="41">$ f: \mathbb{R} \to \mathbb{R} $</formula> is defiend which acts on the eigenvalues of the matrix. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Function</label>
        <link refid="classFunction"/>
      </node>
      <node id="1">
        <label>Indicator</label>
        <link refid="classIndicator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Function</label>
        <link refid="classFunction"/>
      </node>
      <node id="1">
        <label>Indicator</label>
        <link refid="classIndicator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/github/imate/imate/functions/indicator.h" line="41" column="1" bodyfile="/home/sia/work/github/imate/imate/functions/indicator.h" bodystart="42" bodyend="50"/>
    <listofallmembers>
      <member refid="classIndicator_1a8d450e257642fc51645f848cb5a5451f" prot="public" virt="non-virtual"><scope>Indicator</scope><name>a</name></member>
      <member refid="classIndicator_1ada3620d0c382c18d25c98c276e3fd4eb" prot="public" virt="non-virtual"><scope>Indicator</scope><name>b</name></member>
      <member refid="classIndicator_1a808a21e63c2b7449a16ddcbfc440bb08" prot="public" virt="virtual"><scope>Indicator</scope><name>function</name></member>
      <member refid="classIndicator_1ab68d7d45a8119a18a7f79cb202ea66e8" prot="public" virt="virtual"><scope>Indicator</scope><name>function</name></member>
      <member refid="classIndicator_1a6f68ee56a8dab67c7192789f47e5fdda" prot="public" virt="virtual"><scope>Indicator</scope><name>function</name></member>
      <member refid="classIndicator_1a1411d2e28c0694c1a2624f1b0ec8c7a3" prot="public" virt="non-virtual"><scope>Indicator</scope><name>Indicator</name></member>
      <member refid="classFunction_1a3b03f7cf0b75d16edebdda1dee1db6fd" prot="public" virt="virtual"><scope>Indicator</scope><name>~Function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
