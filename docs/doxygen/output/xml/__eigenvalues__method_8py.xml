<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="__eigenvalues__method_8py" kind="file" language="Python">
    <compoundname>_eigenvalues_method.py</compoundname>
    <innerclass refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod" prot="public">imate::interpolator::_eigenvalues_method::EigenvaluesMethod</innerclass>
    <innernamespace refid="namespaceimate_1_1interpolator_1_1__eigenvalues__method">imate::interpolator::_eigenvalues_method</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceimate_1_1interpolator_1_1__eigenvalues__method" refkind="compound"><highlight class="comment">#<sp/>SPDX-FileCopyrightText:<sp/>Copyright<sp/>2021,<sp/>Siavash<sp/>Ameli<sp/>&lt;sameli@berkeley.edu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SPDX-FileType:<sp/>SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>license<sp/>found<sp/>in<sp/>the<sp/>LICENSE.txt<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>._interpolant_base<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>InterpolantBase</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Eigenvalues<sp/>Method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod" kindref="compound">EigenvaluesMethod</ref>(<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase" kindref="compound">InterpolantBase</ref>):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Note:<sp/>B<sp/>is<sp/>always<sp/>None<sp/>(identity)<sp/>in<sp/>EIG<sp/>method.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>trace<sp/>of<sp/>inverse<sp/>of<sp/>an<sp/>invertible<sp/>matrix<sp/>:math:`\\mathbf{A}<sp/>+</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>\\mathbf{B}`<sp/>using<sp/>eigenvalues<sp/>of<sp/>:math:`\\mathbf{A}`<sp/><sp/>and</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:math:`\\mathbf{B}`.</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>trace<sp/>of<sp/>computed<sp/>by</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathrm{trace}\\left(<sp/>(\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{B})^{-1}<sp/>\\right)</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\\sum_{i<sp/>=<sp/>1}^n<sp/>\\frac{1}{\\lambda_i<sp/>+<sp/>t<sp/>\\mu_i}</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>where<sp/>:math:`\\lambda_i`<sp/>is<sp/>the<sp/>eigenvalue<sp/>of<sp/>:math:`\\mathbf{A}`</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>:math:`\\mu_i`<sp/>is<sp/>the<sp/>eigenvalue<sp/>of<sp/>:math:`\\mathbf{B}`.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>does<sp/>not<sp/>accept<sp/>interpolant<sp/>points<sp/>as<sp/>the<sp/>result<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>interpolated.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Class<sp/>Inheritance:**</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>inheritance-diagram::<sp/>imate.InterpolateTraceinv.EigenvaluesMethod</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:parts:<sp/>1</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>A:<sp/>Invertible<sp/>matrix,<sp/>can<sp/>be<sp/>either<sp/>dense<sp/>or<sp/>sparse<sp/>matrix.</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>A:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>B:<sp/>Invertible<sp/>matrix,<sp/>can<sp/>be<sp/>either<sp/>dense<sp/>or<sp/>sparse<sp/>matrix.</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>B:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>options:<sp/>A<sp/>dictionary<sp/>of<sp/>input<sp/>arguments<sp/>for</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:mod:`imate.traceinv.traceinv`<sp/>module.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>options:<sp/>dict</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>non_zero_ratio:<sp/>The<sp/>ratio<sp/>of<sp/>the<sp/>number<sp/>of<sp/>eigenvalues<sp/>to<sp/>be<sp/>assumed</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-zero<sp/>over<sp/>all<sp/>eigenvalues.<sp/>This<sp/>option<sp/>is<sp/>only<sp/>used<sp/>for<sp/>sparse</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrices<sp/>where<sp/>as<sp/>assume<sp/>some<sp/>of<sp/>eigenvalues<sp/>are<sp/>very<sp/>small<sp/>and<sp/>we<sp/>are</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>interested<sp/>in<sp/>computing<sp/>non-zero<sp/>eigenvalues.<sp/>In<sp/>practice,<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>possible<sp/>to<sp/>compute<sp/>all<sp/>eigenvalues<sp/>of<sp/>a<sp/>large<sp/>sparse<sp/>matrix.</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default<sp/>is<sp/>``0.9``<sp/>indicating<sp/>to<sp/>compute<sp/>90<sp/>percent<sp/>of<sp/>the<sp/>eigenvalues</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>largest<sp/>magnitude<sp/>and<sp/>assume<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>eigenvalues<sp/>are</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zero.</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>non_zero_ratio:<sp/>int</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>tol:<sp/>tol<sp/>of<sp/>computing<sp/>eigenvalues.<sp/>This<sp/>option<sp/>is<sp/>only</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>for<sp/>sparse<sp/>matrices.<sp/>Default<sp/>value<sp/>is<sp/>``1e-3``.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>tol:<sp/>float</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>verbose:<sp/>If<sp/>``True``,<sp/>prints<sp/>some<sp/>information<sp/>on<sp/>the<sp/>computation</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process.<sp/>Default<sp/>is<sp/>``False``.</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:type<sp/>verbose:<sp/>bool</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>input<sp/>matrices<sp/>:math:`\\mathbf{A}`<sp/>and<sp/>:math:`\\mathbf{B}`<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>either<sp/>sparse<sp/>or<sp/>dense.<sp/>In<sp/>case<sp/>of<sp/>a<sp/>**sparse<sp/>matrix**,<sp/>only<sp/>some<sp/>of</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>eigenvalues<sp/>with<sp/>the<sp/>largest<sp/>magnitude<sp/>is<sp/>computed<sp/><sp/>and<sp/>the<sp/>rest<sp/>of</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its<sp/>eigenvalues<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>negligible.<sp/>The<sp/>ratio<sp/>of<sp/>computed</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenvalues<sp/>over<sp/>the<sp/>total<sp/>number<sp/>of<sp/>eigenvalues<sp/>can<sp/>be<sp/>set<sp/>by</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``non_zero_ratio``.<sp/>The<sp/>tolerance<sp/>at<sp/>which<sp/>the<sp/>eigenvalues<sp/>are<sp/>computed</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>set<sp/>by<sp/>``tol``.</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>**Example:**</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>can<sp/>be<sp/>invoked<sp/>from</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:class:`imate.InterpolateTraceinv.InterpolateTraceinv`<sp/>module<sp/>using</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>``method=&apos;EIG&apos;``<sp/>argument.</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>code-block::<sp/>python</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>imate<sp/>import<sp/>generate_matrix</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>imate<sp/>import<sp/>InterpolateTraceinv</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Create<sp/>a<sp/>symmetric<sp/>positive-definite<sp/>matrix,<sp/>size<sp/>(20**2,<sp/>20**2)</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>A<sp/>=<sp/>generate_matrix(size=20)</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Create<sp/>an<sp/>object<sp/>that<sp/>interpolates<sp/>trace<sp/>of<sp/>inverse<sp/>of<sp/>A+tI</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>where<sp/>I<sp/>is<sp/>identity<sp/>matrix.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>TI<sp/>=<sp/>InterpolateTraceinv(A,<sp/>InterpolatiionMethod=&apos;EIG&apos;)</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>#<sp/>Interpolate<sp/>A+tI<sp/>at<sp/>some<sp/>input<sp/>point<sp/>t</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>t<sp/>=<sp/>4e-1</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>trace<sp/>=<sp/>TI.interpolate(t)</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>seealso::</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>of<sp/>the<sp/>``EIG``<sp/>method<sp/>is<sp/>identical<sp/>with<sp/>the<sp/>exact<sp/>method</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``EXT``,<sp/>which<sp/>is<sp/>given<sp/>by</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:class:`imate.InterpolateTraceinv.ExactMethod`.</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a6f6ccf22be6c08698f0fadfde577a265" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a6f6ccf22be6c08698f0fadfde577a265" kindref="member">__init__</ref>(self,<sp/>A,<sp/>B=None,<sp/>p=0,<sp/>options={},<sp/>non_zero_ratio=0.9,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tol=1e-3,<sp/>verbose=False):</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>of<sp/>the<sp/>class,<sp/>which<sp/>initializes<sp/>the<sp/>bases<sp/>class<sp/>and</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computes<sp/>eigenvalues<sp/>of<sp/>the<sp/>input<sp/>matrices.</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>B<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;In<sp/>&quot;EIG&quot;<sp/>method,<sp/>&quot;B&quot;<sp/>should<sp/>be<sp/>&quot;None&quot;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Base<sp/>class<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(EigenvaluesMethod,<sp/>self).<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a6f6ccf22be6c08698f0fadfde577a265" kindref="member">__init__</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A,<sp/>B=B,<sp/>p=p,<sp/>ti=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>options=options,<sp/>verbose=verbose)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a9d108df7040e107e91d1124175da8f23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a9d108df7040e107e91d1124175da8f23" kindref="member">non_zero_ratio</ref>non_zero_ratio<sp/>=<sp/>non_zero_ratio</highlight></codeline>
<codeline lineno="136" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a93e5b6518bf054a939c4817be5f30279" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a93e5b6518bf054a939c4817be5f30279" kindref="member">tol</ref>tol<sp/>=<sp/>tol</highlight></codeline>
<codeline lineno="137" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac7cef414659b58736e7fb3bcb60f6969" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac7cef414659b58736e7fb3bcb60f6969" kindref="member">q</ref><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a3b9c4b14514208e5a2d01a8a5b0135ff" kindref="member">q</ref>q<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>Interpolator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac6d3e9a978b81ef3a23338f1988373d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac6d3e9a978b81ef3a23338f1988373d3" kindref="member">A_eigenvalues</ref>A_eigenvalues<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a122573f0452962f884c401547c4141a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a122573f0452962f884c401547c4141a1" kindref="member">B_eigenvalues</ref>B_eigenvalues<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a64797c3a9604e757acf7b704b86e65df" kindref="member">initialize_interpolator</ref>initialize_interpolator()</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=======================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>initialize<sp/>interpolator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=======================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a64797c3a9604e757acf7b704b86e65df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a64797c3a9604e757acf7b704b86e65df" kindref="member">initialize_interpolator</ref>(self):</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>``A_eigenvalues``<sp/>and<sp/>``B_eigenvalues``<sp/><sp/>member<sp/>data<sp/>of</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>class.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>note::</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>matrix<sp/>``A``<sp/>is<sp/>sparse,<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>find<sp/>all<sp/>of</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its<sp/>eigenvalues.<sp/>We<sp/>only<sp/>find<sp/>a<sp/>fraction<sp/>of<sp/>the<sp/>number<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenvalues<sp/>with<sp/>the<sp/>larges<sp/>magnitude<sp/>and<sp/>we<sp/>assume<sp/>the<sp/>rest<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenvalues<sp/>are<sp/>close<sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" kindref="member">verbose</ref>verbose:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Initialize<sp/>interpolator<sp/>...&apos;</highlight><highlight class="normal">,<sp/>end=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>eigenvalues<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a31d0bedf8669872d29106669eaab276b" kindref="member">use_sparse</ref>use_sparse:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>is<sp/>sparse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac6d3e9a978b81ef3a23338f1988373d3" kindref="member">A_eigenvalues</ref>A_eigenvalues<sp/>=<sp/>numpy.zeros(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>90%<sp/>of<sp/>eigenvalues,<sp/>assume<sp/>the<sp/>rest<sp/>are<sp/>close<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumNoneZeroEig<sp/>=<sp/>int(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n*self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a9d108df7040e107e91d1124175da8f23" kindref="member">non_zero_ratio</ref>non_zero_ratio)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac6d3e9a978b81ef3a23338f1988373d3" kindref="member">A_eigenvalues</ref>A_eigenvalues[:NumNoneZeroEig]<sp/>=<sp/>scipy.sparse.linalg.eigsh(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" kindref="member">A</ref>A,<sp/>NumNoneZeroEig,<sp/>which=</highlight><highlight class="stringliteral">&apos;LM&apos;</highlight><highlight class="normal">,<sp/>tol=self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a93e5b6518bf054a939c4817be5f30279" kindref="member">tol</ref>tol,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_eigenvectors=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>is<sp/>dense<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac6d3e9a978b81ef3a23338f1988373d3" kindref="member">A_eigenvalues</ref>A_eigenvalues<sp/>=<sp/>scipy.linalg.eigh(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a6d9b5725d5e4ac144f05bc2828ad3903" kindref="member">A</ref>A,<sp/>eigvals_only=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_finite=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>eigenvalues<sp/>of<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a83e399ae8baf97e70d45ca82dda5bf47" kindref="member">B_is_identity</ref>B_is_identity:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>B<sp/>is<sp/>identity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a122573f0452962f884c401547c4141a1" kindref="member">B_eigenvalues</ref>B_eigenvalues<sp/>=<sp/>numpy.ones(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n,<sp/>dtype=float)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>B<sp/>is<sp/>not<sp/>identity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a31d0bedf8669872d29106669eaab276b" kindref="member">use_sparse</ref>use_sparse:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>B<sp/>is<sp/>sparse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a122573f0452962f884c401547c4141a1" kindref="member">B_eigenvalues</ref>B_eigenvalues<sp/>=<sp/>numpy.zeros(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>90%<sp/>of<sp/>eigenvalues,<sp/>assume<sp/>the<sp/>rest<sp/>are<sp/>close<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumNoneZeroEig<sp/>=<sp/>int(self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n*self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a9d108df7040e107e91d1124175da8f23" kindref="member">non_zero_ratio</ref>non_zero_ratio)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a122573f0452962f884c401547c4141a1" kindref="member">B_eigenvalues</ref>B_eigenvalues[:NumNoneZeroEig]<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scipy.sparse.linalg.eigsh(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref>B,<sp/>NumNoneZeroEig,<sp/>which=</highlight><highlight class="stringliteral">&apos;LM&apos;</highlight><highlight class="normal">,<sp/>tol=self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a93e5b6518bf054a939c4817be5f30279" kindref="member">tol</ref>tol,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_eigenvectors=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>B<sp/>is<sp/>dense<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a122573f0452962f884c401547c4141a1" kindref="member">B_eigenvalues</ref>B_eigenvalues<sp/>=<sp/>scipy.linalg.eigh(</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a972be0a7f92c9a95b1de5ba0826af59e" kindref="member">B</ref>B,<sp/>eigvals_only=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>check_finite=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1af274c888accf15a25209c72a67a1b203" kindref="member">verbose</ref>verbose:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;<sp/>Done.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Interpolate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1aca5f42655c0505dedc8f815aac0514da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1aca5f42655c0505dedc8f815aac0514da" kindref="member">interpolate</ref>(self,<sp/>t):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>function<sp/>:math:`\\mathrm{trace}\\left(<sp/>(\\mathbf{A}<sp/>+</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>\\mathbf{B})^{-1}<sp/>\\right)`<sp/>at<sp/>the<sp/>input<sp/>point<sp/>:math:`t`<sp/>by</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..<sp/>math::</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\mathrm{trace}\\left(<sp/>(\\mathbf{A}<sp/>+<sp/>t<sp/>\\mathbf{B})^{-1}</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\\right)<sp/>=<sp/>\\sum_{i<sp/>=<sp/>1}^n<sp/>\\frac{1}{\\lambda_i<sp/>+<sp/>t<sp/>\\mu_i}</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>:math:`\\lambda_i`<sp/>is<sp/>the<sp/>eigenvalue<sp/>of<sp/>:math:`\\mathbf{A}`.</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/><sp/>:math:`\\mu_i`<sp/>is<sp/>the<sp/>eigenvalue<sp/>of<sp/>:math:`\\mathbf{B}`.</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:param:<sp/>t:<sp/>An<sp/>inquiry<sp/>point,<sp/>which<sp/>can<sp/>be<sp/>a<sp/>single<sp/>number,<sp/>or<sp/>an<sp/>array</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>numbers.</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:type<sp/>t:<sp/>float<sp/>or<sp/>numpy.array</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:return:<sp/>The<sp/>exact<sp/>value<sp/>of<sp/>the<sp/>trace<sp/>of<sp/>inverse<sp/>of<sp/>``A<sp/>+<sp/>tB``.</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:rtype:<sp/>float</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>trace<sp/>using<sp/>eigenvalues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eig_An<sp/>=<sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1ac6d3e9a978b81ef3a23338f1988373d3" kindref="member">A_eigenvalues</ref>A_eigenvalues<sp/>+<sp/>t<sp/>*<sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a122573f0452962f884c401547c4141a1" kindref="member">B_eigenvalues</ref>B_eigenvalues</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a8276d941b2814da54e2c1c58325e62df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a8276d941b2814da54e2c1c58325e62df" kindref="member">p</ref><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>logdet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logdet_<sp/>=<sp/>numpy.sum(numpy.log(numpy.abs(eig_An)))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schatten<sp/>=<sp/>numpy.exp(logdet_/self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracep<sp/>=<sp/>numpy.sum(eig_An**self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a8276d941b2814da54e2c1c58325e62df" kindref="member">p</ref><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schatten<sp/>=<sp/>(tracep/self.<ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a1d37a6482c31673943f3fa11f7a5fdb1" kindref="member">n</ref>n)**(1.0/self.<ref refid="classimate_1_1interpolator_1_1__eigenvalues__method_1_1EigenvaluesMethod_1a8276d941b2814da54e2c1c58325e62df" kindref="member">p</ref><ref refid="classimate_1_1interpolator_1_1__interpolant__base_1_1InterpolantBase_1a35608d8c2939dda243393b737bcd04c6" kindref="member">p</ref>p)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schatten</highlight></codeline>
    </programlisting>
    <location file="/home/sia/work/ADCP/Noise-Estimation/code/imate/imate/interpolator/_eigenvalues_method.py"/>
  </compounddef>
</doxygen>
