<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classLogarithm" kind="class" language="C++" prot="public">
    <compoundname>Logarithm</compoundname>
    <basecompoundref refid="classFunction" prot="public" virt="non-virtual">Function</basecompoundref>
    <includes refid="logarithm_8h" local="no">logarithm.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLogarithm_1aac7c57d6fa2c60e1d8235894405b5caf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float Logarithm::function</definition>
        <argsstring>(const float lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1a603a10dedebd89b477a23a5f8f705935">function</reimplements>
        <param>
          <type>const float</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/logarithm.h" line="43" column="23" bodyfile="/home/sia/work/github/imate/imate/functions/logarithm.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classLogarithm_1a57bd4094533400976784a94b2516341f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Logarithm::function</definition>
        <argsstring>(const double lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1abb983ee238adf9b49ed7f1a7442e3019">function</reimplements>
        <param>
          <type>const double</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/logarithm.h" line="44" column="24" bodyfile="/home/sia/work/github/imate/imate/functions/logarithm.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classLogarithm_1adad5c679c0bf152b0bda05fdd4ee357c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long double</type>
        <definition>long double Logarithm::function</definition>
        <argsstring>(const long double lambda_) const</argsstring>
        <name>function</name>
        <reimplements refid="classFunction_1a1e83c965a17529850d96015fb2d91968">function</reimplements>
        <param>
          <type>const long double</type>
          <declname>lambda_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lambda_</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalue (or singular value) of matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of matrix function for the given eigenvalue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sia/work/github/imate/imate/functions/logarithm.h" line="45" column="29" bodyfile="/home/sia/work/github/imate/imate/functions/logarithm.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the function <formula id="50">$ f: \lambda \mapsto \log(\lambda) $</formula>. </para>
    </briefdescription>
    <detaileddescription>
<para>The matrix function <formula id="39">$ f: \mathbb{R}^{n \times n} \to \mathbb{R}^{n \times n} $</formula> is used in</para>
<para><formula id="40">\[ \mathrm{trace} \left( f(\mathbf{A}) \right). \]</formula></para>
<para>However, instead of a matrix function, the equivalent scalar function <formula id="41">$ f: \mathbb{R} \to \mathbb{R} $</formula> is defiend which acts on the eigenvalues of the matrix. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Function</label>
        <link refid="classFunction"/>
      </node>
      <node id="1">
        <label>Logarithm</label>
        <link refid="classLogarithm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Function</label>
        <link refid="classFunction"/>
      </node>
      <node id="1">
        <label>Logarithm</label>
        <link refid="classLogarithm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sia/work/github/imate/imate/functions/logarithm.h" line="40" column="1" bodyfile="/home/sia/work/github/imate/imate/functions/logarithm.h" bodystart="41" bodyend="46"/>
    <listofallmembers>
      <member refid="classLogarithm_1aac7c57d6fa2c60e1d8235894405b5caf" prot="public" virt="virtual"><scope>Logarithm</scope><name>function</name></member>
      <member refid="classLogarithm_1a57bd4094533400976784a94b2516341f" prot="public" virt="virtual"><scope>Logarithm</scope><name>function</name></member>
      <member refid="classLogarithm_1adad5c679c0bf152b0bda05fdd4ee357c" prot="public" virt="virtual"><scope>Logarithm</scope><name>function</name></member>
      <member refid="classFunction_1a3b03f7cf0b75d16edebdda1dee1db6fd" prot="public" virt="virtual"><scope>Logarithm</scope><name>~Function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
